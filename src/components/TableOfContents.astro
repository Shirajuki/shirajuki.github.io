---
import type { TOCEntry } from "@/lib/utils";

type Props = {
  toc: TOCEntry[];
};
const { toc } = Astro.props;
---

<section class="toc justify-self-end">
  <h2 class="text-base font-bold mb-2">Table of Contents</h2>
  <ul>
    {
      toc?.map((heading) => (
        <li>
          <a href={`#${heading.slug}`} class={`depth-${heading.depth}`}>
            {heading.text}
          </a>
        </li>
      ))
    }
  </ul>
</section>

<script>
  let hasSetup = false;
  function setupTOC() {
    if (hasSetup) return;
    hasSetup = true;

    const headings = document.querySelectorAll(
      "section.prose h2, section.prose h3, section.prose h4, section.prose h5, section.prose h6",
    );
    const observer = new IntersectionObserver((entries) => {
      for (const entry of entries) {
        const id = entry.target.getAttribute("id");
        const link = document.querySelector(`.toc li a[href="#${id}"]`);
        if (!link) return;

        if (entry.intersectionRatio > 0) {
          link.classList["add"]("text-white");
        } else {
          link.classList["remove"]("text-white");
        }
      }
    });
    for (const heading of headings) {
      observer.observe(heading);
    }
  }

  setupTOC();
</script>
