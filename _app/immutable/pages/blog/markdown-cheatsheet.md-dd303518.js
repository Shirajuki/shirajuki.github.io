import{S as ua,i as ca,s as _a,C as Jt,w as ma,x as da,y as va,z as Ea,A as Qs,f as ka,t as ha,B as wa,V as Ks,l as i,r,a as n,m as o,n as f,u as p,h as l,c as u,p as c,H as Ha,b as s,J as a,E as ya}from"../../chunks/index-a24079f7.js";import{L as xa}from"../../chunks/layout-c3125ff1.js";function Ta(g){let _,d,h,T,m,E,C,ee,$l,Ye,R,le,Fl,$e,A,Xs=`<code class="language-undefined"># Sample H1
## Sample H2
### Sample H3</code>`,Fe,te,Nl,Ne,L,se,Ul,Ue,z,ae,Wl,We,B,ie,jl,je,Je,Qe,M,oe,Jl,Ke,b,Ql,xe,Kl,Vl,Ve,Xe,Ze,O,fe,Xl,ge,G,Zs=`<code class="language-undefined">&#96;&#96;&#96;ruby
# The Greeter class
class Greeter
  def initialize(name)
    @name = name.capitalize
  end

  def salute
    puts &quot;Hello #&#123;@name&#125;!&quot;
  end
end

# Create a new object
g = Greeter.new(&quot;world&quot;)

# Output &quot;Hello World!&quot;
g.salute
&#96;&#96;&#96;</code>`,el,re,Zl,ll,S,gs=`<code class="language-ruby"><span class="token comment"># The Greeter class</span>
<span class="token keyword">class</span> <span class="token class-name">Greeter</span>
  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">initialize</span></span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
    <span class="token variable">@name</span> <span class="token operator">=</span> name<span class="token punctuation">.</span>capitalize
  <span class="token keyword">end</span>

  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">salute</span></span>
    puts <span class="token string-literal"><span class="token string">"Hello </span><span class="token interpolation"><span class="token delimiter punctuation">#&#123;</span><span class="token content"><span class="token variable">@name</span></span><span class="token delimiter punctuation">&#125;</span></span><span class="token string">!"</span></span>
  <span class="token keyword">end</span>
<span class="token keyword">end</span>

<span class="token comment"># Create a new object</span>
g <span class="token operator">=</span> <span class="token class-name">Greeter</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"world"</span></span><span class="token punctuation">)</span>

<span class="token comment"># Output "Hello World!"</span>
g<span class="token punctuation">.</span>salute</code>`,tl,w,gl,et,lt,Te,tt,sl,D,pe,st,al,Y,at,be,it,il,$,ea='<code class="language-undefined">This is some code: &#96;echo something&#96;</code>',ol,ne,ot,fl,F,ft,Ie,rt,rl,pl,nl,N,ue,pt,ul,v,qe,nt,ut,Pe,ct,_t,mt,Ce,dt,vt,Re,Et,cl,_l,ml,U,ce,kt,dl,H,_e,ht,y,wt,Ht,Ae,yt,vl,W,la=`<code class="language-undefined">This is [an example](http://example.com/ &quot;Title&quot;) inline link.
[This link](http://example.net/) has no title attribute.</code>`,El,kl,hl,j,me,xt,wl,de,Tt,Hl,yl,xl,J,ve,bt,Tl,I,It,Le,qt,Pt,bl,Q,ta=`<code class="language-undefined">- Item 1
- Item 2
- Item 3</code>`,Il,Ee,Ct,ql,k,ze,Rt,At,Be,Lt,zt,Me,Bt,Pl,Cl,Rl,K,ke,Mt,Al,q,Ot,Oe,Gt,St,Ll,V,sa='<code class="language-undefined">&gt; This is a quote</code>',zl,he,Dt,Bl,we,Ge,Yt,Ml,X,He,$t,Ol,P,Z,Qt,Se,Ft;return{c(){_=i("h2"),d=i("a"),h=r("Text Writing"),T=n(),m=i("p"),E=r("It is easy to write in GFMD. Just write simply like text and use the below simple \u201Ctagging\u201D to mark the text and you are good to go!"),C=n(),ee=i("p"),$l=r("To specify a paragraph, leave 2 spaces at the end of the line"),Ye=n(),R=i("h2"),le=i("a"),Fl=r("Headings"),$e=n(),A=i("pre"),Fe=n(),te=i("p"),Nl=r("will produce"),Ne=n(),L=i("h1"),se=i("a"),Ul=r("Sample H1"),Ue=n(),z=i("h2"),ae=i("a"),Wl=r("Sample H2"),We=n(),B=i("h3"),ie=i("a"),jl=r("Sample H3"),je=n(),Je=i("hr"),Qe=n(),M=i("h2"),oe=i("a"),Jl=r("Horizontal Rules"),Ke=n(),b=i("p"),Ql=r("Horizontal rule is created using "),xe=i("code"),Kl=r("---"),Vl=r(" on a line by itself."),Ve=n(),Xe=i("hr"),Ze=n(),O=i("h2"),fe=i("a"),Xl=r("Coding - Block"),ge=n(),G=i("pre"),el=n(),re=i("p"),Zl=r("will produce"),ll=n(),S=i("pre"),tl=n(),w=i("p"),gl=r("Note: You can specify the different syntax highlighting based on the coding language eg. ruby, sh (for shell), php, etc"),et=i("br"),lt=r(`
Note: You must leave a blank line before the `),Te=i("code"),tt=r("```"),sl=n(),D=i("h2"),pe=i("a"),st=r("Coding - In-line"),al=n(),Y=i("p"),at=r("You can produce inline-code by enclosing the code with "),be=i("code"),it=r("``"),il=n(),$=i("pre"),ol=n(),ne=i("p"),ot=r("will produce"),fl=n(),F=i("p"),ft=r("This is some code: "),Ie=i("code"),rt=r("echo something"),rl=n(),pl=i("hr"),nl=n(),N=i("h2"),ue=i("a"),pt=r("Text Formatting"),ul=n(),v=i("p"),qe=i("strong"),nt=r("Bold Text"),ut=r(" is done using "),Pe=i("code"),ct=r("**Bold Text**"),_t=i("br"),mt=n(),Ce=i("em"),dt=r("Italic Text"),vt=r(" is done using "),Re=i("code"),Et=r("*Italic Text*"),cl=n(),_l=i("hr"),ml=n(),U=i("h2"),ce=i("a"),kt=r("Hyperlinks"),dl=n(),H=i("ul"),_e=i("li"),ht=r("mdsvex will automatically detect URL and convert them to links like this "),y=i("a"),wt=r("http://www.futureworkz.com"),Ht=n(),Ae=i("li"),yt=r("To specify a link on a text, do this:"),vl=n(),W=i("pre"),El=n(),kl=i("hr"),hl=n(),j=i("h2"),me=i("a"),xt=r("Escape sequence"),wl=n(),de=i("p"),Tt=r("You can escape using \\ eg. \\`"),Hl=n(),yl=i("hr"),xl=n(),J=i("h2"),ve=i("a"),bt=r("Creating list"),Tl=n(),I=i("p"),It=r("Adding a "),Le=i("code"),qt=r("-"),Pt=r(" will change it into a list:"),bl=n(),Q=i("pre"),Il=n(),Ee=i("p"),Ct=r("will produce"),ql=n(),k=i("ul"),ze=i("li"),Rt=r("Item 1"),At=n(),Be=i("li"),Lt=r("Item 2"),zt=n(),Me=i("li"),Bt=r("Item 3"),Pl=n(),Cl=i("hr"),Rl=n(),K=i("h2"),ke=i("a"),Mt=r("Quoting"),Al=n(),q=i("p"),Ot=r("You can create a quote using "),Oe=i("code"),Gt=r(">"),St=r(":"),Ll=n(),V=i("pre"),zl=n(),he=i("p"),Dt=r("will produce"),Bl=n(),we=i("blockquote"),Ge=i("p"),Yt=r("This is a quote"),Ml=n(),X=i("h2"),He=i("a"),$t=r("Adding Image"),Ol=n(),P=i("figure"),Z=i("img"),Se=i("figcaption"),Ft=r("Branching Concepts"),this.h()},l(e){_=o(e,"H2",{id:!0});var t=f(_);d=o(t,"A",{href:!0});var Kt=f(d);h=p(Kt,"Text Writing"),Kt.forEach(l),t.forEach(l),T=u(e),m=o(e,"P",{});var Vt=f(m);E=p(Vt,"It is easy to write in GFMD. Just write simply like text and use the below simple \u201Ctagging\u201D to mark the text and you are good to go!"),Vt.forEach(l),C=u(e),ee=o(e,"P",{});var Xt=f(ee);$l=p(Xt,"To specify a paragraph, leave 2 spaces at the end of the line"),Xt.forEach(l),Ye=u(e),R=o(e,"H2",{id:!0});var Zt=f(R);le=o(Zt,"A",{href:!0});var gt=f(le);Fl=p(gt,"Headings"),gt.forEach(l),Zt.forEach(l),$e=u(e),A=o(e,"PRE",{class:!0});var aa=f(A);aa.forEach(l),Fe=u(e),te=o(e,"P",{});var es=f(te);Nl=p(es,"will produce"),es.forEach(l),Ne=u(e),L=o(e,"H1",{id:!0});var ls=f(L);se=o(ls,"A",{href:!0});var ts=f(se);Ul=p(ts,"Sample H1"),ts.forEach(l),ls.forEach(l),Ue=u(e),z=o(e,"H2",{id:!0});var ss=f(z);ae=o(ss,"A",{href:!0});var as=f(ae);Wl=p(as,"Sample H2"),as.forEach(l),ss.forEach(l),We=u(e),B=o(e,"H3",{id:!0});var is=f(B);ie=o(is,"A",{href:!0});var os=f(ie);jl=p(os,"Sample H3"),os.forEach(l),is.forEach(l),je=u(e),Je=o(e,"HR",{}),Qe=u(e),M=o(e,"H2",{id:!0});var fs=f(M);oe=o(fs,"A",{href:!0});var rs=f(oe);Jl=p(rs,"Horizontal Rules"),rs.forEach(l),fs.forEach(l),Ke=u(e),b=o(e,"P",{});var Gl=f(b);Ql=p(Gl,"Horizontal rule is created using "),xe=o(Gl,"CODE",{});var ps=f(xe);Kl=p(ps,"---"),ps.forEach(l),Vl=p(Gl," on a line by itself."),Gl.forEach(l),Ve=u(e),Xe=o(e,"HR",{}),Ze=u(e),O=o(e,"H2",{id:!0});var ns=f(O);fe=o(ns,"A",{href:!0});var us=f(fe);Xl=p(us,"Coding - Block"),us.forEach(l),ns.forEach(l),ge=u(e),G=o(e,"PRE",{class:!0});var ia=f(G);ia.forEach(l),el=u(e),re=o(e,"P",{});var cs=f(re);Zl=p(cs,"will produce"),cs.forEach(l),ll=u(e),S=o(e,"PRE",{class:!0});var oa=f(S);oa.forEach(l),tl=u(e),w=o(e,"P",{});var De=f(w);gl=p(De,"Note: You can specify the different syntax highlighting based on the coding language eg. ruby, sh (for shell), php, etc"),et=o(De,"BR",{}),lt=p(De,`
Note: You must leave a blank line before the `),Te=o(De,"CODE",{});var _s=f(Te);tt=p(_s,"```"),_s.forEach(l),De.forEach(l),sl=u(e),D=o(e,"H2",{id:!0});var ms=f(D);pe=o(ms,"A",{href:!0});var ds=f(pe);st=p(ds,"Coding - In-line"),ds.forEach(l),ms.forEach(l),al=u(e),Y=o(e,"P",{});var Nt=f(Y);at=p(Nt,"You can produce inline-code by enclosing the code with "),be=o(Nt,"CODE",{});var vs=f(be);it=p(vs,"``"),vs.forEach(l),Nt.forEach(l),il=u(e),$=o(e,"PRE",{class:!0});var fa=f($);fa.forEach(l),ol=u(e),ne=o(e,"P",{});var Es=f(ne);ot=p(Es,"will produce"),Es.forEach(l),fl=u(e),F=o(e,"P",{});var Ut=f(F);ft=p(Ut,"This is some code: "),Ie=o(Ut,"CODE",{});var ks=f(Ie);rt=p(ks,"echo something"),ks.forEach(l),Ut.forEach(l),rl=u(e),pl=o(e,"HR",{}),nl=u(e),N=o(e,"H2",{id:!0});var hs=f(N);ue=o(hs,"A",{href:!0});var ws=f(ue);pt=p(ws,"Text Formatting"),ws.forEach(l),hs.forEach(l),ul=u(e),v=o(e,"P",{});var x=f(v);qe=o(x,"STRONG",{});var Hs=f(qe);nt=p(Hs,"Bold Text"),Hs.forEach(l),ut=p(x," is done using "),Pe=o(x,"CODE",{});var ys=f(Pe);ct=p(ys,"**Bold Text**"),ys.forEach(l),_t=o(x,"BR",{}),mt=u(x),Ce=o(x,"EM",{});var xs=f(Ce);dt=p(xs,"Italic Text"),xs.forEach(l),vt=p(x," is done using "),Re=o(x,"CODE",{});var Ts=f(Re);Et=p(Ts,"*Italic Text*"),Ts.forEach(l),x.forEach(l),cl=u(e),_l=o(e,"HR",{}),ml=u(e),U=o(e,"H2",{id:!0});var bs=f(U);ce=o(bs,"A",{href:!0});var Is=f(ce);kt=p(Is,"Hyperlinks"),Is.forEach(l),bs.forEach(l),dl=u(e),H=o(e,"UL",{class:!0});var Sl=f(H);_e=o(Sl,"LI",{});var Wt=f(_e);ht=p(Wt,"mdsvex will automatically detect URL and convert them to links like this "),y=o(Wt,"A",{href:!0,rel:!0,class:!0,target:!0});var qs=f(y);wt=p(qs,"http://www.futureworkz.com"),qs.forEach(l),Wt.forEach(l),Ht=u(Sl),Ae=o(Sl,"LI",{});var Ps=f(Ae);yt=p(Ps,"To specify a link on a text, do this:"),Ps.forEach(l),Sl.forEach(l),vl=u(e),W=o(e,"PRE",{class:!0});var ra=f(W);ra.forEach(l),El=u(e),kl=o(e,"HR",{}),hl=u(e),j=o(e,"H2",{id:!0});var Cs=f(j);me=o(Cs,"A",{href:!0});var Rs=f(me);xt=p(Rs,"Escape sequence"),Rs.forEach(l),Cs.forEach(l),wl=u(e),de=o(e,"P",{});var As=f(de);Tt=p(As,"You can escape using \\ eg. \\`"),As.forEach(l),Hl=u(e),yl=o(e,"HR",{}),xl=u(e),J=o(e,"H2",{id:!0});var Ls=f(J);ve=o(Ls,"A",{href:!0});var zs=f(ve);bt=p(zs,"Creating list"),zs.forEach(l),Ls.forEach(l),Tl=u(e),I=o(e,"P",{});var Dl=f(I);It=p(Dl,"Adding a "),Le=o(Dl,"CODE",{});var Bs=f(Le);qt=p(Bs,"-"),Bs.forEach(l),Pt=p(Dl," will change it into a list:"),Dl.forEach(l),bl=u(e),Q=o(e,"PRE",{class:!0});var pa=f(Q);pa.forEach(l),Il=u(e),Ee=o(e,"P",{});var Ms=f(Ee);Ct=p(Ms,"will produce"),Ms.forEach(l),ql=u(e),k=o(e,"UL",{class:!0});var ye=f(k);ze=o(ye,"LI",{});var Os=f(ze);Rt=p(Os,"Item 1"),Os.forEach(l),At=u(ye),Be=o(ye,"LI",{});var Gs=f(Be);Lt=p(Gs,"Item 2"),Gs.forEach(l),zt=u(ye),Me=o(ye,"LI",{});var Ss=f(Me);Bt=p(Ss,"Item 3"),Ss.forEach(l),ye.forEach(l),Pl=u(e),Cl=o(e,"HR",{}),Rl=u(e),K=o(e,"H2",{id:!0});var Ds=f(K);ke=o(Ds,"A",{href:!0});var Ys=f(ke);Mt=p(Ys,"Quoting"),Ys.forEach(l),Ds.forEach(l),Al=u(e),q=o(e,"P",{});var Yl=f(q);Ot=p(Yl,"You can create a quote using "),Oe=o(Yl,"CODE",{});var $s=f(Oe);Gt=p($s,">"),$s.forEach(l),St=p(Yl,":"),Yl.forEach(l),Ll=u(e),V=o(e,"PRE",{class:!0});var na=f(V);na.forEach(l),zl=u(e),he=o(e,"P",{});var Fs=f(he);Dt=p(Fs,"will produce"),Fs.forEach(l),Bl=u(e),we=o(e,"BLOCKQUOTE",{});var Ns=f(we);Ge=o(Ns,"P",{});var Us=f(Ge);Yt=p(Us,"This is a quote"),Us.forEach(l),Ns.forEach(l),Ml=u(e),X=o(e,"H2",{id:!0});var Ws=f(X);He=o(Ws,"A",{href:!0});var js=f(He);$t=p(js,"Adding Image"),js.forEach(l),Ws.forEach(l),Ol=u(e),P=o(e,"FIGURE",{class:!0});var jt=f(P);Z=o(jt,"IMG",{src:!0,alt:!0,title:!0}),Se=o(jt,"FIGCAPTION",{});var Js=f(Se);Ft=p(Js,"Branching Concepts"),Js.forEach(l),jt.forEach(l),this.h()},h(){c(d,"href","#text-writing"),c(_,"id","text-writing"),c(le,"href","#headings"),c(R,"id","headings"),c(A,"class","language-undefined"),c(se,"href","#sample-h1"),c(L,"id","sample-h1"),c(ae,"href","#sample-h2"),c(z,"id","sample-h2"),c(ie,"href","#sample-h3"),c(B,"id","sample-h3"),c(oe,"href","#horizontal-rules"),c(M,"id","horizontal-rules"),c(fe,"href","#coding---block"),c(O,"id","coding---block"),c(G,"class","language-undefined"),c(S,"class","language-ruby"),c(pe,"href","#coding---in-line"),c(D,"id","coding---in-line"),c($,"class","language-undefined"),c(ue,"href","#text-formatting"),c(N,"id","text-formatting"),c(ce,"href","#hyperlinks"),c(U,"id","hyperlinks"),c(y,"href","http://www.futureworkz.com/"),c(y,"rel","noopener"),c(y,"class","text-link"),c(y,"target","_blank"),c(H,"class","list"),c(W,"class","language-undefined"),c(me,"href","#escape-sequence"),c(j,"id","escape-sequence"),c(ve,"href","#creating-list"),c(J,"id","creating-list"),c(Q,"class","language-undefined"),c(k,"class","list"),c(ke,"href","#quoting"),c(K,"id","quoting"),c(V,"class","language-undefined"),c(He,"href","#adding-image"),c(X,"id","adding-image"),Ha(Z.src,Qt="http://git-scm.com/figures/18333fig0319-tn.png")||c(Z,"src",Qt),c(Z,"alt","Branching Concepts"),c(Z,"title","Branching Map"),c(P,"class","rehype-figure")},m(e,t){s(e,_,t),a(_,d),a(d,h),s(e,T,t),s(e,m,t),a(m,E),s(e,C,t),s(e,ee,t),a(ee,$l),s(e,Ye,t),s(e,R,t),a(R,le),a(le,Fl),s(e,$e,t),s(e,A,t),A.innerHTML=Xs,s(e,Fe,t),s(e,te,t),a(te,Nl),s(e,Ne,t),s(e,L,t),a(L,se),a(se,Ul),s(e,Ue,t),s(e,z,t),a(z,ae),a(ae,Wl),s(e,We,t),s(e,B,t),a(B,ie),a(ie,jl),s(e,je,t),s(e,Je,t),s(e,Qe,t),s(e,M,t),a(M,oe),a(oe,Jl),s(e,Ke,t),s(e,b,t),a(b,Ql),a(b,xe),a(xe,Kl),a(b,Vl),s(e,Ve,t),s(e,Xe,t),s(e,Ze,t),s(e,O,t),a(O,fe),a(fe,Xl),s(e,ge,t),s(e,G,t),G.innerHTML=Zs,s(e,el,t),s(e,re,t),a(re,Zl),s(e,ll,t),s(e,S,t),S.innerHTML=gs,s(e,tl,t),s(e,w,t),a(w,gl),a(w,et),a(w,lt),a(w,Te),a(Te,tt),s(e,sl,t),s(e,D,t),a(D,pe),a(pe,st),s(e,al,t),s(e,Y,t),a(Y,at),a(Y,be),a(be,it),s(e,il,t),s(e,$,t),$.innerHTML=ea,s(e,ol,t),s(e,ne,t),a(ne,ot),s(e,fl,t),s(e,F,t),a(F,ft),a(F,Ie),a(Ie,rt),s(e,rl,t),s(e,pl,t),s(e,nl,t),s(e,N,t),a(N,ue),a(ue,pt),s(e,ul,t),s(e,v,t),a(v,qe),a(qe,nt),a(v,ut),a(v,Pe),a(Pe,ct),a(v,_t),a(v,mt),a(v,Ce),a(Ce,dt),a(v,vt),a(v,Re),a(Re,Et),s(e,cl,t),s(e,_l,t),s(e,ml,t),s(e,U,t),a(U,ce),a(ce,kt),s(e,dl,t),s(e,H,t),a(H,_e),a(_e,ht),a(_e,y),a(y,wt),a(H,Ht),a(H,Ae),a(Ae,yt),s(e,vl,t),s(e,W,t),W.innerHTML=la,s(e,El,t),s(e,kl,t),s(e,hl,t),s(e,j,t),a(j,me),a(me,xt),s(e,wl,t),s(e,de,t),a(de,Tt),s(e,Hl,t),s(e,yl,t),s(e,xl,t),s(e,J,t),a(J,ve),a(ve,bt),s(e,Tl,t),s(e,I,t),a(I,It),a(I,Le),a(Le,qt),a(I,Pt),s(e,bl,t),s(e,Q,t),Q.innerHTML=ta,s(e,Il,t),s(e,Ee,t),a(Ee,Ct),s(e,ql,t),s(e,k,t),a(k,ze),a(ze,Rt),a(k,At),a(k,Be),a(Be,Lt),a(k,zt),a(k,Me),a(Me,Bt),s(e,Pl,t),s(e,Cl,t),s(e,Rl,t),s(e,K,t),a(K,ke),a(ke,Mt),s(e,Al,t),s(e,q,t),a(q,Ot),a(q,Oe),a(Oe,Gt),a(q,St),s(e,Ll,t),s(e,V,t),V.innerHTML=sa,s(e,zl,t),s(e,he,t),a(he,Dt),s(e,Bl,t),s(e,we,t),a(we,Ge),a(Ge,Yt),s(e,Ml,t),s(e,X,t),a(X,He),a(He,$t),s(e,Ol,t),s(e,P,t),a(P,Z),a(P,Se),a(Se,Ft)},p:ya,d(e){e&&l(_),e&&l(T),e&&l(m),e&&l(C),e&&l(ee),e&&l(Ye),e&&l(R),e&&l($e),e&&l(A),e&&l(Fe),e&&l(te),e&&l(Ne),e&&l(L),e&&l(Ue),e&&l(z),e&&l(We),e&&l(B),e&&l(je),e&&l(Je),e&&l(Qe),e&&l(M),e&&l(Ke),e&&l(b),e&&l(Ve),e&&l(Xe),e&&l(Ze),e&&l(O),e&&l(ge),e&&l(G),e&&l(el),e&&l(re),e&&l(ll),e&&l(S),e&&l(tl),e&&l(w),e&&l(sl),e&&l(D),e&&l(al),e&&l(Y),e&&l(il),e&&l($),e&&l(ol),e&&l(ne),e&&l(fl),e&&l(F),e&&l(rl),e&&l(pl),e&&l(nl),e&&l(N),e&&l(ul),e&&l(v),e&&l(cl),e&&l(_l),e&&l(ml),e&&l(U),e&&l(dl),e&&l(H),e&&l(vl),e&&l(W),e&&l(El),e&&l(kl),e&&l(hl),e&&l(j),e&&l(wl),e&&l(de),e&&l(Hl),e&&l(yl),e&&l(xl),e&&l(J),e&&l(Tl),e&&l(I),e&&l(bl),e&&l(Q),e&&l(Il),e&&l(Ee),e&&l(ql),e&&l(k),e&&l(Pl),e&&l(Cl),e&&l(Rl),e&&l(K),e&&l(Al),e&&l(q),e&&l(Ll),e&&l(V),e&&l(zl),e&&l(he),e&&l(Bl),e&&l(we),e&&l(Ml),e&&l(X),e&&l(Ol),e&&l(P)}}}function ba(g){let _,d;const h=[g[0],Vs];let T={$$slots:{default:[Ta]},$$scope:{ctx:g}};for(let m=0;m<h.length;m+=1)T=Jt(T,h[m]);return _=new xa({props:T}),{c(){ma(_.$$.fragment)},l(m){da(_.$$.fragment,m)},m(m,E){va(_,m,E),d=!0},p(m,[E]){const C=E&1?Ea(h,[E&1&&Qs(m[0]),E&0&&Qs(Vs)]):{};E&2&&(C.$$scope={dirty:E,ctx:m}),_.$set(C)},i(m){d||(ka(_.$$.fragment,m),d=!0)},o(m){ha(_.$$.fragment,m),d=!1},d(m){wa(_,m)}}}const Vs={title:"Markdown cheatsheet",date:"2022-08-15",category:"docs",tags:["md"]};function Ia(g,_,d){return g.$$set=h=>{d(0,_=Jt(Jt({},_),Ks(h)))},_=Ks(_),[_]}class Ca extends ua{constructor(_){super(),ca(this,_,Ia,ba,_a,{})}}export{Ca as default,Vs as metadata};
